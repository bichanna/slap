/* Generated by the Nim Compiler v1.6.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI587202614 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570426650 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI603979787 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI603980847 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1073741831 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1073741832 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1073741830 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI603980537 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI603981885 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555132 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555142 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI620756997 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI620756996 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI620757013 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI620757010 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI620757007 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI620756999 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1090519043 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI620756998 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1090519062 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1090519059 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1090519056 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1090519048 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187480 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1090519101 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1090519098 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1090519095 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1090519046 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1090519087 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1090519047 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1090519045 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1090519085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1090519082 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1090519079 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1090519071 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1056964626 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964623 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1056964620 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964612 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964611 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1090519070 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1040187421 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1040187418 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1040187410 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187395 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1040187409 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1040187408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1040187407 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187404 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI1040187406 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187405 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1040187403 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1090519068 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1090519065 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1090519064 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1107296437 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1107296432 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1023410255 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410254 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410187 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410253 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI587203440 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410204 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI587203439 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410196 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410247 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410240 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410232 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410228 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410227 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410224 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410215 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410226 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410230 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410229 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI587202884 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI587202739 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410252 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410251 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410250 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI654311427 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI587203123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410249 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410248 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410239 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410246 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410242 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410201 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI587203299 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410243 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410245 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410244 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410237 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410236 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI587202596 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI587202607 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI587203480 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410210 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI587203352 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410258 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410259 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410256 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410257 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI587202718 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI587202717 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410223 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410222 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410221 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI587202680 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410220 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410219 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410216 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410225 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410234 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410218 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410214 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1023410217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410238 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410197 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI587202565 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI587202564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI587202563 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI587202567 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI922747360 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555126 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555115 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI889202375 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI889202854 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554457 = {size: 0,kind: 32,base: null,node: null,finalizer: null};
var NTI989855748 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI989855751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI989855749 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI570426076 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570426075 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555919 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555919 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554440, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554440, name: "Field2", sons: null}]};
NTI33555919.node = NNI33555919;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI989855748 = {kind: 2, offset: 0, typ: null, name: null, len: 64, sons: {"0": {kind: 1, offset: 0, typ: NTI989855748, name: "INT", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI989855748, name: "FLOAT", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI989855748, name: "STRING", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI989855748, name: "IDENTIFIER", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI989855748, name: "LEFT_PAREN", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI989855748, name: "RIGHT_PAREN", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI989855748, name: "LEFT_BRACE", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI989855748, name: "RIGHT_BRACE", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI989855748, name: "LEFT_BRACKET", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI989855748, name: "RIGHT_BRACKET", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI989855748, name: "COLON", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI989855748, name: "SEMICOLON", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI989855748, name: "PLUS", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI989855748, name: "PLUS_PLUS", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI989855748, name: "PLUS_EQUAL", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI989855748, name: "MINUS", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI989855748, name: "MINUS_MINUS", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI989855748, name: "MINUS_EQUAL", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI989855748, name: "TILDE", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI989855748, name: "STAR", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI989855748, name: "STAR_EQUAL", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI989855748, name: "MODULO", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI989855748, name: "SLASH", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI989855748, name: "SLASH_EQUAL", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI989855748, name: "POUND", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI989855748, name: "AT", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI989855748, name: "CARET", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI989855748, name: "COMMA", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI989855748, name: "BANG", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI989855748, name: "LEFT_ARROW", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI989855748, name: "RIGHT_ARROW", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI989855748, name: "FAT_RIGHT_ARROW", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI989855748, name: "EQUALS", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI989855748, name: "EQUAL_EQUAL", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI989855748, name: "GREATER_THAN_OR_EQUAL", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI989855748, name: "GREATER_THAN", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI989855748, name: "LESS_THAN_OR_EQUAL", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI989855748, name: "LESS_THAN", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI989855748, name: "BANG_EQUAL", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI989855748, name: "NEW_LINE", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI989855748, name: "DOUBLE_DOT", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI989855748, name: "DOT", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI989855748, name: "EOF", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI989855748, name: "def", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI989855748, name: "class", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI989855748, name: "static", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI989855748, name: "and", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI989855748, name: "let", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI989855748, name: "const", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI989855748, name: "or", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI989855748, name: "if", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI989855748, name: "elif", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI989855748, name: "else", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI989855748, name: "for", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI989855748, name: "super", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI989855748, name: "while", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI989855748, name: "self", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI989855748, name: "return", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI989855748, name: "continue", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI989855748, name: "break", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI989855748, name: "true", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI989855748, name: "false", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI989855748, name: "null", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI989855748, name: "import", len: 0, sons: null}}};
NTI989855748.node = NNI989855748;
var NNI989855751 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI989855748, name: "kind", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554439, name: "value", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554456, name: "line", sons: null}, 
{kind: 1, offset: "sId", len: 0, typ: NTI33554457, name: "sId", sons: null}]};
NTI989855751.node = NNI989855751;
NTI989855751.base = NTI33555083;
NTI989855749.base = NTI989855751;
NTI570426076.base = NTI989855749;
var NNI570426075 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tokens", len: 0, typ: NTI570426076, name: "tokens", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI33554456, name: "current", sons: null}, 
{kind: 1, offset: "line", len: 0, typ: NTI33554456, name: "line", sons: null}]};
NTI570426075.node = NNI570426075;
var NNI889202854 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI889202375, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI889202854.node = NNI889202854;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
var NNI33555115 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555115.node = NNI33555115;
NTI33555115.base = NTI33555114;
var NNI33555126 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555126.node = NNI33555126;
NTI33555126.base = NTI33555125;
NTI922747360.base = NTI33554439;
NTI587202567.base = NTI989855749;
NTI587202564.base = NTI989855749;
var NNI1023410238 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1023410238.node = NNI1023410238;
NTI1023410238.base = NTI33555083;
NTI1023410197.base = NTI1023410238;
NTI587202565.base = NTI1023410197;
var NNI587202563 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tokens", len: 0, typ: NTI587202564, name: "tokens", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI33554456, name: "current", sons: null}, 
{kind: 1, offset: "loopDepth", len: 0, typ: NTI33554456, name: "loopDepth", sons: null}, 
{kind: 1, offset: "statements", len: 0, typ: NTI587202565, name: "statements", sons: null}]};
NTI587202563.node = NNI587202563;
var NNI1023410214 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1023410214.node = NNI1023410214;
NTI1023410214.base = NTI33555083;
NTI1023410179.base = NTI1023410214;
var NNI1023410217 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "operator", len: 0, typ: NTI989855749, name: "operator", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI1023410179, name: "right", sons: null}]};
NTI1023410217.node = NNI1023410217;
NTI1023410217.base = NTI1023410214;
var NNI1023410218 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI989855748, name: "kind", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554439, name: "value", sons: null}]};
NTI1023410218.node = NNI1023410218;
NTI1023410218.base = NTI1023410214;
var NNI1023410234 = {kind: 1, offset: "keyword", len: 0, typ: NTI989855749, name: "keyword", sons: null};
NTI1023410234.node = NNI1023410234;
NTI1023410234.base = NTI1023410214;
var NNI1023410233 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "keyword", len: 0, typ: NTI989855749, name: "keyword", sons: null}, 
{kind: 1, offset: "classMethod", len: 0, typ: NTI989855749, name: "classMethod", sons: null}]};
NTI1023410233.node = NNI1023410233;
NTI1023410233.base = NTI1023410214;
var NNI1023410225 = {kind: 1, offset: "name", len: 0, typ: NTI989855749, name: "name", sons: null};
NTI1023410225.node = NNI1023410225;
NTI1023410225.base = NTI1023410214;
var NNI1023410216 = {kind: 1, offset: "expression", len: 0, typ: NTI1023410179, name: "expression", sons: null};
NTI1023410216.node = NNI1023410216;
NTI1023410216.base = NTI1023410214;
NTI1023410220.base = NTI1023410179;
var NNI1023410219 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "values", len: 0, typ: NTI1023410220, name: "values", sons: null}, 
{kind: 1, offset: "keyword", len: 0, typ: NTI989855749, name: "keyword", sons: null}]};
NTI1023410219.node = NNI1023410219;
NTI1023410219.base = NTI1023410214;
NTI587202680.base = NTI1023410179;
NTI1023410222.base = NTI1023410179;
NTI1023410223.base = NTI1023410179;
var NNI1023410221 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "keys", len: 0, typ: NTI1023410222, name: "keys", sons: null}, 
{kind: 1, offset: "values", len: 0, typ: NTI1023410223, name: "values", sons: null}, 
{kind: 1, offset: "keyword", len: 0, typ: NTI989855749, name: "keyword", sons: null}]};
NTI1023410221.node = NNI1023410221;
NTI1023410221.base = NTI1023410214;
NTI587202717.base = NTI1023410179;
NTI587202718.base = NTI1023410179;
var NNI1023410257 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "paramName", len: 0, typ: NTI989855749, name: "paramName", sons: null}, 
{kind: 1, offset: "default", len: 0, typ: NTI1023410179, name: "default", sons: null}]};
NTI1023410257.node = NNI1023410257;
var NNI1023410256 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1023410256.node = NNI1023410256;
NTI1023410256.base = NTI33555083;
NTI1023410257.base = NTI1023410256;
var NNI1023410259 = {kind: 1, offset: "paramName", len: 0, typ: NTI989855749, name: "paramName", sons: null};
NTI1023410259.node = NNI1023410259;
NTI1023410259.base = NTI1023410256;
var NNI1023410258 = {kind: 1, offset: "paramName", len: 0, typ: NTI989855749, name: "paramName", sons: null};
NTI1023410258.node = NNI1023410258;
NTI1023410258.base = NTI1023410256;
NTI1023410210.base = NTI1023410256;
NTI587203352.base = NTI1023410210;
NTI587203480.base = NTI1023410197;
NTI587202607.base = NTI1023410210;
NTI587202596.base = NTI1023410197;
NTI1023410236.base = NTI1023410210;
NTI1023410237.base = NTI1023410197;
var NNI1023410235 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parameters", len: 0, typ: NTI1023410236, name: "parameters", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1023410237, name: "body", sons: null}]};
NTI1023410235.node = NNI1023410235;
NTI1023410235.base = NTI1023410214;
NTI1023410245.base = NTI1023410197;
var NNI1023410244 = {kind: 1, offset: "statements", len: 0, typ: NTI1023410245, name: "statements", sons: null};
NTI1023410244.node = NNI1023410244;
NTI1023410244.base = NTI1023410238;
var NNI1023410243 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "condition", len: 0, typ: NTI1023410179, name: "condition", sons: null}, 
{kind: 1, offset: "thenBranch", len: 0, typ: NTI1023410197, name: "thenBranch", sons: null}]};
NTI1023410243.node = NNI1023410243;
NTI1023410243.base = NTI1023410238;
NTI1023410201.base = NTI1023410243;
NTI587203299.base = NTI1023410201;
NTI1023410242.base = NTI1023410201;
var NNI1023410241 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "condition", len: 0, typ: NTI1023410179, name: "condition", sons: null}, 
{kind: 1, offset: "thenBranch", len: 0, typ: NTI1023410197, name: "thenBranch", sons: null}, 
{kind: 1, offset: "elifBranches", len: 0, typ: NTI1023410242, name: "elifBranches", sons: null}, 
{kind: 1, offset: "elseBranch", len: 0, typ: NTI1023410197, name: "elseBranch", sons: null}]};
NTI1023410241.node = NNI1023410241;
NTI1023410241.base = NTI1023410238;
var NNI1023410246 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "condition", len: 0, typ: NTI1023410179, name: "condition", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1023410197, name: "body", sons: null}, 
{kind: 1, offset: "keyword", len: 0, typ: NTI989855749, name: "keyword", sons: null}]};
NTI1023410246.node = NNI1023410246;
NTI1023410246.base = NTI1023410238;
var NNI1023410239 = {kind: 1, offset: "expression", len: 0, typ: NTI1023410179, name: "expression", sons: null};
NTI1023410239.node = NNI1023410239;
NTI1023410239.base = NTI1023410238;
var NNI1023410248 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "keyword", len: 0, typ: NTI989855749, name: "keyword", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI1023410179, name: "value", sons: null}]};
NTI1023410248.node = NNI1023410248;
NTI1023410248.base = NTI1023410238;
var NNI1023410249 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1023410249.node = NNI1023410249;
NTI1023410249.base = NTI1023410238;
NTI587203123.base = NTI654311427;
NTI1023410251.base = NTI654311427;
var NNI1023410250 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI1023410179, name: "name", sons: null}, 
{kind: 1, offset: "keyword", len: 0, typ: NTI989855749, name: "keyword", sons: null}, 
{kind: 1, offset: "imports", len: 0, typ: NTI1023410251, name: "imports", sons: null}]};
NTI1023410250.node = NNI1023410250;
NTI1023410250.base = NTI1023410238;
var NNI1023410252 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1023410252.node = NNI1023410252;
NTI1023410252.base = NTI1023410238;
NTI587202739.base = NTI1023410197;
NTI587202884.base = NTI1023410179;
NTI1023410230.base = NTI1023410179;
var NNI1023410229 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "callee", len: 0, typ: NTI1023410179, name: "callee", sons: null}, 
{kind: 1, offset: "paren", len: 0, typ: NTI989855749, name: "paren", sons: null}, 
{kind: 1, offset: "arguments", len: 0, typ: NTI1023410230, name: "arguments", sons: null}]};
NTI1023410229.node = NNI1023410229;
NTI1023410229.base = NTI1023410214;
var NNI1023410231 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "instance", len: 0, typ: NTI1023410179, name: "instance", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI989855749, name: "name", sons: null}]};
NTI1023410231.node = NNI1023410231;
NTI1023410231.base = NTI1023410214;
var NNI1023410226 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "variable", len: 0, typ: NTI1023410179, name: "variable", sons: null}, 
{kind: 1, offset: "indexOrKey", len: 0, typ: NTI1023410179, name: "indexOrKey", sons: null}, 
{kind: 1, offset: "token", len: 0, typ: NTI989855749, name: "token", sons: null}]};
NTI1023410226.node = NNI1023410226;
NTI1023410226.base = NTI1023410214;
var NNI1023410215 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "left", len: 0, typ: NTI1023410179, name: "left", sons: null}, 
{kind: 1, offset: "operator", len: 0, typ: NTI989855749, name: "operator", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI1023410179, name: "right", sons: null}]};
NTI1023410215.node = NNI1023410215;
NTI1023410215.base = NTI1023410214;
var NNI1023410224 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "left", len: 0, typ: NTI1023410179, name: "left", sons: null}, 
{kind: 1, offset: "operator", len: 0, typ: NTI989855749, name: "operator", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI1023410179, name: "right", sons: null}]};
NTI1023410224.node = NNI1023410224;
NTI1023410224.base = NTI1023410214;
var NNI1023410227 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI989855749, name: "name", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI1023410179, name: "value", sons: null}]};
NTI1023410227.node = NNI1023410227;
NTI1023410227.base = NTI1023410214;
var NNI1023410228 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "variable", len: 0, typ: NTI1023410179, name: "variable", sons: null}, 
{kind: 1, offset: "indexOrKey", len: 0, typ: NTI1023410179, name: "indexOrKey", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI1023410179, name: "value", sons: null}, 
{kind: 1, offset: "token", len: 0, typ: NTI989855749, name: "token", sons: null}]};
NTI1023410228.node = NNI1023410228;
NTI1023410228.base = NTI1023410214;
var NNI1023410232 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "instance", len: 0, typ: NTI1023410179, name: "instance", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI989855749, name: "name", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI1023410179, name: "value", sons: null}]};
NTI1023410232.node = NNI1023410232;
NTI1023410232.base = NTI1023410214;
var NNI1023410240 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI989855749, name: "name", sons: null}, 
{kind: 1, offset: "init", len: 0, typ: NTI1023410179, name: "init", sons: null}]};
NTI1023410240.node = NNI1023410240;
NTI1023410240.base = NTI1023410238;
NTI1023410196.base = NTI1023410235;
var NNI1023410247 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI989855749, name: "name", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI1023410196, name: "function", sons: null}]};
NTI1023410247.node = NNI1023410247;
NTI1023410247.base = NTI1023410238;
NTI1023410204.base = NTI1023410247;
NTI587203439.base = NTI1023410204;
NTI587203440.base = NTI1023410204;
NTI1023410187.base = NTI1023410225;
NTI1023410254.base = NTI1023410204;
NTI1023410255.base = NTI1023410204;
var NNI1023410253 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI989855749, name: "name", sons: null}, 
{kind: 1, offset: "superclass", len: 0, typ: NTI1023410187, name: "superclass", sons: null}, 
{kind: 1, offset: "methods", len: 0, typ: NTI1023410254, name: "methods", sons: null}, 
{kind: 1, offset: "classMethods", len: 0, typ: NTI1023410255, name: "classMethods", sons: null}]};
NTI1023410253.node = NNI1023410253;
NTI1023410253.base = NTI1023410238;
var NNI1107296432 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1107296432.node = NNI1107296432;
var NNI1107296437 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1107296437.node = NNI1107296437;
var NNI1090519064 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "call", len: 0, typ: NTI1090519065, name: "call", sons: null}, 
{kind: 1, offset: "arity", len: 0, typ: NTI1090519068, name: "arity", sons: null}]};
NTI1090519064.node = NNI1090519064;
var NNI1040187403 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1040187403.node = NNI1040187403;
NTI1040187403.base = NTI33555083;
NTI1090519064.base = NTI1040187403;
var NNI1040187426 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1040187426.node = NNI1040187426;
NTI1040187426.base = NTI1040187403;
var NNI1040187405 = {kind: 1, offset: "value", len: 0, typ: NTI33554456, name: "value", sons: null};
NTI1040187405.node = NNI1040187405;
NTI1040187405.base = NTI1040187403;
var NNI1040187406 = {kind: 1, offset: "value", len: 0, typ: NTI33554435, name: "value", sons: null};
NTI1040187406.node = NNI1040187406;
NTI1040187406.base = NTI1040187403;
var NNI1040187404 = {kind: 1, offset: "value", len: 0, typ: NTI33554439, name: "value", sons: null};
NTI1040187404.node = NNI1040187404;
NTI1040187404.base = NTI1040187403;
var NNI1040187407 = {kind: 1, offset: "value", len: 0, typ: NTI33554466, name: "value", sons: null};
NTI1040187407.node = NNI1040187407;
NTI1040187407.base = NTI1040187403;
NTI1040187395.base = NTI1040187403;
NTI1040187409.base = NTI1040187395;
var NNI1040187408 = {kind: 1, offset: "values", len: 0, typ: NTI1040187409, name: "values", sons: null};
NTI1040187408.node = NNI1040187408;
NTI1040187408.base = NTI1040187403;
var NNI1040187424 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI654311427, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1040187395, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1040187395, name: "Field2", sons: null}]};
NTI1040187424.node = NNI1040187424;
NTI1040187421.base = NTI1040187424;
var NNI1040187418 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1040187421, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI1040187418.node = NNI1040187418;
var NNI1040187410 = {kind: 1, offset: "map", len: 0, typ: NTI1040187418, name: "map", sons: null};
NTI1040187410.node = NNI1040187410;
NTI1040187410.base = NTI1040187403;
var NNI1056964626 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI654311427, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI654311427, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1040187395, name: "Field2", sons: null}]};
NTI1056964626.node = NNI1056964626;
NTI1056964623.base = NTI1056964626;
var NNI1056964620 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1056964623, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI1056964620.node = NNI1056964620;
var NNI1056964612 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "values", len: 0, typ: NTI1056964620, name: "values", sons: null}, 
{kind: 1, offset: "enclosing", len: 0, typ: NTI1056964611, name: "enclosing", sons: null}]};
NTI1056964612.node = NNI1056964612;
NTI1056964611.base = NTI1056964612;
var NNI1090519070 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "isInitFunc", len: 0, typ: NTI33554466, name: "isInitFunc", sons: null}, 
{kind: 1, offset: "declaration", len: 0, typ: NTI1023410196, name: "declaration", sons: null}, 
{kind: 1, offset: "closure", len: 0, typ: NTI1056964611, name: "closure", sons: null}]};
NTI1090519070.node = NNI1090519070;
NTI1090519070.base = NTI1090519064;
NTI1090519045.base = NTI1090519070;
var NNI1090519085 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI654311427, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1090519045, name: "Field2", sons: null}]};
NTI1090519085.node = NNI1090519085;
NTI1090519082.base = NTI1090519085;
var NNI1090519079 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1090519082, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI1090519079.node = NNI1090519079;
NTI1090519046.base = NTI1090519071;
var NNI1090519101 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI654311427, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1040187395, name: "Field2", sons: null}]};
NTI1090519101.node = NNI1090519101;
NTI1090519098.base = NTI1090519101;
var NNI1090519095 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1090519098, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI1090519095.node = NNI1090519095;
var NNI1090519087 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "class", len: 0, typ: NTI1090519046, name: "class", sons: null}, 
{kind: 1, offset: "fields", len: 0, typ: NTI1090519095, name: "fields", sons: null}]};
NTI1090519087.node = NNI1090519087;
NTI1090519087.base = NTI1040187403;
NTI1090519047.base = NTI1090519087;
var NNI1090519071 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "methods", len: 0, typ: NTI1090519079, name: "methods", sons: null}, 
{kind: 1, offset: "cinstance", len: 0, typ: NTI1090519047, name: "cinstance", sons: null}, 
{kind: 1, offset: "superclass", len: 0, typ: NTI1090519046, name: "superclass", sons: null}]};
NTI1090519071.node = NNI1090519071;
NTI1090519071.base = NTI1090519064;
NTI1040187480.base = NTI1040187395;
var NNI1090519062 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI654311427, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1023410179, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554456, name: "Field2", sons: null}]};
NTI1090519062.node = NNI1090519062;
NTI1090519059.base = NTI1090519062;
var NNI1090519056 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1090519059, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI1090519056.node = NNI1090519056;
var NNI1090519048 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "env", len: 0, typ: NTI1056964611, name: "env", sons: null}, 
{kind: 1, offset: "globals", len: 0, typ: NTI1056964611, name: "globals", sons: null}, 
{kind: 1, offset: "locals", len: 0, typ: NTI1090519056, name: "locals", sons: null}]};
NTI1090519048.node = NNI1090519048;
NTI1090519048.base = NTI33555083;
NTI1090519043.base = NTI1090519048;
var NNI620757013 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI654311427, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554466, name: "Field2", sons: null}]};
NTI620757013.node = NNI620757013;
NTI620757010.base = NTI620757013;
var NNI620757007 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI620757010, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI620757007.node = NNI620757007;
NTI620756999.base = NTI620757007;
var NNI620756996 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI620756996, name: "NONE", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI620756996, name: "FUNCTION", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI620756996, name: "METHOD", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI620756996, name: "INITIALIZER", len: 0, sons: null}}};
NTI620756996.node = NNI620756996;
var NNI620756997 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI620756997, name: "CNONE", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI620756997, name: "CLASS", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI620756997, name: "SUBCLASS", len: 0, sons: null}}};
NTI620756997.node = NNI620756997;
var NNI620756998 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "interpreter", len: 0, typ: NTI1090519043, name: "interpreter", sons: null}, 
{kind: 1, offset: "scopes", len: 0, typ: NTI620756999, name: "scopes", sons: null}, 
{kind: 1, offset: "currentFunction", len: 0, typ: NTI620756996, name: "currentFunction", sons: null}, 
{kind: 1, offset: "currentClass", len: 0, typ: NTI620756997, name: "currentClass", sons: null}]};
NTI620756998.node = NNI620756998;
NTI620756998.base = NTI33555083;
var NNI33555142 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555142.node = NNI33555142;
NTI33555142.base = NTI33555113;
var NNI33555132 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555132.node = NNI33555132;
NTI33555132.base = NTI33555113;
NTI603981885.base = NTI33554438;
var NNI603980537 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI603980537.node = NNI603980537;
var NNI1073741830 = {kind: 1, offset: "value", len: 0, typ: NTI1040187395, name: "value", sons: null};
NTI1073741830.node = NNI1073741830;
NTI1073741830.base = NTI33555114;
var NNI1073741832 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1073741832.node = NNI1073741832;
NTI1073741832.base = NTI33555114;
var NNI1073741831 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1073741831.node = NNI1073741831;
NTI1073741831.base = NTI33555114;
var NNI603980847 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI603980847.node = NNI603980847;
NTI603979787.base = NTI33554439;
NTI570426650.base = NTI989855749;
NTI587202614.base = NTI1023410197;

function makeNimstrLit(c_33556802) {
      var result = [];
  for (var i = 0; i < c_33556802.length; ++i) {
    result[i] = c_33556802.charCodeAt(i);
  }
  return result;
  

  
}

function arrayConstr(len_33557180, value_33557181, typ_33557182) {
        var result = new Array(len_33557180);
    for (var i = 0; i < len_33557180; ++i) result[i] = nimCopy(null, value_33557181, typ_33557182);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557141, src_33557142, ti_33557143) {
  var result_33557152 = null;

    switch (ti_33557143.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557132(ti_33557143))) {
      result_33557152 = src_33557142;
      }
      else {
        result_33557152 = [src_33557142[0], src_33557142[1]];
      }
      
      break;
    case 19:
            if (dest_33557141 === null || dest_33557141 === undefined) {
        dest_33557141 = {};
      }
      else {
        for (var key in dest_33557141) { delete dest_33557141[key]; }
      }
      for (var key in src_33557142) { dest_33557141[key] = src_33557142[key]; }
      result_33557152 = dest_33557141;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557143.base == null))) {
      result_33557152 = nimCopy(dest_33557141, src_33557142, ti_33557143.base);
      }
      else {
      if ((ti_33557143.kind == 17)) {
      result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {m_type: ti_33557143} : dest_33557141;
      }
      else {
        result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {} : dest_33557141;
      }
      }
      nimCopyAux(result_33557152, src_33557142, ti_33557143.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557142 === null) {
        result_33557152 = null;
      }
      else {
        if (dest_33557141 === null || dest_33557141 === undefined || dest_33557141.length != src_33557142.length) {
          dest_33557141 = new Array(src_33557142.length);
        }
        result_33557152 = dest_33557141;
        for (var i = 0; i < src_33557142.length; ++i) {
          result_33557152[i] = nimCopy(result_33557152[i], src_33557142[i], ti_33557143.base);
        }
      }
    
      break;
    case 28:
            if (src_33557142 !== null) {
        result_33557152 = src_33557142.slice(0);
      }
    
      break;
    default: 
      result_33557152 = src_33557142;
      break;
    }

  return result_33557152;

}

function mnewString(len_33556894) {
        return new Array(len_33556894);
  

  
}

function chckRange(i_33557190, a_33557191, b_33557192) {
      var Temporary1;

  var result_33557193 = 0;

  BeforeRet: do {
      if (!(a_33557191 <= i_33557190)) Temporary1 = false; else {        Temporary1 = (i_33557190 <= b_33557192);      }    if (Temporary1) {
    result_33557193 = i_33557190;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557193;

}

function chckIndx(i_33557185, a_33557186, b_33557187) {
      var Temporary1;

  var result_33557188 = 0;

  BeforeRet: do {
      if (!(a_33557186 <= i_33557185)) Temporary1 = false; else {        Temporary1 = (i_33557185 <= b_33557187);      }    if (Temporary1) {
    result_33557188 = i_33557185;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557185, a_33557186, b_33557187);
    }
    
  } while (false);

  return result_33557188;

}

function cstrToNimstr(c_33556805) {
      var ln = c_33556805.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556805.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556805.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556808) {
                    var Temporary5;
            var Temporary7;

  var result_33556809 = null;

    var res_33556843 = newSeq_33556826((s_33556808).length);
    var i_33556844 = 0;
    var j_33556845 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556844 < (s_33556808).length)) break Label2;
          var c_33556846 = s_33556808[i_33556844];
          if ((c_33556846 < 128)) {
          res_33556843[j_33556845] = String.fromCharCode(c_33556846);
          i_33556844 += 1;
          }
          else {
            var helper_33556858 = newSeq_33556826(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556859 = c_33556846.toString(16);
                  if ((((code_33556859) == null ? 0 : (code_33556859).length) == 1)) {
                  helper_33556858.push("%0");;
                  }
                  else {
                  helper_33556858.push("%");;
                  }
                  
                  helper_33556858.push(code_33556859);;
                  i_33556844 += 1;
                    if (((s_33556808).length <= i_33556844)) Temporary5 = true; else {                      Temporary5 = (s_33556808[i_33556844] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556846 = s_33556808[i_33556844];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556843[j_33556845] = decodeURIComponent(helper_33556858.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556843[j_33556845] = helper_33556858.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556845 += 1;
        }
    } while (false);
    if (res_33556843.length < j_33556845) { for (var i = res_33556843.length ; i < j_33556845 ; ++i) res_33556843.push(null); }
               else { res_33556843.length = j_33556845; };
    result_33556809 = res_33556843.join("");

  return result_33556809;

}

function raiseException(e_33556668, ename_33556669) {
    e_33556668.name = ename_33556669;
    if ((excHandler == 0)) {
    unhandledException(e_33556668);
    }
    
    e_33556668.trace = nimCopy(null, rawWriteStackTrace_33556632(), NTI33554439);
    throw e_33556668;

  
}

function addInt(a_33556941, b_33556942) {
        var result = a_33556941 + b_33556942;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_33556953, b_33556954) {
        if (b_33556954 == 0) raiseDivByZero();
    if (b_33556954 == -1 && a_33556953 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556953 / b_33556954);
  

  
}

function mulInt(a_33556949, b_33556950) {
        var result = a_33556949 * b_33556950;
    checkOverflowInt(result);
    return result;
  

  
}

function subInt(a_33556945, b_33556946) {
        var result = a_33556945 - b_33556946;
    checkOverflowInt(result);
    return result;
  

  
}

function addChar(x_33557256, c_33557257) {
    x_33557256.push(c_33557257);

  
}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([65, 90], [97, 122]);
    var FormatOpen_419430752 = ["rb", "wb", "w+b", "r+b", "ab"];

function nimCharToStr(x_33556518) {
  var result_33556519 = [];

    result_33556519 = nimCopy(null, mnewString(1), NTI33554439);
    result_33556519[0] = x_33556518;

  return result_33556519;

}
var ConstSet9 = setConstr(13, 10);

function nimMax(a_33556999, b_33557000) {
    var Temporary1;

  var result_33557001 = 0;

  BeforeRet: do {
    if ((b_33557000 <= a_33556999)) {
    Temporary1 = a_33556999;
    }
    else {
    Temporary1 = b_33557000;
    }
    
    result_33557001 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33557001;

}

function nimMin(a_33556995, b_33556996) {
    var Temporary1;

  var result_33556997 = 0;

  BeforeRet: do {
    if ((a_33556995 <= b_33556996)) {
    Temporary1 = a_33556995;
    }
    else {
    Temporary1 = b_33556996;
    }
    
    result_33556997 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556997;

}

function modInt(a_33556957, b_33556958) {
        if (b_33556958 == 0) raiseDivByZero();
    if (b_33556958 == -1 && a_33556957 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556957 % b_33556958);
  

  
}

function eqStrings(a_33556932, b_33556933) {
        if (a_33556932 == b_33556933) return true;
    if (a_33556932 === null && b_33556933.length == 0) return true;
    if (b_33556933 === null && a_33556932.length == 0) return true;
    if ((!a_33556932) || (!b_33556933)) return false;
    var alen = a_33556932.length;
    if (alen != b_33556933.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556932[i] != b_33556933[i]) return false;
    return true;
  

  
}
      var keywords_570426721 = {data: [{Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: -153654969, Field1: makeNimstrLit("while"), Field2: 55}, {Field0: -1780814776, Field1: makeNimstrLit("const"), Field2: 48}, {Field0: 1430125705, Field1: makeNimstrLit("return"), Field2: 57}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 1733861963, Field1: makeNimstrLit("static"), Field2: 45}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 1727035794, Field1: makeNimstrLit("null"), Field2: 62}, {Field0: -1515372845, Field1: makeNimstrLit("and"), Field2: 46}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: -715022825, Field1: makeNimstrLit("false"), Field2: 61}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: -144051554, Field1: makeNimstrLit("class"), Field2: 44}, {Field0: 491396510, Field1: makeNimstrLit("if"), Field2: 50}, {Field0: -511212064, Field1: makeNimstrLit("continue"), Field2: 58}, {Field0: 440359455, Field1: makeNimstrLit("import"), Field2: 63}, {Field0: -176587294, Field1: makeNimstrLit("def"), Field2: 43}, {Field0: 1813602275, Field1: makeNimstrLit("super"), Field2: 54}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 117848935, Field1: makeNimstrLit("or"), Field2: 49}, {Field0: 1271411175, Field1: makeNimstrLit("break"), Field2: 59}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: -1952791762, Field1: makeNimstrLit("elif"), Field2: 51}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 888000370, Field1: makeNimstrLit("true"), Field2: 60}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: -1751311563, Field1: makeNimstrLit("for"), Field2: 53}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: -219850568, Field1: makeNimstrLit("let"), Field2: 47}, {Field0: -269443847, Field1: makeNimstrLit("else"), Field2: 52}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}, {Field0: -2143830595, Field1: makeNimstrLit("self"), Field2: 56}, {Field0: 0, Field1: [], Field2: 0}, {Field0: 0, Field1: [], Field2: 0}], counter: 21};

function isObj(obj_33557239, subclass_33557240) {
  var result_33557241 = false;

  BeforeRet: do {
    var x_33557242 = obj_33557239;
    if ((x_33557242 == subclass_33557240)) {
    result_33557241 = true;
    break BeforeRet;
    }
    
    Label1: do {
        Label2: while (true) {
        if (!!((x_33557242 == subclass_33557240))) break Label2;
          if ((x_33557242 == null)) {
          result_33557241 = false;
          break BeforeRet;
          }
          
          x_33557242 = x_33557242.base;
        }
    } while (false);
    result_33557241 = true;
    break BeforeRet;
  } while (false);

  return result_33557241;

}

function nimBoolToStr(x_33556515) {
  var result_33556516 = [];

    if (x_33556515) {
    result_33556516 = nimCopy(null, makeNimstrLit("true"), NTI33554439);
    }
    else {
      result_33556516 = nimCopy(null, makeNimstrLit("false"), NTI33554439);
    }
    

  return result_33556516;

}
var ConstSet10 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet11 = setConstr([48, 57]);
var ConstSet12 = setConstr([48, 57]);
    var toUpperRanges_889193373 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_889193374 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_889193371 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_889193372 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet13 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet14 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr(101, 69);
var ConstSet18 = setConstr([48, 57]);
var ConstSet19 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557274, number_33557275, number_33557275_Idx, start_33557276) {
    var Temporary1;

  var result_33557277 = 0;

  var F = {procname: "system.nimParseBiggestFloat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/jssys.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 712;
    var sign_33557278 = false;
    F.line = 713;
    var i_33557279 = start_33557276;
    if ((s_33557274[i_33557279] == 43)) {
    F.line = 714;
    i_33557279 += 1;
    }
    else {
    if ((s_33557274[i_33557279] == 45)) {
    F.line = 716;
    sign_33557278 = true;
    F.line = 717;
    i_33557279 += 1;
    }
    }
    if (((s_33557274[i_33557279] == 78) || (s_33557274[i_33557279] == 110))) {
    if (((s_33557274[(i_33557279 + 1)] == 65) || (s_33557274[(i_33557279 + 1)] == 97))) {
    if (((s_33557274[(i_33557279 + 2)] == 78) || (s_33557274[(i_33557279 + 2)] == 110))) {
    if (!((ConstSet13[s_33557274[(i_33557279 + 3)]] != undefined))) {
    F.line = 722;
    number_33557275[number_33557275_Idx] = NaN;
    F.line = 723;
    result_33557277 = ((i_33557279 + 3) - start_33557276);
    break BeforeRet;
    }
    
    }
    
    }
    
    F.line = 724;
    result_33557277 = 0;
    break BeforeRet;
    }
    
    if (((s_33557274[i_33557279] == 73) || (s_33557274[i_33557279] == 105))) {
    if (((s_33557274[(i_33557279 + 1)] == 78) || (s_33557274[(i_33557279 + 1)] == 110))) {
    if (((s_33557274[(i_33557279 + 2)] == 70) || (s_33557274[(i_33557279 + 2)] == 102))) {
    if (!((ConstSet14[s_33557274[(i_33557279 + 3)]] != undefined))) {
    F.line = 729;
    if (sign_33557278) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557275[number_33557275_Idx] = Temporary1;
    F.line = 730;
    result_33557277 = ((i_33557279 + 3) - start_33557276);
    break BeforeRet;
    }
    
    }
    
    }
    
    F.line = 731;
    result_33557277 = 0;
    break BeforeRet;
    }
    
    F.line = 733;
    var buf_33557296 = [];
    if (sign_33557278) {
    F.line = 736;
    addChar(buf_33557296, 45);;
    }
    
    Label2: do {
      F.line = 742;
        Label3: while (true) {
        if (!(ConstSet15[s_33557274[i_33557279]] != undefined)) break Label3;
          F.line = 743;
          addChar(buf_33557296, s_33557274[i_33557279]);;
          F.line = 744;
          i_33557279 += 1;
          Label4: do {
            F.line = 745;
              Label5: while (true) {
              if (!(s_33557274[i_33557279] == 95)) break Label5;
                F.line = 741;
                i_33557279 += 1;
              }
          } while (false);
        }
    } while (false);
    if ((s_33557274[i_33557279] == 46)) {
    F.line = 738;
    addChar(buf_33557296, s_33557274[i_33557279]);;
    F.line = 747;
    i_33557279 += 1;
    Label6: do {
      F.line = 748;
        Label7: while (true) {
        if (!(ConstSet16[s_33557274[i_33557279]] != undefined)) break Label7;
          F.line = 738;
          addChar(buf_33557296, s_33557274[i_33557279]);;
          F.line = 749;
          i_33557279 += 1;
          Label8: do {
            F.line = 750;
              Label9: while (true) {
              if (!(s_33557274[i_33557279] == 95)) break Label9;
                F.line = 741;
                i_33557279 += 1;
              }
          } while (false);
        }
    } while (false);
    }
    
    if (((buf_33557296).length == (sign_33557278 ? 1 : 0))) {
    F.line = 752;
    result_33557277 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet17[s_33557274[i_33557279]] != undefined)) {
    F.line = 738;
    addChar(buf_33557296, s_33557274[i_33557279]);;
    F.line = 754;
    i_33557279 += 1;
    if ((s_33557274[i_33557279] == 43)) {
    F.line = 755;
    i_33557279 += 1;
    }
    else {
    if ((s_33557274[i_33557279] == 45)) {
    F.line = 738;
    addChar(buf_33557296, s_33557274[i_33557279]);;
    F.line = 756;
    i_33557279 += 1;
    }
    }
    if (!((ConstSet18[s_33557274[i_33557279]] != undefined))) {
    F.line = 757;
    result_33557277 = 0;
    break BeforeRet;
    }
    
    Label10: do {
      F.line = 758;
        Label11: while (true) {
        if (!(ConstSet19[s_33557274[i_33557279]] != undefined)) break Label11;
          F.line = 738;
          addChar(buf_33557296, s_33557274[i_33557279]);;
          F.line = 759;
          i_33557279 += 1;
          Label12: do {
            F.line = 760;
              Label13: while (true) {
              if (!(s_33557274[i_33557279] == 95)) break Label13;
                F.line = 741;
                i_33557279 += 1;
              }
          } while (false);
        }
    } while (false);
    }
    
    F.line = 761;
    number_33557275[number_33557275_Idx] = parseFloatNative_33557269(buf_33557296);
    F.line = 762;
    result_33557277 = (i_33557279 - start_33557276);
  } while (false);
  framePtr = F.prev;

  return result_33557277;

}

function negInt(a_33556983) {
  var result_33556984 = 0;

    result_33556984 = (a_33556983 * -1);

  return result_33556984;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: makeNimstrLit("no exception to reraise"), parent: null, m_type: NTI33555132, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556520()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
      var slapStdLibs_603981183 = {data: [{Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}, {Field0: 137888915, Field1: makeNimstrLit("strutils"), Field2: [makeNimstrLit("#\x0A# str.slap\x0A# SLAP\x0A#\x0A# Created by Nobuharu Shimazu on 3/4/2022\x0A#\x0A# Import this file by `import \"strutils\";`\x0A\x0A# str.slap contains the core string library for SLAP.\x0A# This provides a set of utility functions for working with strings and data\x0A# encoded in strings.\x0A\x0A# The lowercase letters \'abcdefghijklmnopqrstuvwxyz\'.\x0Alet AsciiLowercase = \"abcdefghijklmnopqrstuvwxyz\";\x0A\x0A# The uppercase letters \'ABCDEFGHIJKLMNOPQRSTUVWXYZ\'.\x0Alet AsciiUppercase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\x0A\x0A# The concatenation of the AsciiLowercase and AsciiUppercase.\x0Alet AsciiLetters = AsciiLowercase + AsciiUppercase;\x0A\x0A# The string \'0123456789\'\x0Alet Digits = \"0123456789\";\x0A\x0A# substring returns the substring beginning at index \'f\' and ending at index \'t-1\' [f, t)\x0A# signature: substring(x: str, f: int, t: int): str\x0Adef substring(x, f, t) {\x0A    let result = \"\";\x0A    for ($i = f; i < t; i++) result += x@[i];\x0A    return result;\x0A}\x0A\x0A# expand disassembles a string to a list of characters, which are just \x0A# a list of one-character strings.\x0A# signature: expand(x: str): @[str]\x0Adef expand(x) {\x0A    let list = [];\x0A    for ($i = 0; i < len(x); i++) list->append(x@[i]);\x0A    return list;\x0A}\x0A\x0A# fuse concatenates together a list of strings into a single string\x0A# and returns the result, so the original list is not mutated.\x0A# signature: fuse(x: [str]): str\x0Adef fuse(x) {\x0A    let result = \"\";\x0A    for ($i = 0; i < len(x); i++) result += str(x@[i]);\x0A    return result;\x0A}\x0A\x0A# replace replaces all the occurrence of \'target\' with \'repl\'\x0A# and returns the modified string.\x0A# signature: replaceChar(x: str, target: str, repl: str): str\x0Adef replaceChar(x, target, repl) {\x0A    let charList = expand(x);\x0A    for ($i = 0; i < len(charList); i++) {\x0A        if (charList@[i] == target) charList@[i] = repl;\x0A    }\x0A    return fuse(charList);\x0A}\x0A\x0A# endsWith reports whether a string ends with the substring \'suffix\'.\x0A# signature: endsWith(x: str, suffix: str): bool\x0Adef endsWith(x, suffix) {\x0A    let strLen = len(x);\x0A    let n = len(suffix);\x0A    let nMinN = len(x) - n;\x0A    if (n <= strLen and x->substring(nMinN, strLen) == suffix) return true;\x0A    return false;\x0A}\x0A\x0A# startsWith reports whether a string starts with the substring \'prefix\'.\x0A# signature: startsWith(x: str, prefix: str): bool\x0Adef startsWith(x, prefix) {\x0A    let strLen = len(x);\x0A    let n = len(prefix);\x0A    if (n <= strLen and x->substring(0, n) == prefix) return true;\x0A    return false;\x0A}\x0A\x0A"), makeNimstrLit("lib/strlib.slap")]}, {Field0: -571916884, Field1: makeNimstrLit("std"), Field2: [makeNimstrLit("#\x0A# std.slap\x0A# SLAP\x0A#\x0A# Created by Nobuharu Shimazu on 2/22/2022\x0A#\x0A# Import this file by `import \"std\";`\x0A\x0A# std.slap contains the core standard library for SLAP.\x0A\x0A# identity returns its first argument\x0Adef identity(x) {\x0A    return x;\x0A}\x0A\x0A# join concatenates two lists and returns the\x0A# joined list (does not mutate the original lists).\x0A# signature: join(x: @[any], y: @[any]): @[any]\x0Adef join(x, y) {\x0A    let newList = [];\x0A    for ($i = 0; i < len(x); i++) newList->append(x@[i]);\x0A    for ($j = 0; j < len(y); j++) newList->append(y@[j]);\x0A    return newList;\x0A}\x0A\x0A# slice takes a list, and returns a copied \"slice\" of the\x0A# original list from the range [x, y)\x0A# signature: slice(list: @[any], x: int, y: int): @[any]\x0Adef slice(list, x, y) {\x0A    let newList = [];\x0A    for ($i = x; i < y; i++) newList->append(list@[i]);\x0A    return newList;\x0A}\x0A\x0A# areUnique takes a list and reports whether no element of\x0A# the list appears twice in a row. Elements may occur twice\x0A# in the list if they are separated by other elements.\x0A# signature: areUnique(list: @[any]): bool\x0Adef areUnique(list) {\x0A    if (len(list) == 0) return false;\x0A    if (len(list) == 1) return true;\x0A    \x0A    let previous = list@[0];\x0A    for ($i = 1; i < len(list); i++) {\x0A        if (previous == list@[i]) return false;\x0A        previous = list@[i];\x0A    }\x0A    return true;\x0A}\x0A\x0A# uniqueList takes a list and returns a copied list where no element \x0A# of the original list appears twice in a row. Elements may occur twice\x0A# in the list if they are separated by other elements.\x0A# signature: uniqueList(list: @[any]): @[any]\x0Adef uniqueList(list) {\x0A    if (len(list) == 0 or len(list) == 1) return list;\x0A     \x0A    let newList = [];\x0A    let previous = list@[0];\x0A    newList -> append(previous);\x0A    for ($i = 1; i < len(list); i++) {\x0A        if (previous != list@[i]) newList->append(list@[i]);\x0A        previous = list@[i];\x0A    }\x0A    return newList;\x0A}\x0A\x0A# contains reports whether a list contains an item equal to \'y\'.\x0A# signature: contains(x: @[any] | str, y: any): bool\x0Adef contains(x, y) {\x0A    for ($i = 0; i < len(x); i++) {\x0A        if (x@[i] == y) return true;\x0A    }\x0A    return false;\x0A}\x0A\x0A# forEach executes a provided function once for each list element or map element.\x0A# signature: forEach(listOrMap: @[any] | @{any: any}, func: def(any) | def(any, any))\x0Adef forEach(listOrMap, func) {\x0A    if (isList(listOrMap)) {\x0A        let list = listOrMap;\x0A        for ($i = 0; i < len(list); i++) func(list@[i]);\x0A    } elif (isMap(listOrMap)) {\x0A        let mapKeys = keys(listOrMap); # already knows that listOrMap is a map\x0A        for ($i = 0; i < len(mapKeys); i++) func(mapKeys@[i], listOrMap@[mapKeys@[i]]);\x0A    }\x0A}\x0A\x0A# indexOf returns the index of the first item equal to x in a list.\x0A# If nothing matches, it return -1.\x0A# signature: indexOf(list: @[any], x: any): int\x0Adef indexOf(list, x) {\x0A    for ($i = 0; i < len(list); i++) {\x0A        if (list@[i] == x) return i;\x0A    }\x0A    return -1;\x0A}\x0A\x0A# merge concatenates two maps and returns the\x0A# merged map (does not mutate the original maps).\x0A# signature: merge(x: @{any: any}, y: @{any: any}): @{any: any}\x0Adef merge(x, y) {\x0A    let newMap = {};\x0A    let func = def (k, v) => newMap@[k] = v;\x0A\x0A    x -> forEach(func);\x0A    y -> forEach(func);\x0A\x0A    return newMap;\x0A}\x0A\x0A# range returns a list of [start, stop) with optional step\x0A# signature: range(start: int, stop: int, step: int = 1)\x0Adef range(start, stop, step = 1) {\x0A    let list = [];\x0A    if (start < stop) {\x0A        for ($i = start; i < stop; i += step) list->append(i);\x0A    } else {\x0A        for ($i = start; i > stop; i += step) list->append(i);\x0A    }\x0A    return list;\x0A}\x0A\x0A# sum returns the sum of the passed values\x0A# signature: sum(list+: int | float): int | float\x0Adef sum(list+) {\x0A    let sum = 0;\x0A    for ($i = 0; i < len(list); i++) sum += list@[i];\x0A    return sum;\x0A}"), makeNimstrLit("lib/stdlib.slap")]}, {Field0: 449651267, Field1: makeNimstrLit("math"), Field2: [makeNimstrLit("#\x0A# std.slap\x0A# SLAP\x0A#\x0A# Created by Nobuharu Shimazu on 2/22/2022\x0A#\x0A# Import this file by `import \"math\";`\x0A\x0A# math.slap contains math functions.\x0A\x0A# Well, it\'s just pi.\x0Alet Pi = 3.14159265358979323846264338327950288419716939937510;\x0A\x0A# E, the base of the natural logarithm\x0Alet E = 2.71828182845904523536028747135266249775724709369995;\x0A\x0A# abs returns the absolute value of a real number\x0A# signature: abs(n: int | float): int | float\x0Adef abs(n) {\x0A\x09if (n >= 0) return n;\x0A\x09return -n;\x0A}\x0A\x0A# pow returns the value of base b to the power e\x0A# signature: pow(b: int | float, e: int | float): int | float\x0Adef pow(b, e) {\x0A\x09if (e == 0) return 1;\x0A\x09let result = b;\x0A\x09for ($i = 1; i < e; i += 1) result *= b;\x0A\x09return result;\x0A}\x0A\x0A# sqrt returns the square root of n\x0A# signature: sqrt(n: int | float): float\x0Adef sqrt(n) {\x0A\x09let num = n / 2;\x0A\x09let tmp = 0;\x0A\x09while (num != tmp) {\x0A\x09\x09tmp = num;\x0A\x09\x09num = (n / tmp + tmp) / 2;\x0A\x09}\x0A\x09return num;\x0A}\x0A"), makeNimstrLit("lib/mathlib.slap")]}, {Field0: 0, Field1: [], Field2: []}, {Field0: 0, Field1: [], Field2: []}], counter: 3};
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 214;
var objectID_654311586 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module token", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/token.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module token", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/token.nim", line: 0};
framePtr = F;
F.line = 10;
var sourceId_989855747 = [0];
framePtr = F.prev;
var F = {procname: "module token", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/token.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module token", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/token.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module token", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/token.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module error", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/error.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module node", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/node.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module node", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/node.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module node", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/node.nim", line: 0};
framePtr = F;
F.line = 11;
var isRepl_1023410179 = [false];
framePtr = F.prev;
var F = {procname: "module node", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/node.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module node", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/node.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module error", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/error.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module error", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/error.nim", line: 0};
framePtr = F;
F.line = 12;
var sources_1006632973 = [({data: [], counter: 0})];
F.line = 14;
var isTest_1006632974 = [false];
framePtr = F.prev;
var F = {procname: "module error", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/error.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module error", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/error.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module error", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/error.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
F.line = 41;
var source_570426724 = [[]];
F.line = 43;
var inStrInterp_570426725 = [false];
F.line = 44;
var strInterpDepth_570426726 = [0];
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
F.line = 42;
var dontNeedSemicolon_587202617 = [false];
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slaptype", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slaptype", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slaptype", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slaptype", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slaptype", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slaptype", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slaptype", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slaptype", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slaptype", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module slaptype", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module objhash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module env", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exception", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/exception.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exception", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/exception.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exception", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/exception.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exception", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/exception.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreterObj", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreterObj.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreterObj", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreterObj.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreterObj", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreterObj.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreterObj", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreterObj.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreterObj", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreterObj.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreterObj", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreterObj.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module builtin", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module resolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module interpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module main", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/main.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module main", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/main.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module main", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/main.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module main", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/main.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function nextPowerOfTwo_704643248(x_704643249) {
  var result_704643250 = 0;

    result_704643250 = (x_704643249 - 1);
    result_704643250 = (result_704643250 | (result_704643250 >> 16));
    result_704643250 = (result_704643250 | (result_704643250 >> 8));
    result_704643250 = (result_704643250 | (result_704643250 >> 4));
    result_704643250 = (result_704643250 | (result_704643250 >> 2));
    result_704643250 = (result_704643250 | (result_704643250 >> 1));
    result_704643250 += (1 + ((x_704643249 <= 0) ? 1 : 0));

  return result_704643250;

}

function add_33556420(x_33556421, x_33556421_Idx, y_33556422) {
          if (x_33556421[x_33556421_Idx] === null) { x_33556421[x_33556421_Idx] = []; }
      var off = x_33556421[x_33556421_Idx].length;
      x_33556421[x_33556421_Idx].length += y_33556422.length;
      for (var i = 0; i < y_33556422.length; ++i) {
        x_33556421[x_33556421_Idx][off+i] = y_33556422.charCodeAt(i);
      }
    

  
}

function isFatPointer_33557132(ti_33557133) {
  var result_33557134 = false;

  BeforeRet: do {
    result_33557134 = !((ConstSet1[ti_33557133.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557134;

}

function nimCopyAux(dest_33557145, src_33557146, n_33557147) {
    switch (n_33557147.kind) {
    case 0:
      break;
    case 1:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557147.sons.length; i++) {
      nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i]);
    }
    
      break;
    case 3:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
      for (var i = 0; i < n_33557147.sons.length; ++i) {
        nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556755, a_33556756, b_33556757) {
    var Temporary1;

    if ((b_33556757 < a_33556756)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_318767107(i_33556755) || [],makeNimstrLit(" not in ") || [],HEX24_318767107(a_33556756) || [],makeNimstrLit(" .. ") || [],HEX24_318767107(b_33556757) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    F.line = 44;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      F.line = 46;
      var iHEX60gensym4_251658435 = 0;
      F.line = 119;
      var i_436207662 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436207662 < n_251658420)) break Label3;
            F.line = 49;
            iHEX60gensym4_251658435 = i_436207662;
            F.line = 49;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            F.line = 122;
            i_436207662 = addInt(i_436207662, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));
  framePtr = F.prev;

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 113;
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));
  framePtr = F.prev;

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 117;
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);
  framePtr = F.prev;

  
}

function HEX24_318767107(x_318767108) {
  var result_318767109 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 12;
    addInt_251658457(result_318767109, 0, x_318767108);
  framePtr = F.prev;

  return result_318767109[0];

}

function auxWriteStackTrace_33556560(f_33556561) {
          var Temporary3;

  var result_33556562 = [[]];

    var it_33556570 = f_33556561;
    var i_33556571 = 0;
    var total_33556572 = 0;
    var tempFrames_33556573 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555919);
    Label1: do {
        Label2: while (true) {
          if (!!((it_33556570 == null))) Temporary3 = false; else {            Temporary3 = (i_33556571 <= 63);          }        if (!Temporary3) break Label2;
          tempFrames_33556573[i_33556571].Field0 = it_33556570.procname;
          tempFrames_33556573[i_33556571].Field1 = it_33556570.line;
          tempFrames_33556573[i_33556571].Field2 = it_33556570.filename;
          i_33556571 += 1;
          total_33556572 += 1;
          it_33556570 = it_33556570.prev;
        }
    } while (false);
    Label4: do {
        Label5: while (true) {
        if (!!((it_33556570 == null))) break Label5;
          total_33556572 += 1;
          it_33556570 = it_33556570.prev;
        }
    } while (false);
    result_33556562[0] = nimCopy(null, [], NTI33554439);
    if (!((total_33556572 == i_33556571))) {
    result_33556562[0].push.apply(result_33556562[0], makeNimstrLit("("));;
    result_33556562[0].push.apply(result_33556562[0], HEX24_318767107((total_33556572 - i_33556571)));;
    result_33556562[0].push.apply(result_33556562[0], makeNimstrLit(" calls omitted) ...\x0A"));;
    }
    
    Label6: do {
      var j_33556603 = 0;
      var colontmp__436207654 = 0;
      colontmp__436207654 = (i_33556571 - 1);
      var res_436207656 = colontmp__436207654;
      Label7: do {
          Label8: while (true) {
          if (!(0 <= res_436207656)) break Label8;
            j_33556603 = res_436207656;
            result_33556562[0].push.apply(result_33556562[0], cstrToNimstr(tempFrames_33556573[j_33556603].Field2));;
            if ((0 < tempFrames_33556573[j_33556603].Field1)) {
            result_33556562[0].push.apply(result_33556562[0], makeNimstrLit("("));;
            addInt_251658457(result_33556562, 0, tempFrames_33556573[j_33556603].Field1);
            if (false) {
            result_33556562[0].push.apply(result_33556562[0], makeNimstrLit(", "));;
            addInt_251658457(result_33556562, 0, 0);
            }
            
            result_33556562[0].push.apply(result_33556562[0], makeNimstrLit(")"));;
            }
            
            result_33556562[0].push.apply(result_33556562[0], makeNimstrLit(" at "));;
            add_33556420(result_33556562, 0, tempFrames_33556573[j_33556603].Field0);
            result_33556562[0].push.apply(result_33556562[0], makeNimstrLit("\x0A"));;
            res_436207656 -= 1;
          }
      } while (false);
    } while (false);

  return result_33556562[0];

}

function rawWriteStackTrace_33556632() {
  var result_33556633 = [];

    if (!((framePtr == null))) {
    result_33556633 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(auxWriteStackTrace_33556560(framePtr) || []), NTI33554439);
    }
    else {
      result_33556633 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI33554439);
    }
    

  return result_33556633;

}

function newSeq_33556826(len_33556828) {
  var result_33556829 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 680;
    result_33556829 = new Array(len_33556828); for (var i = 0 ; i < len_33556828 ; ++i) { result_33556829[i] = null; }  framePtr = F.prev;

  return result_33556829;

}

function unhandledException(e_33556664) {
    var buf_33556665 = [[]];
    if (!(((e_33556664.message).length == 0))) {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556665[0].push.apply(buf_33556665[0], e_33556664.message);;
    }
    else {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit(" ["));;
    add_33556420(buf_33556665, 0, e_33556664.name);
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("]\x0A"));;
    buf_33556665[0].push.apply(buf_33556665[0], rawWriteStackTrace_33556632());;
    var cbuf_33556666 = toJSStr(buf_33556665[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556666);
  }
  else {
    throw cbuf_33556666;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556939) {
        if (a_33556939 > 2147483647 || a_33556939 < -2147483648) raiseOverflow();
  

  
}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function slotsNeeded_637534250(count_637534251) {
  var result_637534252 = 0;

  var F = {procname: "tables.slotsNeeded", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 34;
    result_637534252 = nextPowerOfTwo_704643248(addInt(divInt(mulInt(count_637534251, 3), 2), 4));
  framePtr = F.prev;

  return result_637534252;

}

function hasJsBigInt_687865899() {
  var result_687865900 = false;

  var F = {procname: "jsutils.hasJsBigInt", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/jsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    result_687865900 = typeof BigInt != 'undefined'
  framePtr = F.prev;

  return result_687865900;

}

function hiXorLoJs_654311509(a_654311510, b_654311511) {
  var result_654311512 = 0n;

  var F = {procname: "hashes.hiXorLoJs", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 136;
    var prod_654311513 = (a_654311510 * b_654311511);
    F.line = 137;
    var mask_654311514 = BigInt("0xffffffffffffffff");
    F.line = 138;
    result_654311512 = ((prod_654311513 >> BigInt("64")) ^ (prod_654311513 & mask_654311514));
  framePtr = F.prev;

  return result_654311512;

}

function hashWangYi1_654311602(x_654311604) {
  var result_654311605 = 0;

  var F = {procname: "hashWangYi1.hashWangYi1", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    if (hasJsBigInt_687865899()) {
    F.line = 178;
    F.line = 142;
    var P0HEX60gensym6_654311624 = BigInt("0xa0761d6478bd642f");
    F.line = 143;
    var P1HEX60gensym6_654311625 = BigInt("0xe7037ed1a0b428db");
    F.line = 144;
    var P58HEX60gensym6_654311626 = BigInt("0xeb44accab455d16d");
    F.line = 145;
    var resHEX60gensym6_654311627 = hiXorLoJs_654311509(hiXorLoJs_654311509(P0HEX60gensym6_654311624, (BigInt(x_654311604) ^ P1HEX60gensym6_654311625)), P58HEX60gensym6_654311626);
    result_654311605 = Number((() => { const i = resHEX60gensym6_654311627, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      F.line = 180;
      result_654311605 = (x_654311604 & 4294967295);
    }
    
  framePtr = F.prev;

  return result_654311605;

}

function hash_654311594(x_654311596) {
  var result_654311597 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 210;
    result_654311597 = hashWangYi1_654311602(x_654311596);
  framePtr = F.prev;

  return result_654311597;

}

function isFilled_637534239(hcode_637534240) {
  var result_637534241 = false;

  var F = {procname: "tables.isFilled", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 22;
    result_637534241 = !((hcode_637534240 == 0));
  framePtr = F.prev;

  return result_637534241;

}

function nextTry_637534242(h_637534243, maxHash_637534244) {
  var result_637534245 = 0;

  var F = {procname: "tables.nextTry", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 25;
    result_637534245 = (addInt(h_637534243, 1) & maxHash_637534244);
  framePtr = F.prev;

  return result_637534245;

}

function rawGet_1006633054(t_1006633057, key_1006633058, hc_1006633059, hc_1006633059_Idx) {
            var Temporary3;

  var result_1006633060 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_1006633059[hc_1006633059_Idx] = hash_654311594(key_1006633058);
    if ((hc_1006633059[hc_1006633059_Idx] == 0)) {
    F.line = 66;
    hc_1006633059[hc_1006633059_Idx] = 314159265;
    }
    
    if (((t_1006633057.data).length == 0)) {
    F.line = 48;
    result_1006633060 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1006633115 = (hc_1006633059[hc_1006633059_Idx] & (t_1006633057.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_1006633057.data[chckIndx(h_1006633115, 0, (t_1006633057.data).length - 1)].Field0)) break Label2;
            if (!(t_1006633057.data[chckIndx(h_1006633115, 0, (t_1006633057.data).length - 1)].Field0 == hc_1006633059[hc_1006633059_Idx])) Temporary3 = false; else {              Temporary3 = (t_1006633057.data[chckIndx(h_1006633115, 0, (t_1006633057.data).length - 1)].Field1 == key_1006633058);            }          if (Temporary3) {
          F.line = 56;
          result_1006633060 = h_1006633115;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1006633115 = nextTry_637534242(h_1006633115, (t_1006633057.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1006633060 = subInt(-1, h_1006633115);
  } while (false);
  framePtr = F.prev;

  return result_1006633060;

}

function sysFatal_218103842(message_218103845) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_218103840(msg_218103841) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/assertions.nim", line: 0};
  framePtr = F;
    F.line = 28;
    sysFatal_218103842(msg_218103841);
  framePtr = F.prev;

  
}

function failedAssertImpl_218103864(msg_218103865) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/assertions.nim", line: 0};
  framePtr = F;
    F.line = 38;
    raiseAssert_218103840(msg_218103865);
  framePtr = F.prev;

  
}

function mustRehash_570426948(t_570426950) {
  var result_570426951 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_570426950.counter < (t_570426950.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_570426951 = ((mulInt((t_570426950.data).length, 2) < mulInt(t_570426950.counter, 3)) || (subInt((t_570426950.data).length, t_570426950.counter) < 4));
  framePtr = F.prev;

  return result_570426951;

}

function rawInsert_570427397(t_570427401, data_570427402, data_570427402_Idx, key_570427403, val_570427404, hc_570427405, h_570427406) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_570427402[data_570427402_Idx][chckIndx(h_570427406, 0, (data_570427402[data_570427402_Idx]).length - 1)].Field1 = key_570427403;
    F.line = 23;
    data_570427402[data_570427402_Idx][chckIndx(h_570427406, 0, (data_570427402[data_570427402_Idx]).length - 1)].Field2 = nimCopy(null, val_570427404, NTI33554439);
    F.line = 24;
    data_570427402[data_570427402_Idx][chckIndx(h_570427406, 0, (data_570427402[data_570427402_Idx]).length - 1)].Field0 = hc_570427405;
  framePtr = F.prev;

  
}

function enlarge_570427103(t_570427106) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 249;
    var n_570427109 = [];
    F.line = 250;
    n_570427109 = new Array(chckRange(mulInt((t_570427106.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_570427106.data).length, 2), 0, 2147483647) ; ++i) { n_570427109[i] = {Field0: 0, Field1: 0, Field2: []}; }    F.line = 251;
    var Temporary1 = t_570427106.data; t_570427106.data = n_570427109; n_570427109 = Temporary1;    Label2: do {
      F.line = 252;
      var i_570427173 = 0;
      F.line = 43;
      var colontmp__436207669 = 0;
      F.line = 252;
      colontmp__436207669 = (n_570427109).length - 1;
      F.line = 65;
      var res_436207671 = 0;
      Label3: do {
        F.line = 66;
          Label4: while (true) {
          if (!(res_436207671 <= colontmp__436207669)) break Label4;
            F.line = 252;
            i_570427173 = res_436207671;
            F.line = 253;
            var eh_570427227 = n_570427109[chckIndx(i_570427173, 0, (n_570427109).length - 1)].Field0;
            if (isFilled_637534239(eh_570427227)) {
            F.line = 255;
            var j_570427231 = (eh_570427227 & (t_570427106.data).length - 1);
            Label5: do {
              F.line = 256;
                Label6: while (true) {
                if (!isFilled_637534239(t_570427106.data[chckIndx(j_570427231, 0, (t_570427106.data).length - 1)].Field0)) break Label6;
                  F.line = 257;
                  j_570427231 = nextTry_637534242(j_570427231, (t_570427106.data).length - 1);
                }
            } while (false);
            F.line = 259;
            rawInsert_570427397(t_570427106, t_570427106, "data", n_570427109[chckIndx(i_570427173, 0, (n_570427109).length - 1)].Field1, n_570427109[chckIndx(i_570427173, 0, (n_570427109).length - 1)].Field2, eh_570427227, j_570427231);
            }
            
            F.line = 68;
            res_436207671 = addInt(res_436207671, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_570427566(t_570427569, key_570427570, hc_570427571) {
  var result_570427572 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_570427569.data).length == 0)) {
    F.line = 48;
    result_570427572 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_570427623 = (hc_570427571 & (t_570427569.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_570427569.data[chckIndx(h_570427623, 0, (t_570427569.data).length - 1)].Field0)) break Label2;
          if (((t_570427569.data[chckIndx(h_570427623, 0, (t_570427569.data).length - 1)].Field0 == hc_570427571) && (t_570427569.data[chckIndx(h_570427623, 0, (t_570427569.data).length - 1)].Field1 == key_570427570))) {
          F.line = 56;
          result_570427572 = h_570427623;
          break BeforeRet;
          }
          
          F.line = 57;
          h_570427623 = nextTry_637534242(h_570427623, (t_570427569.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_570427572 = subInt(-1, h_570427623);
  } while (false);
  framePtr = F.prev;

  return result_570427572;

}

function HEX5BHEX5DHEX3D_570426775(t_570426778, key_570426779, val_570426780) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_570426778.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym17_570426829 = slotsNeeded_637534250(32);
    F.line = 167;
    t_570426778.counter = 0;
    F.line = 168;
    t_570426778.data = new Array(chckRange(correctSizeHEX60gensym17_570426829, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym17_570426829, 0, 2147483647) ; ++i) { t_570426778.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    F.line = 57;
    var hc_570426834 = [0];
    F.line = 58;
    var index_570426841 = rawGet_1006633054(t_570426778, key_570426779, hc_570426834, 0);
    if ((0 <= index_570426841)) {
    F.line = 59;
    t_570426778.data[chckIndx(index_570426841, 0, (t_570426778.data).length - 1)].Field2 = nimCopy(null, val_570426780, NTI33554439);
    }
    else {
      if (((t_570426778.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym20_570426943 = slotsNeeded_637534250(32);
      F.line = 167;
      t_570426778.counter = 0;
      F.line = 168;
      t_570426778.data = new Array(chckRange(correctSizeHEX60gensym20_570426943, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_570426943, 0, 2147483647) ; ++i) { t_570426778.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_570426948(t_570426778)) {
      F.line = 49;
      enlarge_570427103(t_570426778);
      F.line = 50;
      index_570426841 = rawGetKnownHC_570427566(t_570426778, key_570426779, hc_570426834[0]);
      }
      
      F.line = 51;
      index_570426841 = subInt(-1, index_570426841);
      F.line = 52;
      rawInsert_570427397(t_570426778, t_570426778, "data", key_570426779, val_570426780, hc_570426834[0], index_570426841);
      F.line = 60;
      t_570426778.counter = addInt(t_570426778.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function newLexer_570426731(src_570426732, path_570426733) {
  var result_570426734 = ({tokens: [], current: 0, line: 0});

  var F = {procname: "lexer.newLexer", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 54;
    HEX5BHEX5DHEX3D_570426775(sources_1006632973[0], ((sourceId_989855747[0]) | 0), path_570426733);
    F.line = 55;
    source_570426724[0] = nimCopy(null, src_570426732, NTI33554439);
    F.line = 56;
    result_570426734 = nimCopy(result_570426734, {tokens: [], current: 0, line: 0}, NTI570426075);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_570426734;

}

function isAtEnd_570427839(l_570427840) {
  var result_570427841 = false;

  var F = {procname: "lexer.isAtEnd", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 75;
    result_570427841 = ((source_570426724[0]).length <= l_570427840.current);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_570427841;

}

function advance_570427825(l_570427826) {
  var result_570427827 = 0;

  var F = {procname: "lexer.advance", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 66;
    l_570427826.current = addInt(l_570427826.current, 1);
    F.line = 67;
    result_570427827 = source_570426724[0][chckIndx(subInt(l_570427826.current, 1), 0, (source_570426724[0]).length - 1)];
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_570427827;

}

function newToken_989855822(kind_989855823, value_989855824, line_989855825) {
  var result_989855826 = null;

  var F = {procname: "token.newToken", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/token.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 88;
    result_989855826 = {kind: kind_989855823, value: nimCopy(null, value_989855824, NTI33554439), line: line_989855825, sId: sourceId_989855747[0], m_type: NTI989855751};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_989855826;

}

function appendToken_570427842(l_570427843, ttype_570427844, tvalue_570427845) {
  var F = {procname: "lexer.appendToken", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
    F.line = 79;
    l_570427843.tokens.push(newToken_989855822(ttype_570427844, tvalue_570427845, l_570427843.line));;
  framePtr = F.prev;

  
}

function doesMatch_570427856(l_570427857, c_570427858) {
  var result_570427859 = false;

  var F = {procname: "lexer.doesMatch", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
    F.line = 93;
    result_570427859 = true;
    if (isAtEnd_570427839(l_570427857)) {
    F.line = 94;
    result_570427859 = false;
    }
    else {
    if (!((source_570426724[0][chckIndx(l_570427857.current, 0, (source_570426724[0]).length - 1)] == c_570427858))) {
    F.line = 95;
    result_570427859 = false;
    }
    else {
      F.line = 96;
    l_570427857.current = addInt(l_570427857.current, 1);
    }
    }
  framePtr = F.prev;

  return result_570427859;

}

function plusShorthand_570428244(l_570428245) {
  var F = {procname: "lexer.plusShorthand", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
    if (doesMatch_570427856(l_570428245, 61)) {
    F.line = 173;
    appendToken_570427842(l_570428245, 14, []);
    }
    else {
    if (doesMatch_570427856(l_570428245, 43)) {
    F.line = 175;
    appendToken_570427842(l_570428245, 13, []);
    }
    else {
      F.line = 177;
    appendToken_570427842(l_570428245, 12, []);
    }
    }
  framePtr = F.prev;

  
}

function minusShorthand_570428246(l_570428247) {
  var F = {procname: "lexer.minusShorthand", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
    if (doesMatch_570427856(l_570428247, 61)) {
    F.line = 182;
    appendToken_570427842(l_570428247, 17, []);
    }
    else {
    if (doesMatch_570427856(l_570428247, 45)) {
    F.line = 184;
    appendToken_570427842(l_570428247, 16, []);
    }
    else {
    if (doesMatch_570427856(l_570428247, 62)) {
    F.line = 186;
    appendToken_570427842(l_570428247, 30, []);
    }
    else {
      F.line = 188;
    appendToken_570427842(l_570428247, 15, []);
    }
    }}
  framePtr = F.prev;

  
}

function starShorthand_570428248(l_570428249) {
  var F = {procname: "lexer.starShorthand", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
    if (doesMatch_570427856(l_570428249, 61)) {
    F.line = 193;
    appendToken_570427842(l_570428249, 20, []);
    }
    else {
      F.line = 195;
    appendToken_570427842(l_570428249, 19, []);
    }
    
  framePtr = F.prev;

  
}

function slahShorthand_570428250(l_570428251) {
  var F = {procname: "lexer.slahShorthand", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
    if (doesMatch_570427856(l_570428251, 61)) {
    F.line = 200;
    appendToken_570427842(l_570428251, 23, []);
    }
    else {
      F.line = 202;
    appendToken_570427842(l_570428251, 22, []);
    }
    
  framePtr = F.prev;

  
}

function currentChar_570427850(l_570427851) {
  var result_570427852 = 0;

  var F = {procname: "lexer.currentChar", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (isAtEnd_570427839(l_570427851)) {
    F.line = 83;
    result_570427852 = 0;
    break BeforeRet;
    }
    else {
      F.line = 84;
      result_570427852 = source_570426724[0][chckIndx(l_570427851.current, 0, (source_570426724[0]).length - 1)];
      break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_570427852;

}

function nextChar_570427853(l_570427854) {
  var result_570427855 = 0;

  var F = {procname: "lexer.nextChar", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((source_570426724[0]).length <= addInt(l_570427854.current, 1))) {
    F.line = 88;
    result_570427855 = 0;
    break BeforeRet;
    }
    else {
      F.line = 89;
      result_570427855 = source_570426724[0][chckIndx(addInt(l_570427854.current, 1), 0, (source_570426724[0]).length - 1)];
      break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_570427855;

}

function quit_33557573(errormsg_33557574, errorcode_33557575) {
  var F = {procname: "system.quit", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2479;
    rawEcho(errormsg_33557574);
    F.line = 2486;
    exit(errorcode_33557575);
  framePtr = F.prev;

  
}

function parseSaturatedNatural_872415548(s_872415549, b_872415550, b_872415550_Idx, start_872415551) {
      var Temporary1;
          var Temporary4;

  var result_872415552 = 0;

  var F = {procname: "parseutils.parseSaturatedNatural", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 505;
    var i_872415553 = start_872415551;
    if (((i_872415553 < (s_872415549).length) && (s_872415549[chckIndx(i_872415553, 0, (s_872415549).length - 1)] == 43))) {
    F.line = 506;
    i_872415553 = addInt(i_872415553, 1);
    }
    
      if (!(i_872415553 < (s_872415549).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_872415549[chckIndx(i_872415553, 0, (s_872415549).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 508;
    b_872415550[b_872415550_Idx] = 0;
    Label2: do {
      F.line = 509;
        Label3: while (true) {
          if (!(i_872415553 < (s_872415549).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_872415549[chckIndx(i_872415553, 0, (s_872415549).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 510;
          var c_872415572 = subInt(s_872415549[chckIndx(i_872415553, 0, (s_872415549).length - 1)], 48);
          if ((b_872415550[b_872415550_Idx] <= divInt(subInt(2147483647, c_872415572), 10))) {
          F.line = 512;
          b_872415550[b_872415550_Idx] = addInt(mulInt(b_872415550[b_872415550_Idx], 10), c_872415572);
          }
          else {
            F.line = 514;
            b_872415550[b_872415550_Idx] = 2147483647;
          }
          
          F.line = 515;
          i_872415553 = addInt(i_872415553, 1);
          Label5: do {
            F.line = 516;
              Label6: while (true) {
              if (!((i_872415553 < (s_872415549).length) && (s_872415549[chckIndx(i_872415553, 0, (s_872415549).length - 1)] == 95))) break Label6;
                F.line = 516;
                i_872415553 = addInt(i_872415553, 1);
              }
          } while (false);
        }
    } while (false);
    F.line = 517;
    result_872415552 = subInt(i_872415553, start_872415551);
    }
    
  framePtr = F.prev;

  return result_872415552;

}

function HEX5BHEX5D_889195688(s_889195691, x_889195692) {
  var result_889195693 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2560;
    var a_889195695 = x_889195692.a;
    F.line = 2561;
    var L_889195697 = addInt(subInt(subInt((s_889195691).length, x_889195692.b), a_889195695), 1);
    F.line = 2562;
    result_889195693 = nimCopy(null, mnewString(chckRange(L_889195697, 0, 2147483647)), NTI33554439);
    Label1: do {
      F.line = 2563;
      var i_889195702 = 0;
      F.line = 119;
      var i_436207680 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436207680 < L_889195697)) break Label3;
            F.line = 2563;
            i_889195702 = i_436207680;
            F.line = 2563;
            result_889195693[chckIndx(i_889195702, 0, (result_889195693).length - 1)] = s_889195691[chckIndx(addInt(i_889195702, a_889195695), 0, (s_889195691).length - 1)];
            F.line = 122;
            i_436207680 = addInt(i_436207680, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_889195693;

}

function HEX2EHEX2E_889195661(a_889195664, b_889195665) {
  var result_889195668 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 512;
    result_889195668 = nimCopy(result_889195668, {a: a_889195664, b: b_889195665}, NTI889202854);
  framePtr = F.prev;

  return result_889195668;

}

function parseStandardFormatSpecifier_855638074(s_855638075, start_855638076, ignoreUnknownSuffix_855638077) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_855638078 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

  var F = {procname: "strformat.parseStandardFormatSpecifier", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 430;
    result_855638078.fill = 32;
    F.line = 431;
    result_855638078.align = 0;
    F.line = 432;
    result_855638078.sign = 45;
    F.line = 433;
    var i_855638080 = start_855638076;
    if (((addInt(i_855638080, 1) < (s_855638075).length) && (ConstSet2[s_855638075[chckIndx(addInt(i_855638080, 1), 0, (s_855638075).length - 1)]] != undefined))) {
    F.line = 435;
    result_855638078.fill = s_855638075[chckIndx(i_855638080, 0, (s_855638075).length - 1)];
    F.line = 436;
    result_855638078.align = s_855638075[chckIndx(addInt(i_855638080, 1), 0, (s_855638075).length - 1)];
    F.line = 437;
    i_855638080 = addInt(i_855638080, 2);
    }
    else {
    if (((i_855638080 < (s_855638075).length) && (ConstSet3[s_855638075[chckIndx(i_855638080, 0, (s_855638075).length - 1)]] != undefined))) {
    F.line = 439;
    result_855638078.align = s_855638075[chckIndx(i_855638080, 0, (s_855638075).length - 1)];
    F.line = 440;
    i_855638080 = addInt(i_855638080, 1);
    }
    }
    if (((i_855638080 < (s_855638075).length) && (ConstSet4[s_855638075[chckIndx(i_855638080, 0, (s_855638075).length - 1)]] != undefined))) {
    F.line = 443;
    result_855638078.sign = s_855638075[chckIndx(i_855638080, 0, (s_855638075).length - 1)];
    F.line = 444;
    i_855638080 = addInt(i_855638080, 1);
    }
    
    if (((i_855638080 < (s_855638075).length) && (s_855638075[chckIndx(i_855638080, 0, (s_855638075).length - 1)] == 35))) {
    F.line = 447;
    result_855638078.alternateForm = true;
    F.line = 448;
    i_855638080 = addInt(i_855638080, 1);
    }
    
      if (!((addInt(i_855638080, 1) < (s_855638075).length) && (s_855638075[chckIndx(i_855638080, 0, (s_855638075).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_855638075[chckIndx(addInt(i_855638080, 1), 0, (s_855638075).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 451;
    result_855638078.padWithZero = true;
    F.line = 452;
    i_855638080 = addInt(i_855638080, 1);
    }
    
    F.line = 454;
    var parsedLength_855638117 = parseSaturatedNatural_872415548(s_855638075, result_855638078, "minimumWidth", i_855638080);
    F.line = 455;
    i_855638080 = addInt(i_855638080, parsedLength_855638117);
    if (((i_855638080 < (s_855638075).length) && (s_855638075[chckIndx(i_855638080, 0, (s_855638075).length - 1)] == 46))) {
    F.line = 457;
    i_855638080 = addInt(i_855638080, 1);
    F.line = 458;
    var parsedLengthB_855638126 = parseSaturatedNatural_872415548(s_855638075, result_855638078, "precision", i_855638080);
    F.line = 459;
    i_855638080 = addInt(i_855638080, parsedLengthB_855638126);
    }
    else {
      F.line = 461;
      result_855638078.precision = -1;
    }
    
      if (!(i_855638080 < (s_855638075).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_855638075[chckIndx(i_855638080, 0, (s_855638075).length - 1)]] != undefined);      }    if (Temporary2) {
    F.line = 464;
    result_855638078.typ = s_855638075[chckIndx(i_855638080, 0, (s_855638075).length - 1)];
    F.line = 465;
    i_855638080 = addInt(i_855638080, 1);
    }
    
    F.line = 466;
    result_855638078.endPosition = i_855638080;
      if (!!((i_855638080 == (s_855638075).length))) Temporary3 = false; else {        Temporary3 = !(ignoreUnknownSuffix_855638077);      }    if (Temporary3) {
    F.line = 468;
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_889195688(s_855638075, HEX2EHEX2E_889195661(i_855638080, 1)) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_855638078;

}

function nucruneLen(s_889192458) {
  var result_889192459 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 42;
    result_889192459 = 0;
    F.line = 43;
    var i_889192460 = 0;
    Label1: do {
      F.line = 44;
        Label2: while (true) {
        if (!(i_889192460 < (s_889192458).length)) break Label2;
          if ((s_889192458[chckIndx(i_889192460, 0, (s_889192458).length - 1)] <= 127)) {
          F.line = 45;
          i_889192460 = addInt(i_889192460, 1);
          }
          else {
          if (((s_889192458[chckIndx(i_889192460, 0, (s_889192458).length - 1)] >>> 5) == 6)) {
          F.line = 46;
          i_889192460 = addInt(i_889192460, 2);
          }
          else {
          if (((s_889192458[chckIndx(i_889192460, 0, (s_889192458).length - 1)] >>> 4) == 14)) {
          F.line = 47;
          i_889192460 = addInt(i_889192460, 3);
          }
          else {
          if (((s_889192458[chckIndx(i_889192460, 0, (s_889192458).length - 1)] >>> 3) == 30)) {
          F.line = 48;
          i_889192460 = addInt(i_889192460, 4);
          }
          else {
          if (((s_889192458[chckIndx(i_889192460, 0, (s_889192458).length - 1)] >>> 2) == 62)) {
          F.line = 49;
          i_889192460 = addInt(i_889192460, 5);
          }
          else {
          if (((s_889192458[chckIndx(i_889192460, 0, (s_889192458).length - 1)] >>> 1) == 126)) {
          F.line = 50;
          i_889192460 = addInt(i_889192460, 6);
          }
          else {
            F.line = 51;
          i_889192460 = addInt(i_889192460, 1);
          }
          }}}}}
          F.line = 52;
          result_889192459 = addInt(result_889192459, 1);
        }
    } while (false);
  framePtr = F.prev;

  return result_889192459;

}

function runeLenAt_889192513(s_889192514, i_889192515) {
  var result_889192516 = 0;

  var F = {procname: "unicode.runeLenAt", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    if ((s_889192514[chckIndx(i_889192515, 0, (s_889192514).length - 1)] <= 127)) {
    F.line = 64;
    result_889192516 = 1;
    }
    else {
    if (((s_889192514[chckIndx(i_889192515, 0, (s_889192514).length - 1)] >>> 5) == 6)) {
    F.line = 65;
    result_889192516 = 2;
    }
    else {
    if (((s_889192514[chckIndx(i_889192515, 0, (s_889192514).length - 1)] >>> 4) == 14)) {
    F.line = 66;
    result_889192516 = 3;
    }
    else {
    if (((s_889192514[chckIndx(i_889192515, 0, (s_889192514).length - 1)] >>> 3) == 30)) {
    F.line = 67;
    result_889192516 = 4;
    }
    else {
    if (((s_889192514[chckIndx(i_889192515, 0, (s_889192514).length - 1)] >>> 2) == 62)) {
    F.line = 68;
    result_889192516 = 5;
    }
    else {
    if (((s_889192514[chckIndx(i_889192515, 0, (s_889192514).length - 1)] >>> 1) == 126)) {
    F.line = 69;
    result_889192516 = 6;
    }
    else {
      F.line = 70;
      result_889192516 = 1;
    }
    }}}}}
  framePtr = F.prev;

  return result_889192516;

}

function runeOffset_889193085(s_889193086, pos_889193087, start_889193088) {
  var result_889193089 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 321;
    var i_889193090 = 0;
    F.line = 322;
    var o_889193091 = start_889193088;
    Label1: do {
      F.line = 323;
        Label2: while (true) {
        if (!(i_889193090 < pos_889193087)) break Label2;
          F.line = 324;
          o_889193091 = addInt(o_889193091, chckRange(runeLenAt_889192513(s_889193086, o_889193091), 0, 2147483647));
          if (((s_889193086).length <= o_889193091)) {
          F.line = 326;
          result_889193089 = -1;
          break BeforeRet;
          }
          
          F.line = 327;
          i_889193090 = addInt(i_889193090, 1);
        }
    } while (false);
    F.line = 328;
    result_889193089 = o_889193091;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_889193089;

}

function validateUtf8_889192725(s_889192726) {
            var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;

  var result_889192727 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 174;
    var i_889192728 = 0;
    F.line = 175;
    var L_889192729 = (s_889192726).length;
    Label1: do {
      F.line = 176;
        Label2: while (true) {
        if (!(i_889192728 < L_889192729)) break Label2;
          if ((s_889192726[chckIndx(i_889192728, 0, (s_889192726).length - 1)] <= 127)) {
          F.line = 178;
          i_889192728 = addInt(i_889192728, 1);
          }
          else {
          if (((s_889192726[chckIndx(i_889192728, 0, (s_889192726).length - 1)] >>> 5) == 6)) {
          if ((s_889192726[chckIndx(i_889192728, 0, (s_889192726).length - 1)] < 194)) {
          F.line = 180;
          result_889192727 = i_889192728;
          break BeforeRet;
          }
          
            if (!(addInt(i_889192728, 1) < L_889192729)) Temporary3 = false; else {              Temporary3 = ((s_889192726[chckIndx(addInt(i_889192728, 1), 0, (s_889192726).length - 1)] >>> 6) == 2);            }          if (Temporary3) {
          F.line = 181;
          i_889192728 = addInt(i_889192728, 2);
          }
          else {
            F.line = 182;
            result_889192727 = i_889192728;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_889192726[chckIndx(i_889192728, 0, (s_889192726).length - 1)] >>> 4) == 14)) {
            if (!(addInt(i_889192728, 2) < L_889192729)) Temporary5 = false; else {              Temporary5 = ((s_889192726[chckIndx(addInt(i_889192728, 1), 0, (s_889192726).length - 1)] >>> 6) == 2);            }            if (!Temporary5) Temporary4 = false; else {              Temporary4 = ((s_889192726[chckIndx(addInt(i_889192728, 2), 0, (s_889192726).length - 1)] >>> 6) == 2);            }          if (Temporary4) {
          F.line = 185;
          i_889192728 = addInt(i_889192728, 3);
          }
          else {
            F.line = 186;
            result_889192727 = i_889192728;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_889192726[chckIndx(i_889192728, 0, (s_889192726).length - 1)] >>> 3) == 30)) {
            if (!(addInt(i_889192728, 3) < L_889192729)) Temporary8 = false; else {              Temporary8 = ((s_889192726[chckIndx(addInt(i_889192728, 1), 0, (s_889192726).length - 1)] >>> 6) == 2);            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = ((s_889192726[chckIndx(addInt(i_889192728, 2), 0, (s_889192726).length - 1)] >>> 6) == 2);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = ((s_889192726[chckIndx(addInt(i_889192728, 3), 0, (s_889192726).length - 1)] >>> 6) == 2);            }          if (Temporary6) {
          F.line = 191;
          i_889192728 = addInt(i_889192728, 4);
          }
          else {
            F.line = 192;
            result_889192727 = i_889192728;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 194;
            result_889192727 = i_889192728;
            break BeforeRet;
          }
          }}}
        }
    } while (false);
    F.line = 195;
    result_889192727 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_889192727;

}

function nsuRepeatChar(c_922747899, count_922747900) {
  var result_922747901 = [];

  var F = {procname: "strutils.repeat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1263;
    result_922747901 = nimCopy(null, mnewString(count_922747900), NTI33554439);
    Label1: do {
      F.line = 1264;
      var i_922747906 = 0;
      F.line = 75;
      var colontmp__436207686 = 0;
      F.line = 1264;
      colontmp__436207686 = subInt(count_922747900, 1);
      F.line = 90;
      var res_436207687 = 0;
      Label2: do {
        F.line = 91;
          Label3: while (true) {
          if (!(res_436207687 <= colontmp__436207686)) break Label3;
            F.line = 1264;
            i_922747906 = res_436207687;
            F.line = 1264;
            result_922747901[chckIndx(i_922747906, 0, (result_922747901).length - 1)] = c_922747899;
            F.line = 93;
            res_436207687 = addInt(res_436207687, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_922747901;

}

function alignString_855638036(s_855638037, minimumWidth_855638038, align_855638039, fill_855638040) {
      var Temporary1;

  var result_855638041 = [];

  var F = {procname: "strformat.alignString", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if ((minimumWidth_855638038 == 0)) {
    F.line = 331;
    result_855638041 = nimCopy(null, s_855638037, NTI33554439);
    }
    else {
      F.line = 333;
      if ((validateUtf8_889192725(s_855638037) == -1)) {
      Temporary1 = nucruneLen(s_855638037);
      }
      else {
      Temporary1 = (s_855638037).length;
      }
      
      var sRuneLen_855638042 = Temporary1;
      F.line = 334;
      var toFill_855638043 = subInt(minimumWidth_855638038, sRuneLen_855638042);
      if ((toFill_855638043 <= 0)) {
      F.line = 336;
      result_855638041 = nimCopy(null, s_855638037, NTI33554439);
      }
      else {
      if (((align_855638039 == 60) || (align_855638039 == 0))) {
      F.line = 338;
      result_855638041 = nimCopy(null, (s_855638037 || []).concat(nsuRepeatChar(fill_855638040, chckRange(toFill_855638043, 0, 2147483647)) || []), NTI33554439);
      }
      else {
      if ((align_855638039 == 94)) {
      F.line = 340;
      var half_855638044 = divInt(toFill_855638043, 2);
      F.line = 341;
      result_855638041 = nimCopy(null, (nsuRepeatChar(fill_855638040, chckRange(half_855638044, 0, 2147483647)) || []).concat(s_855638037 || [],nsuRepeatChar(fill_855638040, chckRange(subInt(toFill_855638043, half_855638044), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        F.line = 343;
        result_855638041 = nimCopy(null, (nsuRepeatChar(fill_855638040, chckRange(toFill_855638043, 0, 2147483647)) || []).concat(s_855638037 || []), NTI33554439);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_855638041;

}

function formatValue_855638178(result_855638179, result_855638179_Idx, value_855638180, specifier_855638181) {
  var F = {procname: "strformat.formatValue", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 553;
    var spec_855638182 = parseStandardFormatSpecifier_855638074(specifier_855638181, 0, false);
    F.line = 554;
    var value_855638183 = nimCopy(null, value_855638180, NTI33554439);
    F.line = 555;
    switch (spec_855638182.typ) {
    case 115:
    case 0:
      break;
    default: 
      F.line = 558;
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_855638182.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_855638182.precision == -1))) {
    if ((spec_855638182.precision < nucruneLen(value_855638183))) {
    F.line = 563;
    (value_855638183.length = chckRange(runeOffset_889193085(value_855638183, chckRange(spec_855638182.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    F.line = 564;
    result_855638179[result_855638179_Idx].push.apply(result_855638179[result_855638179_Idx], alignString_855638036(value_855638183, spec_855638182.minimumWidth, spec_855638182.align, spec_855638182.fill));;
  framePtr = F.prev;

  
}

function open_419430762(f_419430763, f_419430763_Idx, filename_419430764, mode_419430765, bufSize_419430766) {
    var Temporary1;
      var Temporary2;

  var result_419430767 = false;

  var F = {procname: "io.open", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/io.nim", line: 0};
  framePtr = F;
    F.line = 681;
    var p_419430768 = (Temporary1 = fopen(toJSStr(filename_419430764), FormatOpen_419430752[chckIndx(mode_419430765, 0, (FormatOpen_419430752).length - 1)]), Temporary1)[0], p_419430768_Idx = Temporary1[1];
    if (!((p_419430768 == null && p_419430768_Idx == 0))) {
    F.line = 683;
    var f2_419430769 = p_419430768;
    F.line = 698;
    result_419430767 = true;
    F.line = 699;
    f_419430763[f_419430763_Idx] = p_419430768;
      if (!(0 < bufSize_419430766)) Temporary2 = false; else {        Temporary2 = (bufSize_419430766 <= 2147483647);      }    if (Temporary2) {
    F.line = 701;
    var _ = setvbuf(f_419430763[f_419430763_Idx], null, 0, _IOFBF, (bufSize_419430766 >>> 0));
    }
    else {
    if ((bufSize_419430766 == 0)) {
    F.line = 703;
    var _ = setvbuf(f_419430763[f_419430763_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    
  framePtr = F.prev;

  return result_419430767;

}

function rawFileSize_419430718(file_419430719) {
  var result_419430720 = 0;

  var F = {procname: "io.rawFileSize", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/io.nim", line: 0};
  framePtr = F;
    F.line = 538;
    var oldPos_419430721 = ftello(file_419430719);
    F.line = 539;
    var _ = fseeko(file_419430719, 0, 2);
    F.line = 540;
    result_419430720 = ftello(file_419430719);
    F.line = 541;
    var _ = fseeko(file_419430719, oldPos_419430721, 0);
  framePtr = F.prev;

  return result_419430720;

}

function raiseEIO_419430480(msg_419430481) {
  var F = {procname: "io.raiseEIO", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/io.nim", line: 0};
  framePtr = F;
    F.line = 139;
    raiseException({message: nimCopy(null, msg_419430481, NTI33554439), parent: null, m_type: NTI33555115, name: null, trace: [], up: null}, "IOError");
  framePtr = F.prev;

  
}

function checkErr_419430525(f_419430526) {
  var F = {procname: "io.checkErr", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/io.nim", line: 0};
  framePtr = F;
    if (!((ferror(f_419430526) == 0))) {
    F.line = 154;
    var msg_419430527 = (makeNimstrLit("errno: ") || []).concat(HEX24_318767107(((errno) | 0)) || [],makeNimstrLit(" `") || [],cstrToNimstr(strerror(errno)) || [],makeNimstrLit("`") || []);
    F.line = 155;
    clearerr(f_419430526);
    F.line = 156;
    raiseEIO_419430480(msg_419430527);
    }
    
  framePtr = F.prev;

  
}

function readBuffer_419430528(f_419430529, buffer_419430530, buffer_419430530_Idx, len_419430531) {
  var result_419430532 = 0;

    result_419430532 = (fread(buffer_419430530, buffer_419430530_Idx, 1, (len_419430531 >>> 0), f_419430529) | 0);
    if (!((result_419430532 == len_419430531))) {
    checkErr_419430525(f_419430529);
    }
    

  return result_419430532;

}

function endOfFile_419430722(f_419430723) {
  var result_419430724 = false;

  var F = {procname: "io.endOfFile", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/io.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 545;
    var c_419430725 = fgetc(f_419430723);
    F.line = 546;
    var _ = ungetc(c_419430725, f_419430723);
    F.line = 547;
    result_419430724 = (c_419430725 < 0);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_419430724;

}

function readAllBuffer_419430713(file_419430714) {
  var result_419430715 = [];

  var F = {procname: "io.readAllBuffer", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/io.nim", line: 0};
  framePtr = F;
    F.line = 525;
    result_419430715 = nimCopy(null, [], NTI33554439);
    F.line = 526;
    var buffer_419430716 = mnewString(4000);
    Label1: do {
      F.line = 527;
        Label2: while (true) {
        if (!true) break Label2;
          F.line = 528;
          var bytesRead_419430717 = readBuffer_419430528(file_419430714, buffer_419430716, chckIndx(0, 0, (buffer_419430716).length - 1), 4000);
          if ((bytesRead_419430717 == 4000)) {
          F.line = 530;
          result_419430715.push.apply(result_419430715, buffer_419430716);;
          }
          else {
            F.line = 532;
            (buffer_419430716.length = chckRange(bytesRead_419430717, 0, 2147483647));
            F.line = 533;
            result_419430715.push.apply(result_419430715, buffer_419430716);;
            F.line = 534;
            break Label1;
          }
          
        }
    } while (false);
  framePtr = F.prev;

  return result_419430715;

}

function readAllFile_419430726(file_419430727, len_419430728) {
  var result_419430729 = [];

  var F = {procname: "io.readAllFile", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/io.nim", line: 0};
  framePtr = F;
    F.line = 553;
    result_419430729 = nimCopy(null, mnewString(chckRange(len_419430728, 0, 2147483647)), NTI33554439);
    F.line = 554;
    var bytes_419430730 = readBuffer_419430528(file_419430727, result_419430729, chckIndx(0, 0, (result_419430729).length - 1), chckRange(len_419430728, 0, 2147483647));
    if (endOfFile_419430722(file_419430727)) {
    if ((bytes_419430730 < len_419430728)) {
    F.line = 557;
    (result_419430729.length = chckRange(bytes_419430730, 0, 2147483647));
    }
    
    }
    else {
      F.line = 561;
    result_419430729.push.apply(result_419430729, readAllBuffer_419430713(file_419430727));;
    }
    
  framePtr = F.prev;

  return result_419430729;

}

function readAll_419430735(file_419430736) {
  var result_419430737 = [];

  var F = {procname: "io.readAll", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/io.nim", line: 0};
  framePtr = F;
    F.line = 578;
    var len_419430738 = rawFileSize_419430718(file_419430736);
    if ((0 < len_419430738)) {
    F.line = 580;
    result_419430737 = nimCopy(null, readAllFile_419430726(file_419430736, len_419430738), NTI33554439);
    }
    else {
      F.line = 582;
      result_419430737 = nimCopy(null, readAllBuffer_419430713(file_419430736), NTI33554439);
    }
    
  framePtr = F.prev;

  return result_419430737;

}

function close_419430605(f_419430606) {
  var F = {procname: "io.close", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/io.nim", line: 0};
  framePtr = F;
    if (!((f_419430606 == null))) {
    F.line = 309;
    var _ = fclose(f_419430606);
    }
    
  framePtr = F.prev;

  
}

function readFile_419430828(filename_419430829) {
  var result_419430830 = [];

  var F = {procname: "io.readFile", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/io.nim", line: 0};
  framePtr = F;
    F.line = 846;
    var f_419430831 = [null];
    if (open_419430762(f_419430831, 0, filename_419430829, 0, -1)) {
    F.line = 848;
    try {
    F.line = 849;
    result_419430830 = nimCopy(null, readAll_419430735(f_419430831[0]), NTI33554439);
    } finally {
    framePtr = F;
    F.line = 851;
    close_419430605(f_419430831[0]);
    }
    }
    else {
      F.line = 853;
      raiseException({message: (makeNimstrLit("cannot open: ") || []).concat(filename_419430829 || []), parent: null, m_type: NTI33555115, name: null, trace: [], up: null}, "IOError");
    }
    
  framePtr = F.prev;

  return result_419430830;

}

function raiseKeyError_1006633350(key_1006633352) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 234;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(HEX24_318767107(key_1006633352) || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1006633047(t_1006633050, key_1006633051) {
  var result_1006633052 = null;
  var result_1006633052_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym22_1006633053 = [0];
    F.line = 243;
    var indexHEX60gensym22_1006633296 = rawGet_1006633054(t_1006633050, key_1006633051, hcHEX60gensym22_1006633053, 0);
    if ((0 <= indexHEX60gensym22_1006633296)) {
    F.line = 244;
    result_1006633052 = t_1006633050.data[chckIndx(indexHEX60gensym22_1006633296, 0, (t_1006633050.data).length - 1)]; result_1006633052_Idx = "Field2";
    }
    else {
      F.line = 246;
    raiseKeyError_1006633350(key_1006633051);
    }
    
  framePtr = F.prev;

  return [result_1006633052, result_1006633052_Idx];

}

function mkDigit_855638021(v_855638022, typ_855638023) {
      var Temporary1;

  var result_855638024 = [];

  var F = {procname: "strformat.mkDigit", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if (!((v_855638022 < 26))) {
    F.line = 320;
    failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim(320, 9) `v < 26` "));
    }
    
    if ((v_855638022 < 10)) {
    F.line = 322;
    result_855638024 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_855638022), 0, 255)), NTI33554439);
    }
    else {
      F.line = 324;
      if ((typ_855638023 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_855638024 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_855638022), 10), 0, 255)), NTI33554439);
    }
    
  framePtr = F.prev;

  return result_855638024;

}

function formatInt_989855887(n_989855889, radix_989855890, spec_989855891) {
    var Temporary1;
    var Temporary8;

  var result_989855892 = [];

  var F = {procname: "formatInt.formatInt", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 366;
    var n_989855895 = n_989855889;
    F.line = 367;
    var negative_989855896 = (n_989855895 < 0);
    F.line = 368;
    if (negative_989855896) {
    Temporary1 = ((~(n_989855895) + 1) );
    }
    else {
    Temporary1 = n_989855895;
    }
    
    var v_989855897 = Temporary1;
    F.line = 375;
    var xx_989855898 = [];
    if (spec_989855891.alternateForm) {
    F.line = 377;
    switch (spec_989855891.typ) {
    case 88:
      F.line = 378;
      xx_989855898 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 120:
      F.line = 379;
      xx_989855898 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 98:
      F.line = 380;
      xx_989855898 = nimCopy(null, makeNimstrLit("0b"), NTI33554439);
      break;
    case 111:
      F.line = 381;
      xx_989855898 = nimCopy(null, makeNimstrLit("0o"), NTI33554439);
      break;
    default: 
      break;
    }
    }
    
    if ((v_989855897 == 0)) {
    F.line = 385;
    result_989855892 = nimCopy(null, makeNimstrLit("0"), NTI33554439);
    }
    else {
      F.line = 387;
      result_989855892 = nimCopy(null, [], NTI33554439);
      Label2: do {
        F.line = 388;
          Label3: while (true) {
          if (!(0 < v_989855897)) break Label3;
            F.line = 389;
            var d_989855899 = (v_989855897 % radix_989855890);
            F.line = 390;
            v_989855897 = Math.trunc(((v_989855897 / radix_989855890) ));
            F.line = 391;
            result_989855892.push.apply(result_989855892, mkDigit_855638021(chckRange(d_989855899, -2147483648, 2147483647), spec_989855891.typ));;
          }
      } while (false);
      Label4: do {
        F.line = 392;
        var idx_989855904 = 0;
        F.line = 117;
        var colontmp__436207692 = 0;
        F.line = 392;
        colontmp__436207692 = divInt((result_989855892).length, 2);
        F.line = 119;
        var i_436207693 = 0;
        Label5: do {
          F.line = 120;
            Label6: while (true) {
            if (!(i_436207693 < colontmp__436207692)) break Label6;
              F.line = 392;
              idx_989855904 = i_436207693;
              F.line = 392;
              var Temporary7 = result_989855892[chckIndx(idx_989855904, 0, (result_989855892).length - 1)]; result_989855892[chckIndx(idx_989855904, 0, (result_989855892).length - 1)] = result_989855892[chckIndx(subInt(subInt((result_989855892).length, idx_989855904), 1), 0, (result_989855892).length - 1)]; result_989855892[chckIndx(subInt(subInt((result_989855892).length, idx_989855904), 1), 0, (result_989855892).length - 1)] = Temporary7;              F.line = 122;
              i_436207693 = addInt(i_436207693, 1);
            }
        } while (false);
      } while (false);
    }
    
    if (spec_989855891.padWithZero) {
    F.line = 395;
    if (negative_989855896) Temporary8 = true; else {      Temporary8 = !((spec_989855891.sign == 45));    }    var sign_989855909 = Temporary8;
    F.line = 396;
    var toFill_989855913 = subInt(subInt(subInt(spec_989855891.minimumWidth, (result_989855892).length), (xx_989855898).length), (sign_989855909 ? 1 : 0));
    if ((0 < toFill_989855913)) {
    F.line = 398;
    result_989855892 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_989855913, 0, 2147483647)) || []).concat(result_989855892 || []), NTI33554439);
    }
    
    }
    
    if (negative_989855896) {
    F.line = 401;
    result_989855892 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_989855898 || [],result_989855892 || []), NTI33554439);
    }
    else {
    if (!((spec_989855891.sign == 45))) {
    F.line = 403;
    result_989855892 = nimCopy(null, [spec_989855891.sign].concat(xx_989855898 || [],result_989855892 || []), NTI33554439);
    }
    else {
      F.line = 405;
      result_989855892 = nimCopy(null, (xx_989855898 || []).concat(result_989855892 || []), NTI33554439);
    }
    }
    if ((spec_989855891.align == 60)) {
    Label9: do {
      F.line = 408;
      var i_989855918 = 0;
      F.line = 117;
      var colontmp__436207696 = 0;
      F.line = 408;
      colontmp__436207696 = (result_989855892).length;
      F.line = 119;
      var i_436207697 = colontmp__436207696;
      Label10: do {
        F.line = 120;
          Label11: while (true) {
          if (!(i_436207697 < spec_989855891.minimumWidth)) break Label11;
            F.line = 408;
            i_989855918 = i_436207697;
            F.line = 408;
            addChar(result_989855892, spec_989855891.fill);;
            F.line = 122;
            i_436207697 = addInt(i_436207697, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      F.line = 411;
      var toFill_989855919 = subInt(spec_989855891.minimumWidth, (result_989855892).length);
      if ((spec_989855891.align == 94)) {
      F.line = 413;
      var half_989855920 = divInt(toFill_989855919, 2);
      F.line = 414;
      result_989855892 = nimCopy(null, (nsuRepeatChar(spec_989855891.fill, chckRange(half_989855920, 0, 2147483647)) || []).concat(result_989855892 || [],nsuRepeatChar(spec_989855891.fill, chckRange(subInt(toFill_989855919, half_989855920), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        if ((0 < toFill_989855919)) {
        F.line = 417;
        result_989855892 = nimCopy(null, (nsuRepeatChar(spec_989855891.fill, chckRange(toFill_989855919, 0, 2147483647)) || []).concat(result_989855892 || []), NTI33554439);
        }
        
      }
      
    }
    
  framePtr = F.prev;

  return result_989855892;

}

function formatValue_989855879(result_989855881, result_989855881_Idx, value_989855882, specifier_989855883) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strformat.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((specifier_989855883).length == 0)) {
    F.line = 477;
    result_989855881[result_989855881_Idx].push.apply(result_989855881[result_989855881_Idx], HEX24_318767107(value_989855882));;
    F.line = 478;
    break BeforeRet;
    }
    
    F.line = 479;
    var spec_989855884 = parseStandardFormatSpecifier_855638074(specifier_989855883, 0, false);
    F.line = 480;
    var radix_989855885 = 10;
    F.line = 481;
    switch (spec_989855884.typ) {
    case 120:
    case 88:
      F.line = 482;
      radix_989855885 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      F.line = 484;
      radix_989855885 = 2;
      break;
    case 111:
      F.line = 485;
      radix_989855885 = 8;
      break;
    default: 
      F.line = 487;
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_989855884.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    F.line = 490;
    result_989855881[result_989855881_Idx].push.apply(result_989855881[result_989855881_Idx], formatInt_989855887(value_989855882, radix_989855885, spec_989855884));;
  } while (false);
  framePtr = F.prev;

  
}

function substr_33557907(s_33557908, first_33557909, last_33557910) {
  var result_33557911 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 3066;
    var first_33557912 = nimMax(first_33557909, 0);
    F.line = 3067;
    var L_33557913 = nimMax(addInt(subInt(nimMin(last_33557910, (s_33557908).length - 1), first_33557912), 1), 0);
    F.line = 3068;
    result_33557911 = nimCopy(null, mnewString(chckRange(L_33557913, 0, 2147483647)), NTI33554439);
    Label1: do {
      F.line = 3069;
      var i_33557918 = 0;
      F.line = 75;
      var colontmp__436207708 = 0;
      F.line = 3069;
      colontmp__436207708 = subInt(L_33557913, 1);
      F.line = 90;
      var res_436207709 = 0;
      Label2: do {
        F.line = 91;
          Label3: while (true) {
          if (!(res_436207709 <= colontmp__436207708)) break Label3;
            F.line = 3069;
            i_33557918 = res_436207709;
            F.line = 3069;
            result_33557911[chckIndx(i_33557918, 0, (result_33557911).length - 1)] = s_33557908[chckIndx(addInt(i_33557918, first_33557912), 0, (s_33557908).length - 1)];
            F.line = 93;
            res_436207709 = addInt(res_436207709, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_33557911;

}

function nsuSplitLines(s_922747506, keepEol_922747507) {
            var Temporary6;

  var result_922747508 = [];

  var F = {procname: "strutils.splitLines", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 393;
    result_922747508 = nimCopy(null, [], NTI922747360);
    Label1: do {
      F.line = 394;
      var xHEX60gensym76_922747514 = [];
      F.line = 629;
      var first_436207702 = 0;
      F.line = 630;
      var last_436207703 = 0;
      F.line = 631;
      var eolpos_436207704 = 0;
      Label2: do {
        F.line = 632;
          Label3: while (true) {
          if (!true) break Label3;
            Label4: do {
              F.line = 633;
                Label5: while (true) {
                if (!((last_436207703 < (s_922747506).length) && !((ConstSet9[s_922747506[chckIndx(last_436207703, 0, (s_922747506).length - 1)]] != undefined)))) break Label5;
                  F.line = 633;
                  last_436207703 = addInt(last_436207703, 1);
                }
            } while (false);
            F.line = 635;
            eolpos_436207704 = last_436207703;
            if ((last_436207703 < (s_922747506).length)) {
            if ((s_922747506[chckIndx(last_436207703, 0, (s_922747506).length - 1)] == 10)) {
            F.line = 637;
            last_436207703 = addInt(last_436207703, 1);
            }
            else {
            if ((s_922747506[chckIndx(last_436207703, 0, (s_922747506).length - 1)] == 13)) {
            F.line = 639;
            last_436207703 = addInt(last_436207703, 1);
            if (((last_436207703 < (s_922747506).length) && (s_922747506[chckIndx(last_436207703, 0, (s_922747506).length - 1)] == 10))) {
            F.line = 640;
            last_436207703 = addInt(last_436207703, 1);
            }
            
            }
            }
            }
            
            F.line = 843;
            if (keepEol_922747507) {
            Temporary6 = subInt(last_436207703, 1);
            }
            else {
            Temporary6 = subInt(eolpos_436207704, 1);
            }
            
            xHEX60gensym76_922747514 = substr_33557907(s_922747506, first_436207702, Temporary6);
            F.line = 843;
            var Temporary7 = nimCopy(null, xHEX60gensym76_922747514, NTI33554439);
            result_922747508.push(Temporary7);;
            if ((eolpos_436207704 == last_436207703)) {
            F.line = 646;
            break Label2;
            }
            
            F.line = 648;
            first_436207702 = last_436207703;
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_922747508;

}

function error_1006632984(sId_1006632985, line_1006632986, errorName_1006632987, message_1006632988) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;

  var F = {procname: "error.error", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/error.nim", line: 0};
  framePtr = F;
    if (isTest_1006632974[0]) {
    F.line = 18;
    F.line = 18;
    var fmtRes_1006632993 = [mnewString(0)];
    F.line = 18;
    formatValue_855638178(fmtRes_1006632993, 0, errorName_1006632987, []);
    F.line = 18;
    fmtRes_1006632993[0].push.apply(fmtRes_1006632993[0], makeNimstrLit(": "));;
    F.line = 18;
    formatValue_855638178(fmtRes_1006632993, 0, message_1006632988, []);
    quit_33557573(fmtRes_1006632993[0], 1);
    }
    else {
      F.line = 20;
      var source_1006633381 = readFile_419430828((Temporary1 = HEX5BHEX5D_1006633047(sources_1006632973[0], ((sId_1006632985) | 0)), Temporary1)[0][Temporary1[1]]);
      if ((-1 <= line_1006632986)) {
      if ((1 < line_1006632986)) {
      F.line = 25;
      F.line = 25;
      var fmtRes_1006633386 = [mnewString(0)];
      F.line = 25;
      formatValue_989855879(fmtRes_1006633386, 0, subInt(line_1006632986, 1), []);
      F.line = 25;
      fmtRes_1006633386[0].push.apply(fmtRes_1006633386[0], makeNimstrLit(": "));;
      F.line = 25;
      formatValue_855638178(fmtRes_1006633386, 0, (Temporary2 = nsuSplitLines(source_1006633381, false), Temporary2)[chckIndx(subInt(line_1006632986, 2), 0, (Temporary2).length - 1)], []);
      rawEcho(makeNimstrLit("\x1B[90m"), fmtRes_1006633386[0], makeNimstrLit("\x1B[0m"));
      }
      
      if ((0 < line_1006632986)) {
      F.line = 28;
      F.line = 28;
      var fmtRes_1006633396 = [mnewString(0)];
      F.line = 28;
      formatValue_989855879(fmtRes_1006633396, 0, line_1006632986, []);
      F.line = 28;
      fmtRes_1006633396[0].push.apply(fmtRes_1006633396[0], makeNimstrLit(": "));;
      F.line = 28;
      formatValue_855638178(fmtRes_1006633396, 0, (Temporary3 = nsuSplitLines(source_1006633381, false), Temporary3)[chckIndx(subInt(line_1006632986, 1), 0, (Temporary3).length - 1)], []);
      rawEcho(makeNimstrLit("\x1B[90m"), fmtRes_1006633396[0], makeNimstrLit("\x1B[0m"));
      }
      
      F.line = 30;
      F.line = 30;
      var fmtRes_1006633406 = [mnewString(0)];
      F.line = 30;
      formatValue_989855879(fmtRes_1006633406, 0, addInt(line_1006632986, 1), []);
      F.line = 30;
      fmtRes_1006633406[0].push.apply(fmtRes_1006633406[0], makeNimstrLit(": "));;
      F.line = 30;
      formatValue_855638178(fmtRes_1006633406, 0, (Temporary4 = nsuSplitLines(source_1006633381, false), Temporary4)[chckIndx(line_1006632986, 0, (Temporary4).length - 1)], []);
      rawEcho(makeNimstrLit("\x1B[31m"), fmtRes_1006633406[0]);
      if ((addInt(line_1006632986, 1) < (nsuSplitLines(source_1006633381, false)).length)) {
      F.line = 33;
      F.line = 33;
      var fmtRes_1006633419 = [mnewString(0)];
      F.line = 33;
      formatValue_989855879(fmtRes_1006633419, 0, addInt(line_1006632986, 2), []);
      F.line = 33;
      fmtRes_1006633419[0].push.apply(fmtRes_1006633419[0], makeNimstrLit(": "));;
      F.line = 33;
      formatValue_855638178(fmtRes_1006633419, 0, (Temporary5 = nsuSplitLines(source_1006633381, false), Temporary5)[chckIndx(addInt(line_1006632986, 1), 0, (Temporary5).length - 1)], []);
      rawEcho(makeNimstrLit("\x1B[90m"), fmtRes_1006633419[0], makeNimstrLit("\x1B[0m"));
      }
      
      if ((addInt(line_1006632986, 2) < (nsuSplitLines(source_1006633381, false)).length)) {
      F.line = 36;
      F.line = 36;
      var fmtRes_1006633432 = [mnewString(0)];
      F.line = 36;
      formatValue_989855879(fmtRes_1006633432, 0, addInt(line_1006632986, 3), []);
      F.line = 36;
      fmtRes_1006633432[0].push.apply(fmtRes_1006633432[0], makeNimstrLit(": "));;
      F.line = 36;
      formatValue_855638178(fmtRes_1006633432, 0, (Temporary6 = nsuSplitLines(source_1006633381, false), Temporary6)[chckIndx(addInt(line_1006632986, 2), 0, (Temporary6).length - 1)], []);
      rawEcho(makeNimstrLit("\x1B[90m"), fmtRes_1006633432[0], makeNimstrLit("\x1B[0m"));
      }
      
      }
      
      if (isRepl_1023410179[0]) {
      F.line = 39;
      F.line = 39;
      var fmtRes_1006633442 = [mnewString(0)];
      F.line = 39;
      formatValue_855638178(fmtRes_1006633442, 0, errorName_1006632987, []);
      F.line = 39;
      fmtRes_1006633442[0].push.apply(fmtRes_1006633442[0], makeNimstrLit(": "));;
      F.line = 39;
      formatValue_855638178(fmtRes_1006633442, 0, message_1006632988, []);
      rawEcho(makeNimstrLit("\x0A"), fmtRes_1006633442[0], makeNimstrLit("\x1B[0m"));
      }
      else {
        F.line = 40;
        F.line = 40;
        var fmtRes_1006633447 = [mnewString(0)];
        F.line = 40;
        formatValue_855638178(fmtRes_1006633447, 0, errorName_1006632987, []);
        F.line = 40;
        fmtRes_1006633447[0].push.apply(fmtRes_1006633447[0], makeNimstrLit(": "));;
        F.line = 40;
        formatValue_855638178(fmtRes_1006633447, 0, message_1006632988, []);
      quit_33557573((makeNimstrLit("\x0A") || []).concat(fmtRes_1006633447[0] || [],makeNimstrLit("\x1B[0m") || []), 1);
      }
      
    }
    
  framePtr = F.prev;

  
}

function makeString_570427866(l_570427867) {
          var Temporary3;

  var F = {procname: "lexer.makeString", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
    F.line = 101;
    var strValue_570427868 = [];
    Label1: do {
      F.line = 102;
        Label2: while (true) {
          if (!!((currentChar_570427850(l_570427867) == 34))) Temporary3 = false; else {            Temporary3 = !(isAtEnd_570427839(l_570427867));          }        if (!Temporary3) break Label2;
          if ((currentChar_570427850(l_570427867) == 10)) {
          F.line = 103;
          l_570427867.line = addInt(l_570427867.line, 1);
          }
          else {
          if (((currentChar_570427850(l_570427867) == 36) && (nextChar_570427853(l_570427867) == 123))) {
          advance_570427825(l_570427867);
          advance_570427825(l_570427867);
          F.line = 106;
          appendToken_570427842(l_570427867, 2, strValue_570427868);
          F.line = 106;
          strValue_570427868 = nimCopy(null, [], NTI33554439);
          F.line = 107;
          appendToken_570427842(l_570427867, 12, []);
          F.line = 107;
          appendToken_570427842(l_570427867, 4, []);
          F.line = 108;
          inStrInterp_570426725[0] = true;
          F.line = 109;
          strInterpDepth_570426726[0] = addInt(strInterpDepth_570426726[0], 1);
          F.line = 110;
          var _ = tokenize_570427864(l_570427867);
          F.line = 111;
          inStrInterp_570426725[0] = false;
          F.line = 112;
          appendToken_570427842(l_570427867, 5, []);
          F.line = 112;
          appendToken_570427842(l_570427867, 12, []);
          if ((currentChar_570427850(l_570427867) == 34)) {
          F.line = 113;
          break Label1;
          }
          
          }
          }
          F.line = 114;
          addChar(strValue_570427868, currentChar_570427850(l_570427867));;
          advance_570427825(l_570427867);
        }
    } while (false);
    if (!((currentChar_570427850(l_570427867) == 34))) {
    F.line = 116;
    error_1006632984(sourceId_989855747[0], l_570427867.line, makeNimstrLit("SyntaxError"), makeNimstrLit("Unterminated string, expected \'\"\'"));
    }
    
    advance_570427825(l_570427867);
    F.line = 118;
    appendToken_570427842(l_570427867, 2, strValue_570427868);
  framePtr = F.prev;

  
}

function skipBlockComment_570427877(l_570427878) {
  var F = {procname: "lexer.skipBlockComment", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
    F.line = 122;
    var nesting_570427879 = 1;
    Label1: do {
      F.line = 123;
        Label2: while (true) {
        if (!(0 < nesting_570427879)) break Label2;
          Label3: do {
            if ((currentChar_570427850(l_570427878) == 10)) {
            F.line = 124;
            l_570427878.line = addInt(l_570427878.line, 1);
            }
            
            if ((currentChar_570427850(l_570427878) == 0)) {
            F.line = 125;
            error_1006632984(sourceId_989855747[0], l_570427878.line, makeNimstrLit("SyntaxError"), makeNimstrLit("Unterminated block comment"));
            }
            
            if (((currentChar_570427850(l_570427878) == 35) && (nextChar_570427853(l_570427878) == 123))) {
            advance_570427825(l_570427878);
            advance_570427825(l_570427878);
            F.line = 129;
            nesting_570427879 = addInt(nesting_570427879, 1);
            F.line = 130;
            break Label3;
            }
            
            if (((currentChar_570427850(l_570427878) == 125) && (nextChar_570427853(l_570427878) == 35))) {
            advance_570427825(l_570427878);
            advance_570427825(l_570427878);
            F.line = 135;
            nesting_570427879 = subInt(nesting_570427879, 1);
            F.line = 136;
            break Label3;
            }
            
          } while (false);
          advance_570427825(l_570427878);
        }
    } while (false);
  framePtr = F.prev;

  
}

function find_570427901(a_570427904, item_570427905) {
  var result_570427906 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1834;
    result_570427906 = 0;
    Label1: do {
      F.line = 1835;
      var i_570427918 = 0;
      F.line = 18;
      var i_436207715 = 0;
      Label2: do {
        F.line = 19;
          Label3: while (true) {
          if (!(i_436207715 < (a_570427904).length)) break Label3;
            F.line = 1835;
            i_570427918 = a_570427904[chckIndx(i_436207715, 0, (a_570427904).length - 1)];
            if ((i_570427918 == item_570427905)) {
            F.line = 1836;
            break BeforeRet;
            }
            
            F.line = 1835;
            result_570427906 = addInt(result_570427906, 1);
            F.line = 21;
            i_436207715 = addInt(i_436207715, 1);
          }
      } while (false);
    } while (false);
    F.line = 1838;
    result_570427906 = -1;
  } while (false);
  framePtr = F.prev;

  return result_570427906;

}

function contains_570427896(a_570427898, item_570427899) {
  var result_570427900 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1852;
    result_570427900 = (0 <= find_570427901(a_570427898, item_570427899));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_570427900;

}

function reverse_570427832(l_570427833) {
  var result_570427834 = 0;

  var F = {procname: "lexer.reverse", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 71;
    l_570427833.current = subInt(l_570427833.current, 1);
    F.line = 72;
    result_570427834 = source_570426724[0][chckIndx(l_570427833.current, 0, (source_570426724[0]).length - 1)];
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_570427834;

}

function makeNumber_570427892(l_570427893) {
  var F = {procname: "lexer.makeNumber", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
    F.line = 143;
    var strNumber_570427894 = [];
    F.line = 144;
    var hadDot_570427895 = false;
    Label1: do {
      F.line = 145;
        Label2: while (true) {
        if (!contains_570427896(makeNimstrLit("0123456789"), currentChar_570427850(l_570427893))) break Label2;
          F.line = 146;
          addChar(strNumber_570427894, currentChar_570427850(l_570427893));;
          advance_570427825(l_570427893);
        }
    } while (false);
    if (((currentChar_570427850(l_570427893) == 46) && contains_570427896(makeNimstrLit("0123456789"), nextChar_570427853(l_570427893)))) {
    F.line = 149;
    hadDot_570427895 = true;
    F.line = 150;
    addChar(strNumber_570427894, currentChar_570427850(l_570427893));;
    advance_570427825(l_570427893);
    Label3: do {
      F.line = 152;
        Label4: while (true) {
        if (!contains_570427896(makeNimstrLit("0123456789"), currentChar_570427850(l_570427893))) break Label4;
          F.line = 153;
          addChar(strNumber_570427894, currentChar_570427850(l_570427893));;
          advance_570427825(l_570427893);
        }
    } while (false);
    }
    
    if (hadDot_570427895) {
    F.line = 155;
    appendToken_570427842(l_570427893, 1, strNumber_570427894);
    }
    else {
      F.line = 156;
    appendToken_570427842(l_570427893, 0, strNumber_570427894);
    }
    
  framePtr = F.prev;

  
}

function imul_654311741(a_654311742, b_654311743) {
  var result_654311744 = 0;

  var F = {procname: "hashes.imul", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 289;
    var mask_654311745 = 65535;
    F.line = 291;
    var aHi_654311750 = ((a_654311742 >>> 16) & mask_654311745);
    F.line = 292;
    var aLo_654311751 = (a_654311742 & mask_654311745);
    F.line = 293;
    var bHi_654311756 = ((b_654311743 >>> 16) & mask_654311745);
    F.line = 294;
    var bLo_654311757 = (b_654311743 & mask_654311745);
    F.line = 295;
    result_654311744 = ((((aLo_654311751 * bLo_654311757) >>> 0) + (((((aHi_654311750 * bLo_654311757) >>> 0) + ((aLo_654311751 * bHi_654311756) >>> 0)) >>> 0) << 16)) >>> 0);
  framePtr = F.prev;

  return result_654311744;

}

function rotl32_654311762(x_654311763, r_654311764) {
  var result_654311765 = 0;

  var F = {procname: "hashes.rotl32", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 300;
    result_654311765 = ((x_654311763 << r_654311764) | (x_654311763 >>> subInt(32, r_654311764)));
  framePtr = F.prev;

  return result_654311765;

}

function murmurHash_654311774(x_654311775) {
  var result_654311776 = 0;

  var F = {procname: "hashes.murmurHash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 311;
    var size_654311785 = (x_654311775).length;
    F.line = 312;
    var stepSize_654311786 = 4;
    F.line = 313;
    var n_654311787 = divInt(size_654311785, stepSize_654311786);
    F.line = 315;
    var h1_654311788 = 0;
    F.line = 316;
    var i_654311789 = 0;
    Label1: do {
      F.line = 319;
        Label2: while (true) {
        if (!(i_654311789 < mulInt(n_654311787, stepSize_654311786))) break Label2;
          F.line = 320;
          var k1_654311790 = 0;
          F.line = 322;
          var j_654311791 = stepSize_654311786;
          Label3: do {
            F.line = 323;
              Label4: while (true) {
              if (!(0 < j_654311791)) break Label4;
                F.line = 324;
                j_654311791 = subInt(j_654311791, 1);
                F.line = 325;
                k1_654311790 = ((k1_654311790 << 8) | x_654311775[chckIndx(addInt(i_654311789, j_654311791), 0, (x_654311775).length - 1)]);
              }
          } while (false);
          F.line = 328;
          i_654311789 = addInt(i_654311789, stepSize_654311786);
          F.line = 330;
          k1_654311790 = imul_654311741(k1_654311790, 3432918353);
          F.line = 331;
          k1_654311790 = rotl32_654311762(k1_654311790, 15);
          F.line = 332;
          k1_654311790 = imul_654311741(k1_654311790, 461845907);
          F.line = 334;
          h1_654311788 = (h1_654311788 ^ k1_654311790);
          F.line = 335;
          h1_654311788 = rotl32_654311762(h1_654311788, 13);
          F.line = 336;
          h1_654311788 = ((((h1_654311788 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while (false);
    F.line = 339;
    var k1_654311808 = 0;
    F.line = 340;
    var rem_654311809 = modInt(size_654311785, stepSize_654311786);
    Label5: do {
      F.line = 341;
        Label6: while (true) {
        if (!(0 < rem_654311809)) break Label6;
          F.line = 342;
          rem_654311809 = subInt(rem_654311809, 1);
          F.line = 343;
          k1_654311808 = ((k1_654311808 << 8) | x_654311775[chckIndx(addInt(i_654311789, rem_654311809), 0, (x_654311775).length - 1)]);
        }
    } while (false);
    F.line = 344;
    k1_654311808 = imul_654311741(k1_654311808, 3432918353);
    F.line = 345;
    k1_654311808 = rotl32_654311762(k1_654311808, 15);
    F.line = 346;
    k1_654311808 = imul_654311741(k1_654311808, 461845907);
    F.line = 347;
    h1_654311788 = (h1_654311788 ^ k1_654311808);
    F.line = 350;
    h1_654311788 = (h1_654311788 ^ size_654311785);
    F.line = 351;
    h1_654311788 = (h1_654311788 ^ (h1_654311788 >>> 16));
    F.line = 352;
    h1_654311788 = imul_654311741(h1_654311788, 2246822507);
    F.line = 353;
    h1_654311788 = (h1_654311788 ^ (h1_654311788 >>> 13));
    F.line = 354;
    h1_654311788 = imul_654311741(h1_654311788, 3266489909);
    F.line = 355;
    h1_654311788 = (h1_654311788 ^ (h1_654311788 >>> 16));
    F.line = 356;
    result_654311776 = (h1_654311788 | 0);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_654311776;

}

function hash_654311873(x_654311874) {
  var result_654311875 = 0;

  var F = {procname: "hashes.hash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 388;
    result_654311875 = murmurHash_654311774((x_654311874.slice(0, (x_654311874).length - 1 + 1)));
  framePtr = F.prev;

  return result_654311875;

}

function rawGet_570425498(t_570425501, key_570425502, hc_570425503, hc_570425503_Idx) {
            var Temporary3;

  var result_570425504 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_570425503[hc_570425503_Idx] = hash_654311873(key_570425502);
    if ((hc_570425503[hc_570425503_Idx] == 0)) {
    F.line = 66;
    hc_570425503[hc_570425503_Idx] = 314159265;
    }
    
    if (((t_570425501.data).length == 0)) {
    F.line = 48;
    result_570425504 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_570425555 = (hc_570425503[hc_570425503_Idx] & (t_570425501.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_570425501.data[chckIndx(h_570425555, 0, (t_570425501.data).length - 1)].Field0)) break Label2;
            if (!(t_570425501.data[chckIndx(h_570425555, 0, (t_570425501.data).length - 1)].Field0 == hc_570425503[hc_570425503_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_570425501.data[chckIndx(h_570425555, 0, (t_570425501.data).length - 1)].Field1, key_570425502);            }          if (Temporary3) {
          F.line = 56;
          result_570425504 = h_570425555;
          break BeforeRet;
          }
          
          F.line = 57;
          h_570425555 = nextTry_637534242(h_570425555, (t_570425501.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_570425504 = subInt(-1, h_570425555);
  } while (false);
  framePtr = F.prev;

  return result_570425504;

}

function hasKey_570427991(t_570427994, key_570427995) {
  var result_570427996 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 371;
    var hc_570427997 = [0];
    F.line = 372;
    result_570427996 = (0 <= rawGet_570425498(t_570427994, key_570427995, hc_570427997, 0));
  framePtr = F.prev;

  return result_570427996;

}

function raiseKeyError_570428124(key_570428126) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 234;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_570428126 || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_570428057(t_570428060, key_570428061) {
  var result_570428062 = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym20_570428063 = [0];
    F.line = 243;
    var indexHEX60gensym20_570428070 = rawGet_570425498(t_570428060, key_570428061, hcHEX60gensym20_570428063, 0);
    if ((0 <= indexHEX60gensym20_570428070)) {
    F.line = 244;
    result_570428062 = t_570428060.data[chckIndx(indexHEX60gensym20_570428070, 0, (t_570428060.data).length - 1)].Field2;
    }
    else {
      F.line = 246;
    raiseKeyError_570428124(key_570428061);
    }
    
  framePtr = F.prev;

  return result_570428062;

}

function makeIdentifier_570427940(l_570427941) {
  var F = {procname: "lexer.makeIdentifier", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
    F.line = 160;
    var identifier_570427942 = [];
    Label1: do {
      F.line = 161;
        Label2: while (true) {
        if (!(contains_570427896(makeNimstrLit("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_"), currentChar_570427850(l_570427941)) || contains_570427896(makeNimstrLit("0123456789"), currentChar_570427850(l_570427941)))) break Label2;
          F.line = 162;
          addChar(identifier_570427942, currentChar_570427850(l_570427941));;
          advance_570427825(l_570427941);
        }
    } while (false);
    if (hasKey_570427991(keywords_570426721, identifier_570427942)) {
    if (eqStrings(identifier_570427942, makeNimstrLit("self"))) {
    F.line = 165;
    appendToken_570427842(l_570427941, HEX5BHEX5D_570428057(keywords_570426721, identifier_570427942), makeNimstrLit("self"));
    }
    else {
    if (eqStrings(identifier_570427942, makeNimstrLit("super"))) {
    F.line = 166;
    appendToken_570427842(l_570427941, HEX5BHEX5D_570428057(keywords_570426721, identifier_570427942), makeNimstrLit("super"));
    }
    else {
      F.line = 167;
    appendToken_570427842(l_570427941, HEX5BHEX5D_570428057(keywords_570426721, identifier_570427942), []);
    }
    }
    }
    else {
      F.line = 168;
    appendToken_570427842(l_570427941, 3, identifier_570427942);
    }
    
  framePtr = F.prev;

  
}

function tokenize_570427864(l_570427865) {
                    var Temporary5;

  var result_570428254 = [];

  var F = {procname: "lexer.tokenize", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/lexer.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 205;
    var c_570428255 = 0;
    F.line = 206;
    var strInterpBreak_570428256 = false;
    Label1: do {
      F.line = 207;
        Label2: while (true) {
        if (!!(isAtEnd_570427839(l_570427865))) break Label2;
          F.line = 208;
          c_570428255 = advance_570427825(l_570427865);
          F.line = 209;
          switch (c_570428255) {
          case 40:
            F.line = 210;
            appendToken_570427842(l_570427865, 4, []);
            break;
          case 41:
            F.line = 211;
            appendToken_570427842(l_570427865, 5, []);
            break;
          case 91:
            F.line = 212;
            appendToken_570427842(l_570427865, 8, []);
            break;
          case 93:
            F.line = 213;
            appendToken_570427842(l_570427865, 9, []);
            break;
          case 123:
            F.line = 214;
            appendToken_570427842(l_570427865, 6, []);
            break;
          case 125:
            if (inStrInterp_570426725[0]) {
            if ((1 < strInterpDepth_570426726[0])) {
            F.line = 217;
            strInterpDepth_570426726[0] = subInt(strInterpDepth_570426726[0], 1);
            }
            else {
            if ((strInterpDepth_570426726[0] == 1)) {
            F.line = 219;
            strInterpDepth_570426726[0] = subInt(strInterpDepth_570426726[0], 1);
            F.line = 220;
            strInterpBreak_570428256 = true;
            F.line = 221;
            break Label1;
            }
            }
            }
            
            F.line = 222;
            appendToken_570427842(l_570427865, 7, []);
            break;
          case 58:
            F.line = 223;
            appendToken_570427842(l_570427865, 10, []);
            break;
          case 59:
            F.line = 224;
            appendToken_570427842(l_570427865, 11, []);
            break;
          case 43:
            F.line = 225;
            plusShorthand_570428244(l_570427865);
            break;
          case 45:
            F.line = 226;
            minusShorthand_570428246(l_570427865);
            break;
          case 126:
            F.line = 227;
            appendToken_570427842(l_570427865, 18, []);
            break;
          case 42:
            F.line = 228;
            starShorthand_570428248(l_570427865);
            break;
          case 37:
            F.line = 229;
            appendToken_570427842(l_570427865, 21, []);
            break;
          case 47:
            F.line = 230;
            slahShorthand_570428250(l_570427865);
            break;
          case 64:
            F.line = 231;
            appendToken_570427842(l_570427865, 25, []);
            break;
          case 94:
            F.line = 232;
            appendToken_570427842(l_570427865, 26, []);
            break;
          case 44:
            F.line = 233;
            appendToken_570427842(l_570427865, 27, []);
            break;
          case 36:
            F.line = 234;
            appendToken_570427842(l_570427865, 47, []);
            break;
          case 34:
            F.line = 235;
            makeString_570427866(l_570427865);
            break;
          case 38:
            F.line = 237;
            appendToken_570427842(l_570427865, 56, makeNimstrLit("self"));
            F.line = 238;
            appendToken_570427842(l_570427865, 41, []);
            break;
          case 33:
            if (doesMatch_570427856(l_570427865, 61)) {
            F.line = 240;
            appendToken_570427842(l_570427865, 38, []);
            }
            else {
              F.line = 241;
            appendToken_570427842(l_570427865, 28, []);
            }
            
            break;
          case 60:
            if (doesMatch_570427856(l_570427865, 45)) {
            F.line = 243;
            appendToken_570427842(l_570427865, 29, []);
            }
            else {
            if (doesMatch_570427856(l_570427865, 61)) {
            F.line = 244;
            appendToken_570427842(l_570427865, 36, []);
            }
            else {
              F.line = 245;
            appendToken_570427842(l_570427865, 37, []);
            }
            }
            break;
          case 61:
            if (doesMatch_570427856(l_570427865, 61)) {
            F.line = 247;
            appendToken_570427842(l_570427865, 33, []);
            }
            else {
            if (doesMatch_570427856(l_570427865, 62)) {
            F.line = 248;
            appendToken_570427842(l_570427865, 31, []);
            }
            else {
              F.line = 249;
            appendToken_570427842(l_570427865, 32, []);
            }
            }
            break;
          case 62:
            if (doesMatch_570427856(l_570427865, 61)) {
            F.line = 251;
            appendToken_570427842(l_570427865, 34, []);
            }
            else {
              F.line = 252;
            appendToken_570427842(l_570427865, 35, []);
            }
            
            break;
          case 46:
            if (doesMatch_570427856(l_570427865, 46)) {
            F.line = 254;
            appendToken_570427842(l_570427865, 40, []);
            }
            else {
              F.line = 255;
            appendToken_570427842(l_570427865, 41, []);
            }
            
            break;
          case 35:
            if (doesMatch_570427856(l_570427865, 123)) {
            F.line = 257;
            skipBlockComment_570427877(l_570427865);
            }
            else {
              Label3: do {
                F.line = 259;
                  Label4: while (true) {
                    if (!!((currentChar_570427850(l_570427865) == 10))) Temporary5 = false; else {                      Temporary5 = !(isAtEnd_570427839(l_570427865));                    }                  if (!Temporary5) break Label4;
                    advance_570427825(l_570427865);
                  }
              } while (false);
            }
            
            break;
          case 10:
            F.line = 263;
            l_570427865.line = addInt(l_570427865.line, 1);
            break;
          default: 
            if (contains_570427896(makeNimstrLit("0123456789"), c_570428255)) {
            reverse_570427832(l_570427865);
            F.line = 267;
            makeNumber_570427892(l_570427865);
            }
            else {
            if (contains_570427896(makeNimstrLit("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_"), c_570428255)) {
            reverse_570427832(l_570427865);
            F.line = 270;
            makeIdentifier_570427940(l_570427865);
            }
            else {
            if (contains_570427896(makeNimstrLit(" \x09"), c_570428255)) {
            }
            else {
              F.line = 272;
              F.line = 272;
              var fmtRes_570428285 = mnewString(0);
              F.line = 272;
              fmtRes_570428285.push.apply(fmtRes_570428285, makeNimstrLit("Unrecognized character \'"));;
              F.line = 635;
              addChar(fmtRes_570428285, c_570428255);;
              F.line = 272;
              fmtRes_570428285.push.apply(fmtRes_570428285, makeNimstrLit("\'"));;
            error_1006632984(sourceId_989855747[0], l_570427865.line, makeNimstrLit("SyntaxError"), fmtRes_570428285);
            }
            }}
            break;
          }
        }
    } while (false);
    if (!(strInterpBreak_570428256)) {
    F.line = 274;
    appendToken_570427842(l_570427865, 42, []);
    }
    
    if (!(inStrInterp_570426725[0])) {
    F.line = 275;
    sourceId_989855747[0] = addInt(sourceId_989855747[0], 1);
    }
    
    F.line = 276;
    result_570428254 = nimCopy(null, l_570427865.tokens, NTI570426076);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_570428254;

}

function newParser_587202570(tokens_587202571) {
  var result_587202572 = ({tokens: [], current: 0, loopDepth: 0, statements: []});

  var F = {procname: "parser.newParser", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 21;
    result_587202572 = nimCopy(result_587202572, {tokens: nimCopy(null, tokens_587202571, NTI587202567), current: 0, loopDepth: 0, statements: []}, NTI587202563);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587202572;

}

function currentToken_587202621(p_587202622) {
  var result_587202623 = null;

  var F = {procname: "parser.currentToken", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 48;
    result_587202623 = p_587202622.tokens[chckIndx(p_587202622.current, 0, (p_587202622.tokens).length - 1)];
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587202623;

}

function isAtEnd_587202624(p_587202625) {
  var result_587202626 = false;

  var F = {procname: "parser.isAtEnd", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 51;
    result_587202626 = (currentToken_587202621(p_587202625).kind == 42);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587202626;

}

function checkCurrentTok_587202632(p_587202633, ttype_587202634) {
  var result_587202635 = false;

  var F = {procname: "parser.checkCurrentTok", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (isAtEnd_587202624(p_587202633)) {
    F.line = 55;
    result_587202635 = false;
    break BeforeRet;
    }
    else {
      F.line = 56;
      result_587202635 = (currentToken_587202621(p_587202633).kind == ttype_587202634);
      break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_587202635;

}

function previousToken_587202618(p_587202619) {
  var result_587202620 = null;

  var F = {procname: "parser.previousToken", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 45;
    result_587202620 = p_587202619.tokens[chckIndx(subInt(p_587202619.current, 1), 0, (p_587202619.tokens).length - 1)];
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587202620;

}

function advance_587202652(p_587202653) {
  var result_587202654 = null;

  var F = {procname: "parser.advance", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!(isAtEnd_587202624(p_587202653))) {
    F.line = 66;
    p_587202653.current = addInt(p_587202653.current, 1);
    }
    
    F.line = 67;
    result_587202654 = previousToken_587202618(p_587202653);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587202654;

}

function doesMatch_587202659(p_587202660, types_587202661) {
  var result_587202662 = false;

  var F = {procname: "parser.doesMatch", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    Label1: do {
      F.line = 71;
      var i_587202675 = null;
      var i_587202675_Idx = 0;
      F.line = 8;
      var i_436207726 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436207726 < (types_587202661).length)) break Label3;
            F.line = 71;
            i_587202675 = types_587202661; i_587202675_Idx = chckIndx(i_436207726, 0, (types_587202661).length - 1);
            if (checkCurrentTok_587202632(p_587202660, i_587202675[i_587202675_Idx])) {
            advance_587202652(p_587202660);
            F.line = 74;
            result_587202662 = true;
            break BeforeRet;
            }
            
            F.line = 11;
            i_436207726 = addInt(i_436207726, 1);
          }
      } while (false);
    } while (false);
    F.line = 75;
    result_587202662 = false;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587202662;

}

function error_1006633457(token_1006633458, errorName_1006633459, message_1006633460) {
  var F = {procname: "error.error", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/error.nim", line: 0};
  framePtr = F;
    F.line = 43;
    error_1006632984(token_1006633458.sId, token_1006633458.line, errorName_1006633459, message_1006633460);
  framePtr = F.prev;

  
}

function expect_587202676(p_587202677, ttype_587202678, message_587202679) {
  var result_587202680 = null;

  var F = {procname: "parser.expect", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (checkCurrentTok_587202632(p_587202677, ttype_587202678)) {
    F.line = 78;
    result_587202680 = advance_587202652(p_587202677);
    break BeforeRet;
    }
    else {
      F.line = 80;
    error_1006633457(currentToken_587202621(p_587202677), makeNimstrLit("SyntaxError"), message_587202679);
    }
    
  } while (false);
  framePtr = F.prev;

  return result_587202680;

}

function getParams_587202607(p_587202608, kind_587202609) {
  var result_587203541 = [];

  var F = {procname: "parser.getParams", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    expect_587202676(p_587202608, 4, (makeNimstrLit("Expected \'(\' after ") || []).concat(kind_587202609 || [],makeNimstrLit("name") || []));
    F.line = 385;
    var parameters_587203542 = [];
    if (!(checkCurrentTok_587202632(p_587202608, 5))) {
    F.line = 387;
    var hadDefault_587203543 = false;
    F.line = 388;
    var hadRest_587203544 = false;
    Label1: do {
      F.line = 390;
        Label2: while (true) {
        if (!true) break Label2;
          if ((256 <= (parameters_587203542).length)) {
          F.line = 391;
          error_1006633457(currentToken_587202621(p_587202608), makeNimstrLit("SyntaxError"), makeNimstrLit("Cannot have more than 256 parameters"));
          }
          
          F.line = 392;
          var param_587203549 = expect_587202676(p_587202608, 3, makeNimstrLit("Expected parameter name"));
          if ((doesMatch_587202659(p_587202608, [32]) && !(hadRest_587203544))) {
          F.line = 394;
          var defaultValue_587203550 = expression_587202595(p_587202608);
          F.line = 395;
          hadDefault_587203543 = true;
          F.line = 396;
          parameters_587203542.push({paramName: param_587203549, default: defaultValue_587203550, m_type: NTI1023410257});;
          }
          else {
          if ((doesMatch_587202659(p_587202608, [12]) && !(hadRest_587203544))) {
          F.line = 398;
          parameters_587203542.push({paramName: param_587203549, m_type: NTI1023410259});;
          F.line = 399;
          hadRest_587203544 = true;
          }
          else {
            if ((hadDefault_587203543 || hadRest_587203544)) {
            F.line = 402;
            error_1006633457(param_587203549, makeNimstrLit("SyntaxError"), makeNimstrLit("Required parameter cannot follow default parameter, and default param cannot follow rest param."));
            }
            
            F.line = 403;
            parameters_587203542.push({paramName: param_587203549, m_type: NTI1023410258});;
          }
          }
          if (!(doesMatch_587202659(p_587202608, [27]))) {
          F.line = 405;
          break Label1;
          }
          
        }
    } while (false);
    }
    
    expect_587202676(p_587202608, 5, makeNimstrLit("Expected \')\' after parameters"));
    F.line = 409;
    result_587203541 = nimCopy(null, parameters_587203542, NTI587203352);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203541;

}

function checkNextTok_587202640(p_587202641, ttype_587202642) {
  var result_587202643 = false;

  var F = {procname: "parser.checkNextTok", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (isAtEnd_587202624(p_587202641)) {
    F.line = 60;
    result_587202643 = false;
    break BeforeRet;
    }
    else {
    if ((p_587202641.tokens[chckIndx(addInt(p_587202641.current, 1), 0, (p_587202641.tokens).length - 1)].kind == 42)) {
    F.line = 61;
    result_587202643 = false;
    break BeforeRet;
    }
    else {
      F.line = 62;
      result_587202643 = (p_587202641.tokens[chckIndx(addInt(p_587202641.current, 1), 0, (p_587202641.tokens).length - 1)].kind == ttype_587202642);
      break BeforeRet;
    }
    }
  } while (false);
  framePtr = F.prev;

  return result_587202643;

}

function parseBlock_587202597(p_587202598) {
  var result_587203703 = [];

  var F = {procname: "parser.parseBlock", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 449;
    var statements_587203708 = [];
    Label1: do {
      F.line = 450;
        Label2: while (true) {
        if (!(!(checkCurrentTok_587202632(p_587202598, 7)) && !(isAtEnd_587202624(p_587202598)))) break Label2;
          F.line = 451;
          statements_587203708.push(declaration_587203698(p_587202598));;
        }
    } while (false);
    expect_587202676(p_587202598, 7, makeNimstrLit("Expected \'}\' after a block"));
    F.line = 453;
    result_587203703 = nimCopy(null, statements_587203708, NTI587203480);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203703;

}

function functionBody_587202610(p_587202611, kind_587202612) {
  var result_587203629 = null;

  var F = {procname: "parser.functionBody", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 412;
    var parameters_587203630 = getParams_587202607(p_587202611, kind_587202612);
    expect_587202676(p_587202611, 6, (makeNimstrLit("Expected \'{\' before ") || []).concat(kind_587202612 || [],makeNimstrLit(" body") || []));
    F.line = 415;
    var body_587203631 = parseBlock_587202597(p_587202611);
    F.line = 416;
    result_587203629 = {parameters: nimCopy(null, parameters_587203630, NTI587202607), body: nimCopy(null, body_587203631, NTI587202596), m_type: NTI1023410235};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203629;

}

function ifStatement_587202599(p_587202600) {
  var result_587203478 = null;

  var F = {procname: "parser.ifStatement", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    expect_587202676(p_587202600, 4, makeNimstrLit("Expected \'(\' after \'if\'"));
    F.line = 365;
    var condition_587203479 = expression_587202595(p_587202600);
    expect_587202676(p_587202600, 5, makeNimstrLit("Expected \')\' after if condition"));
    F.line = 367;
    var thenBranch_587203480 = statement_587202613(p_587202600);
    F.line = 369;
    var elifBranches_587203485 = [];
    Label1: do {
      F.line = 370;
        Label2: while (true) {
        if (!doesMatch_587202659(p_587202600, [51])) break Label2;
          expect_587202676(p_587202600, 4, makeNimstrLit("Expected \'(\' after \'elif\'"));
          F.line = 372;
          var elifCondition_587203486 = expression_587202595(p_587202600);
          expect_587202676(p_587202600, 5, makeNimstrLit("Expected \')\' after if condition"));
          F.line = 374;
          var elifThenBranch_587203487 = statement_587202613(p_587202600);
          F.line = 375;
          elifBranches_587203485.push({condition: elifCondition_587203486, thenBranch: elifThenBranch_587203487, m_type: NTI1023410243});;
        }
    } while (false);
    F.line = 377;
    var elseBranch_587203492 = null;
    if (doesMatch_587202659(p_587202600, [52])) {
    F.line = 379;
    elseBranch_587203492 = statement_587202613(p_587202600);
    }
    
    F.line = 381;
    result_587203478 = {condition: condition_587203479, thenBranch: thenBranch_587203480, elseBranch: elseBranch_587203492, elifBranches: nimCopy(null, elifBranches_587203485, NTI587203299), m_type: NTI1023410241};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203478;

}

function whileStatement_587202601(p_587202602) {
  var result_587203464 = null;

  var F = {procname: "parser.whileStatement", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 352;
    var keyword_587203465 = previousToken_587202618(p_587202602);
    expect_587202676(p_587202602, 4, makeNimstrLit("Expected \'(\' after \'while\'"));
    F.line = 354;
    var condition_587203466 = expression_587202595(p_587202602);
    expect_587202676(p_587202602, 5, makeNimstrLit("Expected \')\' after while condition"));
    F.line = 356;
    try {
    F.line = 357;
    p_587202602.loopDepth = addInt(p_587202602.loopDepth, 1);
    F.line = 358;
    var body_587203471 = statement_587202613(p_587202602);
    F.line = 359;
    result_587203464 = {condition: condition_587203466, body: body_587203471, keyword: keyword_587203465, m_type: NTI1023410246};
    break BeforeRet;
    } finally {
    framePtr = F;
    F.line = 361;
    p_587202602.loopDepth = subInt(p_587202602.loopDepth, 1);
    }
  } while (false);
  framePtr = F.prev;

  return result_587203464;

}

function exprStmt_587203226(p_587203227) {
  var result_587203228 = null;

  var F = {procname: "parser.exprStmt", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 267;
    var expre_587203229 = expression_587202595(p_587203227);
    if (!(dontNeedSemicolon_587202617[0])) {
    expect_587202676(p_587203227, 11, makeNimstrLit("Expected \';\'"));
    }
    
    F.line = 269;
    result_587203228 = {expression: expre_587203229, m_type: NTI1023410239};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203228;

}

function forStatement_587202603(p_587202604) {
  var result_587203404 = null;

  var F = {procname: "parser.forStatement", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 324;
    var keyword_587203405 = previousToken_587202618(p_587202604);
    expect_587202676(p_587202604, 4, makeNimstrLit("Expected \'(\' after \'for\'"));
    F.line = 327;
    var init_587203406 = null;
    if (doesMatch_587202659(p_587202604, [11])) {
    }
    else {
    if (doesMatch_587202659(p_587202604, [47])) {
    F.line = 329;
    init_587203406 = varDeclaration_587203379(p_587202604);
    }
    else {
      F.line = 330;
      init_587203406 = exprStmt_587203226(p_587202604);
    }
    }
    F.line = 332;
    var condition_587203407 = null;
    if (!(checkCurrentTok_587202632(p_587202604, 11))) {
    F.line = 333;
    condition_587203407 = expression_587202595(p_587202604);
    }
    
    if (!(dontNeedSemicolon_587202617[0])) {
    expect_587202676(p_587202604, 11, makeNimstrLit("Expected \';\' after loop condition"));
    }
    
    F.line = 336;
    var increment_587203408 = null;
    if (!(checkCurrentTok_587202632(p_587202604, 5))) {
    F.line = 337;
    increment_587203408 = expression_587202595(p_587202604);
    }
    
    expect_587202676(p_587202604, 5, makeNimstrLit("Expected \')\' after for clauses"));
    F.line = 340;
    try {
    F.line = 341;
    p_587202604.loopDepth = addInt(p_587202604.loopDepth, 1);
    F.line = 342;
    var body_587203413 = statement_587202613(p_587202604);
    if (!((increment_587203408 == null))) {
    F.line = 343;
    body_587203413 = {statements: [body_587203413, {expression: increment_587203408, m_type: NTI1023410239}], m_type: NTI1023410244};
    }
    
    if ((condition_587203407 == null)) {
    F.line = 344;
    condition_587203407 = {kind: 60, value: [], m_type: NTI1023410218};
    }
    
    F.line = 345;
    body_587203413 = {condition: condition_587203407, body: body_587203413, keyword: keyword_587203405, m_type: NTI1023410246};
    if (!((init_587203406 == null))) {
    F.line = 346;
    body_587203413 = {statements: [init_587203406, body_587203413], m_type: NTI1023410244};
    }
    
    F.line = 347;
    result_587203404 = body_587203413;
    break BeforeRet;
    } finally {
    framePtr = F;
    F.line = 349;
    p_587202604.loopDepth = subInt(p_587202604.loopDepth, 1);
    }
  } while (false);
  framePtr = F.prev;

  return result_587203404;

}

function returnStatement_587202605(p_587202606) {
  var result_587203358 = null;

  var F = {procname: "parser.returnStatement", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 310;
    var keyword_587203359 = previousToken_587202618(p_587202606);
    F.line = 311;
    var value_587203360 = null;
    if (!(checkCurrentTok_587202632(p_587202606, 11))) {
    F.line = 312;
    value_587203360 = expression_587202595(p_587202606);
    }
    
    if (!(dontNeedSemicolon_587202617[0])) {
    expect_587202676(p_587202606, 11, makeNimstrLit("Expected \';\' after return value"));
    }
    
    F.line = 314;
    result_587203358 = {keyword: keyword_587203359, value: value_587203360, m_type: NTI1023410248};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203358;

}

function breakStatement_587203248(p_587203249) {
  var result_587203250 = null;

  var F = {procname: "parser.breakStatement", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((p_587203249.loopDepth == 0)) {
    F.line = 273;
    error_1006633457(previousToken_587202618(p_587203249), makeNimstrLit("SyntaxError"), makeNimstrLit("\'break\' can only be used inside a loop"));
    }
    
    if (!(dontNeedSemicolon_587202617[0])) {
    expect_587202676(p_587203249, 11, makeNimstrLit("Expected \';\' after \'break\'"));
    }
    
    F.line = 275;
    result_587203250 = {m_type: NTI1023410249};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203250;

}

function importStatement_587203269(p_587203270) {
  var result_587203271 = null;

  var F = {procname: "parser.importStatement", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 278;
    var token_587203272 = previousToken_587202618(p_587203270);
    F.line = 279;
    var name_587203273 = expression_587202595(p_587203270);
    F.line = 281;
    var imports_587203278 = [];
    if (doesMatch_587202659(p_587203270, [31])) {
    F.line = 283;
    imports_587203278.push(hash_654311873(currentToken_587202621(p_587203270).value));;
    advance_587202652(p_587203270);
    Label1: do {
      F.line = 285;
        Label2: while (true) {
        if (!doesMatch_587202659(p_587203270, [27])) break Label2;
          F.line = 286;
          imports_587203278.push(hash_654311873(currentToken_587202621(p_587203270).value));;
          advance_587202652(p_587203270);
        }
    } while (false);
    }
    
    if (!(dontNeedSemicolon_587202617[0])) {
    expect_587202676(p_587203270, 11, makeNimstrLit("Expected \';\' after import statement"));
    }
    
    F.line = 290;
    result_587203271 = {name: name_587203273, keyword: token_587203272, imports: nimCopy(null, imports_587203278, NTI587203123), m_type: NTI1023410250};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203271;

}

function continueStatement_587203314(p_587203315) {
  var result_587203316 = null;

  var F = {procname: "parser.continueStatement", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((p_587203315.loopDepth == 0)) {
    F.line = 294;
    error_1006633457(previousToken_587202618(p_587203315), makeNimstrLit("SyntaxError"), makeNimstrLit("\'continue\' can only be used inside a loop"));
    }
    
    if (!(dontNeedSemicolon_587202617[0])) {
    expect_587202676(p_587203315, 11, makeNimstrLit("Expected \';\' after \'continue\'"));
    }
    
    F.line = 296;
    result_587203316 = {m_type: NTI1023410252};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203316;

}

function statement_587202613(p_587202614) {
  var result_587203337 = null;

  var F = {procname: "parser.statement", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (doesMatch_587202659(p_587202614, [6])) {
    F.line = 299;
    dontNeedSemicolon_587202617[0] = false;
    F.line = 299;
    result_587203337 = {statements: parseBlock_587202597(p_587202614), m_type: NTI1023410244};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202614, [50])) {
    F.line = 300;
    result_587203337 = ifStatement_587202599(p_587202614);
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202614, [55])) {
    F.line = 301;
    result_587203337 = whileStatement_587202601(p_587202614);
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202614, [53])) {
    F.line = 302;
    result_587203337 = forStatement_587202603(p_587202614);
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202614, [57])) {
    F.line = 303;
    result_587203337 = returnStatement_587202605(p_587202614);
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202614, [59])) {
    F.line = 304;
    result_587203337 = breakStatement_587203248(p_587202614);
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202614, [63])) {
    F.line = 305;
    result_587203337 = importStatement_587203269(p_587202614);
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202614, [58])) {
    F.line = 306;
    result_587203337 = continueStatement_587203314(p_587202614);
    break BeforeRet;
    }
    }}}}}}}
    F.line = 307;
    result_587203337 = exprStmt_587203226(p_587202614);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203337;

}

function primary_587202681(p_587202682) {
  var result_587202683 = null;

  var F = {procname: "parser.primary", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (doesMatch_587202659(p_587202682, [60])) {
    F.line = 83;
    result_587202683 = {kind: 60, value: makeNimstrLit("true"), m_type: NTI1023410218};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202682, [61])) {
    F.line = 85;
    result_587202683 = {kind: 61, value: makeNimstrLit("false"), m_type: NTI1023410218};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202682, [62])) {
    F.line = 87;
    result_587202683 = {kind: 62, value: makeNimstrLit("null"), m_type: NTI1023410218};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202682, [56])) {
    F.line = 89;
    result_587202683 = {keyword: previousToken_587202618(p_587202682), m_type: NTI1023410234};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202682, [54])) {
    F.line = 92;
    var keyword_587202684 = previousToken_587202618(p_587202682);
    expect_587202676(p_587202682, 41, makeNimstrLit("Expected \'.\' after \'super\'"));
    F.line = 94;
    var m_587202685 = expect_587202676(p_587202682, 3, makeNimstrLit("Expected superclass method name"));
    F.line = 95;
    result_587202683 = {keyword: keyword_587202684, classMethod: m_587202685, m_type: NTI1023410233};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202682, [0, 1, 2])) {
    F.line = 97;
    result_587202683 = {kind: previousToken_587202618(p_587202682).kind, value: nimCopy(null, previousToken_587202618(p_587202682).value, NTI33554439), m_type: NTI1023410218};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202682, [3])) {
    F.line = 100;
    var name_587202686 = previousToken_587202618(p_587202682);
    F.line = 101;
    result_587202683 = {name: name_587202686, m_type: NTI1023410225};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202682, [4])) {
    F.line = 104;
    var expre_587202687 = expression_587202595(p_587202682);
    expect_587202676(p_587202682, 5, makeNimstrLit("Expected \')\'"));
    F.line = 106;
    result_587202683 = {expression: expre_587202687, m_type: NTI1023410216};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202682, [8])) {
    F.line = 109;
    var keyword_587202688 = previousToken_587202618(p_587202682);
    if (doesMatch_587202659(p_587202682, [9])) {
    F.line = 112;
    result_587202683 = {values: [], keyword: keyword_587202688, m_type: NTI1023410219};
    break BeforeRet;
    }
    
    F.line = 114;
    var values_587202693 = [];
    F.line = 115;
    values_587202693.push(expression_587202595(p_587202682));;
    Label1: do {
      F.line = 117;
        Label2: while (true) {
        if (!doesMatch_587202659(p_587202682, [27])) break Label2;
          F.line = 118;
          values_587202693.push(expression_587202595(p_587202682));;
        }
    } while (false);
    expect_587202676(p_587202682, 9, makeNimstrLit("Expected \']\'"));
    F.line = 121;
    result_587202683 = {values: nimCopy(null, values_587202693, NTI587202680), keyword: keyword_587202688, m_type: NTI1023410219};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202682, [6])) {
    F.line = 124;
    var keyword_587202702 = previousToken_587202618(p_587202682);
    if (doesMatch_587202659(p_587202682, [7])) {
    F.line = 126;
    result_587202683 = {keys: [], values: [], keyword: keyword_587202702, m_type: NTI1023410221};
    break BeforeRet;
    }
    
    F.line = 128;
    var keys_587202711 = [];
    F.line = 129;
    var values_587202712 = [];
    F.line = 131;
    keys_587202711.push(expression_587202595(p_587202682));;
    expect_587202676(p_587202682, 10, makeNimstrLit("Expected \':\' after key"));
    F.line = 133;
    values_587202712.push(expression_587202595(p_587202682));;
    Label3: do {
      F.line = 135;
        Label4: while (true) {
        if (!doesMatch_587202659(p_587202682, [27])) break Label4;
          F.line = 136;
          keys_587202711.push(expression_587202595(p_587202682));;
          expect_587202676(p_587202682, 10, makeNimstrLit("Expected \':\' after key"));
          F.line = 138;
          values_587202712.push(expression_587202595(p_587202682));;
        }
    } while (false);
    expect_587202676(p_587202682, 7, makeNimstrLit("Expected \'}\'"));
    F.line = 141;
    result_587202683 = {keys: nimCopy(null, keys_587202711, NTI587202717), values: nimCopy(null, values_587202712, NTI587202718), keyword: keyword_587202702, m_type: NTI1023410221};
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587202682, [43])) {
    F.line = 144;
    var params_587202729 = getParams_587202607(p_587202682, makeNimstrLit("function"));
    if (checkNextTok_587202640(p_587202682, 7)) {
    F.line = 146;
    result_587202683 = functionBody_587202610(p_587202682, makeNimstrLit("function"));
    break BeforeRet;
    }
    else {
      expect_587202676(p_587202682, 31, makeNimstrLit("Expected \'=>\' before function body"));
      F.line = 149;
      dontNeedSemicolon_587202617[0] = true;
      F.line = 150;
      var statement_587202730 = statement_587202613(p_587202682);
      F.line = 151;
      dontNeedSemicolon_587202617[0] = false;
      F.line = 152;
      var body_587202731 = [];
      F.line = 152;
      body_587202731.push(statement_587202730);;
      F.line = 153;
      result_587202683 = {parameters: nimCopy(null, params_587202729, NTI587202607), body: nimCopy(null, body_587202731, NTI587202739), m_type: NTI1023410235};
      break BeforeRet;
    }
    
    }
    }}}}}}}}}}
    F.line = 154;
    error_1006633457(currentToken_587202621(p_587202682), makeNimstrLit("SyntaxError"), makeNimstrLit("Expected an expression"));
  } while (false);
  framePtr = F.prev;

  return result_587202683;

}

function finishCall_587202943(p_587202944, callee_587202945, arg_587202946) {
  var result_587202947 = null;

  var F = {procname: "parser.finishCall", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 157;
    var arguments_587202948 = [];
    if (!((arg_587202946 == null))) {
    F.line = 158;
    arguments_587202948.push(arg_587202946);;
    }
    
    if (!(checkCurrentTok_587202632(p_587202944, 5))) {
    F.line = 160;
    arguments_587202948.push(expression_587202595(p_587202944));;
    Label1: do {
      F.line = 161;
        Label2: while (true) {
        if (!doesMatch_587202659(p_587202944, [27])) break Label2;
          if ((256 <= (arguments_587202948).length)) {
          F.line = 163;
          error_1006633457(currentToken_587202621(p_587202944), makeNimstrLit("SyntaxError"), makeNimstrLit("Cannot have more than 256 arguments"));
          }
          
          F.line = 164;
          arguments_587202948.push(expression_587202595(p_587202944));;
        }
    } while (false);
    }
    
    F.line = 165;
    var paren_587202968 = expect_587202676(p_587202944, 5, makeNimstrLit("Expected \')\' after arguments"));
    if (doesMatch_587202659(p_587202944, [29])) {
    F.line = 168;
    arguments_587202948.push(expression_587202595(p_587202944));;
    }
    
    F.line = 169;
    result_587202947 = {callee: callee_587202945, paren: paren_587202968, arguments: nimCopy(null, arguments_587202948, NTI587202884), m_type: NTI1023410229};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587202947;

}

function call_587202991(p_587202992, arg_587202993) {
  var result_587202994 = null;

  var F = {procname: "parser.call", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 172;
    var expre_587202995 = primary_587202681(p_587202992);
    Label1: do {
      F.line = 173;
        Label2: while (true) {
        if (!true) break Label2;
          if (doesMatch_587202659(p_587202992, [4])) {
          F.line = 175;
          expre_587202995 = finishCall_587202943(p_587202992, expre_587202995, arg_587202993);
          }
          else {
          if (doesMatch_587202659(p_587202992, [41])) {
          F.line = 177;
          var name_587202996 = expect_587202676(p_587202992, 3, makeNimstrLit("Expected property name after \'.\'"));
          F.line = 178;
          expre_587202995 = {instance: expre_587202995, name: name_587202996, m_type: NTI1023410231};
          }
          else {
          if (doesMatch_587202659(p_587202992, [30])) {
          F.line = 180;
          expre_587202995 = call_587202991(p_587202992, expre_587202995);
          F.line = 181;
          break Label1;
          }
          else {
          if (doesMatch_587202659(p_587202992, [25])) {
          F.line = 183;
          var token_587202997 = previousToken_587202618(p_587202992);
          expect_587202676(p_587202992, 8, makeNimstrLit("Expected \'[\'"));
          F.line = 185;
          var indexOrKey_587202998 = expression_587202595(p_587202992);
          expect_587202676(p_587202992, 9, makeNimstrLit("Expected \']\'"));
          F.line = 187;
          expre_587202995 = {variable: expre_587202995, indexOrKey: indexOrKey_587202998, token: token_587202997, m_type: NTI1023410226};
          }
          else {
            F.line = 189;
            break Label1;
          }
          }}}
        }
    } while (false);
    F.line = 190;
    result_587202994 = expre_587202995;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587202994;

}

function unary_587203035(p_587203036) {
  var result_587203037 = null;

  var F = {procname: "parser.unary", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (doesMatch_587202659(p_587203036, [28, 15])) {
    F.line = 194;
    result_587203037 = {operator: previousToken_587202618(p_587203036), right: unary_587203035(p_587203036), m_type: NTI1023410217};
    break BeforeRet;
    }
    
    F.line = 195;
    result_587203037 = call_587202991(p_587203036, null);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203037;

}

function factor_587203065(p_587203066) {
  var result_587203067 = null;

  var F = {procname: "parser.factor", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 198;
    var expre_587203068 = unary_587203035(p_587203066);
    Label1: do {
      F.line = 199;
        Label2: while (true) {
        if (!doesMatch_587202659(p_587203066, [22, 19, 21])) break Label2;
          F.line = 200;
          expre_587203068 = {left: expre_587203068, operator: previousToken_587202618(p_587203066), right: unary_587203035(p_587203066), m_type: NTI1023410215};
        }
    } while (false);
    F.line = 201;
    result_587203067 = expre_587203068;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203067;

}

function term_587203087(p_587203088) {
  var result_587203089 = null;

  var F = {procname: "parser.term", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 204;
    var expre_587203090 = factor_587203065(p_587203088);
    Label1: do {
      F.line = 205;
        Label2: while (true) {
        if (!doesMatch_587202659(p_587203088, [15, 12])) break Label2;
          F.line = 206;
          expre_587203090 = {left: expre_587203090, operator: previousToken_587202618(p_587203088), right: factor_587203065(p_587203088), m_type: NTI1023410215};
        }
    } while (false);
    F.line = 207;
    result_587203089 = expre_587203090;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203089;

}

function comparison_587203091(p_587203092) {
  var result_587203093 = null;

  var F = {procname: "parser.comparison", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 210;
    var expre_587203094 = term_587203087(p_587203092);
    Label1: do {
      F.line = 211;
        Label2: while (true) {
        if (!doesMatch_587202659(p_587203092, [35, 34, 37, 36])) break Label2;
          F.line = 212;
          expre_587203094 = {left: expre_587203094, operator: previousToken_587202618(p_587203092), right: term_587203087(p_587203092), m_type: NTI1023410215};
        }
    } while (false);
    F.line = 213;
    result_587203093 = expre_587203094;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203093;

}

function equality_587203104(p_587203105) {
  var result_587203106 = null;

  var F = {procname: "parser.equality", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 216;
    var expre_587203107 = comparison_587203091(p_587203105);
    Label1: do {
      F.line = 217;
        Label2: while (true) {
        if (!doesMatch_587202659(p_587203105, [38, 33])) break Label2;
          F.line = 218;
          expre_587203107 = {left: expre_587203107, operator: previousToken_587202618(p_587203105), right: comparison_587203091(p_587203105), m_type: NTI1023410215};
        }
    } while (false);
    F.line = 219;
    result_587203106 = expre_587203107;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203106;

}

function andExpr_587203108(p_587203109) {
  var result_587203110 = null;

  var F = {procname: "parser.andExpr", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 222;
    var expre_587203111 = equality_587203104(p_587203109);
    Label1: do {
      F.line = 223;
        Label2: while (true) {
        if (!doesMatch_587202659(p_587203109, [46])) break Label2;
          F.line = 224;
          expre_587203111 = {left: expre_587203111, operator: previousToken_587202618(p_587203109), right: equality_587203104(p_587203109), m_type: NTI1023410224};
        }
    } while (false);
    F.line = 225;
    result_587203110 = expre_587203111;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203110;

}

function orExpr_587203130(p_587203131) {
  var result_587203132 = null;

  var F = {procname: "parser.orExpr", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 228;
    var expre_587203133 = andExpr_587203108(p_587203131);
    Label1: do {
      F.line = 229;
        Label2: while (true) {
        if (!doesMatch_587202659(p_587203131, [49])) break Label2;
          F.line = 230;
          expre_587203133 = {left: expre_587203133, operator: previousToken_587202618(p_587203131), right: andExpr_587203108(p_587203131), m_type: NTI1023410224};
        }
    } while (false);
    F.line = 231;
    result_587203132 = expre_587203133;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203132;

}

function assignment_587203134(p_587203135) {
  var result_587203136 = null;

  var F = {procname: "parser.assignment", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 234;
    var expre_587203137 = orExpr_587203130(p_587203135);
    if (doesMatch_587202659(p_587203135, [32])) {
    F.line = 236;
    var equals_587203138 = previousToken_587202618(p_587203135);
    F.line = 237;
    var value_587203139 = assignment_587203134(p_587203135);
    if (isObj(expre_587203137.m_type, NTI1023410225)) {
    F.line = 240;
    var name_587203147 = expre_587203137.name;
    F.line = 241;
    result_587203136 = {name: name_587203147, value: value_587203139, m_type: NTI1023410227};
    break BeforeRet;
    }
    else {
    if (isObj(expre_587203137.m_type, NTI1023410226)) {
    F.line = 243;
    var listOrMap_587203155 = expre_587203137;
    F.line = 244;
    var variable_587203156 = listOrMap_587203155.variable;
    F.line = 245;
    var indexOrKey_587203157 = listOrMap_587203155.indexOrKey;
    F.line = 246;
    var token_587203158 = listOrMap_587203155.token;
    F.line = 247;
    result_587203136 = {variable: variable_587203156, indexOrKey: indexOrKey_587203157, value: value_587203139, token: token_587203158, m_type: NTI1023410228};
    break BeforeRet;
    }
    else {
    if (isObj(expre_587203137.m_type, NTI1023410231)) {
    F.line = 249;
    var get_587203166 = expre_587203137;
    F.line = 250;
    result_587203136 = {instance: get_587203166.instance, name: get_587203166.name, value: value_587203139, m_type: NTI1023410232};
    break BeforeRet;
    }
    else {
      F.line = 252;
    error_1006633457(equals_587203138, makeNimstrLit("SyntaxError"), makeNimstrLit("Invalid assignment target"));
    }
    }}
    }
    else {
    if ((((doesMatch_587202659(p_587203135, [14]) || doesMatch_587202659(p_587203135, [17])) || doesMatch_587202659(p_587203135, [20])) || doesMatch_587202659(p_587203135, [23]))) {
    F.line = 255;
    var ope_587203167 = previousToken_587202618(p_587203135);
    F.line = 256;
    var value_587203168 = assignment_587203134(p_587203135);
    F.line = 257;
    result_587203136 = {left: expre_587203137, operator: ope_587203167, right: value_587203168, m_type: NTI1023410215};
    break BeforeRet;
    }
    else {
    if ((doesMatch_587202659(p_587203135, [13]) || doesMatch_587202659(p_587203135, [16]))) {
    F.line = 260;
    result_587203136 = {left: expre_587203137, operator: previousToken_587202618(p_587203135), right: {kind: 0, value: makeNimstrLit("1"), m_type: NTI1023410218}, m_type: NTI1023410215};
    break BeforeRet;
    }
    }}
    F.line = 262;
    result_587203136 = expre_587203137;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203136;

}

function expression_587202595(p_587202596) {
  var result_587203225 = null;

  var F = {procname: "parser.expression", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 264;
    result_587203225 = assignment_587203134(p_587202596);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203225;

}

function varDeclaration_587203379(p_587203380) {
  var result_587203381 = null;

  var F = {procname: "parser.varDeclaration", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 317;
    var name_587203382 = expect_587202676(p_587203380, 3, makeNimstrLit("Expected an identifier"));
    F.line = 318;
    var init_587203383 = null;
    if (doesMatch_587202659(p_587203380, [32])) {
    F.line = 319;
    init_587203383 = expression_587202595(p_587203380);
    }
    
    if (!(dontNeedSemicolon_587202617[0])) {
    expect_587202676(p_587203380, 11, makeNimstrLit("Expected \';\' after variable declaration"));
    }
    
    F.line = 321;
    result_587203381 = {name: name_587203382, init: init_587203383, m_type: NTI1023410240};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203381;

}

function function_587203632(p_587203633, kind_587203634) {
  var result_587203635 = null;

  var F = {procname: "parser.function", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 419;
    var name_587203636 = expect_587202676(p_587203633, 3, (makeNimstrLit("Expected ") || []).concat(kind_587203634 || [],makeNimstrLit(" name") || []));
    F.line = 420;
    result_587203635 = {name: name_587203636, function: functionBody_587202610(p_587203633, kind_587203634), m_type: NTI1023410247};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203635;

}

function classDeclaration_587203655(p_587203656) {
  var result_587203657 = null;

  var F = {procname: "parser.classDeclaration", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 423;
    var name_587203658 = expect_587202676(p_587203656, 3, makeNimstrLit("Expected class name"));
    F.line = 425;
    var superclass_587203659 = null;
    if (doesMatch_587202659(p_587203656, [29])) {
    expect_587202676(p_587203656, 3, makeNimstrLit("Expected a superclass name"));
    F.line = 428;
    superclass_587203659 = {name: previousToken_587202618(p_587203656), m_type: NTI1023410225};
    }
    
    expect_587202676(p_587203656, 6, makeNimstrLit("Expected \'{\' before class body"));
    F.line = 430;
    var methods_587203660 = [];
    F.line = 431;
    var classMethods_587203661 = [];
    Label1: do {
      F.line = 432;
        Label2: while (true) {
        if (!(!(checkCurrentTok_587202632(p_587203656, 7)) && !(isAtEnd_587202624(p_587203656)))) break Label2;
          F.line = 433;
          var isCM_587203662 = doesMatch_587202659(p_587203656, [45]);
          if (!(isCM_587203662)) {
          F.line = 434;
          methods_587203660.push(function_587203632(p_587203656, makeNimstrLit("method")));;
          }
          else {
            F.line = 435;
          classMethods_587203661.push(function_587203632(p_587203656, makeNimstrLit("method")));;
          }
          
        }
    } while (false);
    expect_587202676(p_587203656, 7, makeNimstrLit("Expected \'}\' after class body"));
    F.line = 437;
    result_587203657 = {name: name_587203658, methods: nimCopy(null, methods_587203660, NTI587203439), classMethods: nimCopy(null, classMethods_587203661, NTI587203440), superclass: superclass_587203659, m_type: NTI1023410253};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203657;

}

function declaration_587203698(p_587203699) {
  var result_587203700 = null;

  var F = {procname: "parser.declaration", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (doesMatch_587202659(p_587203699, [47])) {
    F.line = 440;
    result_587203700 = varDeclaration_587203379(p_587203699);
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587203699, [48])) {
    F.line = 441;
    result_587203700 = varDeclaration_587203379(p_587203699);
    break BeforeRet;
    }
    else {
    if ((checkCurrentTok_587202632(p_587203699, 43) && checkNextTok_587202640(p_587203699, 3))) {
    expect_587202676(p_587203699, 43, []);
    F.line = 444;
    result_587203700 = function_587203632(p_587203699, makeNimstrLit("function"));
    break BeforeRet;
    }
    else {
    if (doesMatch_587202659(p_587203699, [44])) {
    F.line = 445;
    result_587203700 = classDeclaration_587203655(p_587203699);
    break BeforeRet;
    }
    else {
      F.line = 446;
      result_587203700 = statement_587202613(p_587203699);
      break BeforeRet;
    }
    }}}
  } while (false);
  framePtr = F.prev;

  return result_587203700;

}

function parse_587202615(p_587202616) {
  var result_587203715 = [];

  var F = {procname: "parser.parse", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/parser.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    Label1: do {
      F.line = 456;
        Label2: while (true) {
        if (!!(isAtEnd_587202624(p_587202616))) break Label2;
          F.line = 457;
          p_587202616.statements.push(declaration_587203698(p_587202616));;
        }
    } while (false);
    F.line = 458;
    result_587203715 = nimCopy(null, p_587202616.statements, NTI587202565);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_587203715;

}

function initTable_1056964665(initialSize_1056964668) {
  var result_1056964669 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym0_1056964671 = slotsNeeded_637534250(chckRange(initialSize_1056964668, 0, 2147483647));
    F.line = 167;
    result_1056964669.counter = 0;
    F.line = 168;
    result_1056964669.data = new Array(chckRange(correctSizeHEX60gensym0_1056964671, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1056964671, 0, 2147483647) ; ++i) { result_1056964669.data[i] = {Field0: 0, Field1: 0, Field2: null}; }  framePtr = F.prev;

  return result_1056964669;

}

function newEnv_1056964626(enclosing_1056964627) {
  var result_1056964664 = null;

  var F = {procname: "env.newEnv", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 34;
    result_1056964664 = {enclosing: enclosing_1056964627, values: initTable_1056964665(32)};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1056964664;

}

function rawGet_1056964818(t_1056964821, key_1056964822, hc_1056964823, hc_1056964823_Idx) {
            var Temporary3;

  var result_1056964824 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_1056964823[hc_1056964823_Idx] = hash_654311594(key_1056964822);
    if ((hc_1056964823[hc_1056964823_Idx] == 0)) {
    F.line = 66;
    hc_1056964823[hc_1056964823_Idx] = 314159265;
    }
    
    if (((t_1056964821.data).length == 0)) {
    F.line = 48;
    result_1056964824 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1056964878 = (hc_1056964823[hc_1056964823_Idx] & (t_1056964821.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_1056964821.data[chckIndx(h_1056964878, 0, (t_1056964821.data).length - 1)].Field0)) break Label2;
            if (!(t_1056964821.data[chckIndx(h_1056964878, 0, (t_1056964821.data).length - 1)].Field0 == hc_1056964823[hc_1056964823_Idx])) Temporary3 = false; else {              Temporary3 = (t_1056964821.data[chckIndx(h_1056964878, 0, (t_1056964821.data).length - 1)].Field1 == key_1056964822);            }          if (Temporary3) {
          F.line = 56;
          result_1056964824 = h_1056964878;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1056964878 = nextTry_637534242(h_1056964878, (t_1056964821.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1056964824 = subInt(-1, h_1056964878);
  } while (false);
  framePtr = F.prev;

  return result_1056964824;

}

function mustRehash_1056965157(t_1056965159) {
  var result_1056965160 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1056965159.counter < (t_1056965159.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_1056965160 = ((mulInt((t_1056965159.data).length, 2) < mulInt(t_1056965159.counter, 3)) || (subInt((t_1056965159.data).length, t_1056965159.counter) < 4));
  framePtr = F.prev;

  return result_1056965160;

}

function rawInsert_1056965606(t_1056965610, data_1056965611, data_1056965611_Idx, key_1056965612, val_1056965613, hc_1056965614, h_1056965615) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_1056965611[data_1056965611_Idx][chckIndx(h_1056965615, 0, (data_1056965611[data_1056965611_Idx]).length - 1)].Field1 = key_1056965612;
    F.line = 23;
    data_1056965611[data_1056965611_Idx][chckIndx(h_1056965615, 0, (data_1056965611[data_1056965611_Idx]).length - 1)].Field2 = val_1056965613;
    F.line = 24;
    data_1056965611[data_1056965611_Idx][chckIndx(h_1056965615, 0, (data_1056965611[data_1056965611_Idx]).length - 1)].Field0 = hc_1056965614;
  framePtr = F.prev;

  
}

function enlarge_1056965312(t_1056965315) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 249;
    var n_1056965318 = [];
    F.line = 250;
    n_1056965318 = new Array(chckRange(mulInt((t_1056965315.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1056965315.data).length, 2), 0, 2147483647) ; ++i) { n_1056965318[i] = {Field0: 0, Field1: 0, Field2: null}; }    F.line = 251;
    var Temporary1 = t_1056965315.data; t_1056965315.data = n_1056965318; n_1056965318 = Temporary1;    Label2: do {
      F.line = 252;
      var i_1056965382 = 0;
      F.line = 43;
      var colontmp__436207747 = 0;
      F.line = 252;
      colontmp__436207747 = (n_1056965318).length - 1;
      F.line = 65;
      var res_436207748 = 0;
      Label3: do {
        F.line = 66;
          Label4: while (true) {
          if (!(res_436207748 <= colontmp__436207747)) break Label4;
            F.line = 252;
            i_1056965382 = res_436207748;
            F.line = 253;
            var eh_1056965436 = n_1056965318[chckIndx(i_1056965382, 0, (n_1056965318).length - 1)].Field0;
            if (isFilled_637534239(eh_1056965436)) {
            F.line = 255;
            var j_1056965440 = (eh_1056965436 & (t_1056965315.data).length - 1);
            Label5: do {
              F.line = 256;
                Label6: while (true) {
                if (!isFilled_637534239(t_1056965315.data[chckIndx(j_1056965440, 0, (t_1056965315.data).length - 1)].Field0)) break Label6;
                  F.line = 257;
                  j_1056965440 = nextTry_637534242(j_1056965440, (t_1056965315.data).length - 1);
                }
            } while (false);
            F.line = 259;
            rawInsert_1056965606(t_1056965315, t_1056965315, "data", n_1056965318[chckIndx(i_1056965382, 0, (n_1056965318).length - 1)].Field1, n_1056965318[chckIndx(i_1056965382, 0, (n_1056965318).length - 1)].Field2, eh_1056965436, j_1056965440);
            }
            
            F.line = 68;
            res_436207748 = addInt(res_436207748, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_1056965784(t_1056965787, key_1056965788, hc_1056965789) {
  var result_1056965790 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_1056965787.data).length == 0)) {
    F.line = 48;
    result_1056965790 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1056965841 = (hc_1056965789 & (t_1056965787.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_1056965787.data[chckIndx(h_1056965841, 0, (t_1056965787.data).length - 1)].Field0)) break Label2;
          if (((t_1056965787.data[chckIndx(h_1056965841, 0, (t_1056965787.data).length - 1)].Field0 == hc_1056965789) && (t_1056965787.data[chckIndx(h_1056965841, 0, (t_1056965787.data).length - 1)].Field1 == key_1056965788))) {
          F.line = 56;
          result_1056965790 = h_1056965841;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1056965841 = nextTry_637534242(h_1056965841, (t_1056965787.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1056965790 = subInt(-1, h_1056965841);
  } while (false);
  framePtr = F.prev;

  return result_1056965790;

}

function HEX5BHEX5DHEX3D_1056964757(t_1056964760, key_1056964761, val_1056964762) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1056964760.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym3_1056964812 = slotsNeeded_637534250(32);
    F.line = 167;
    t_1056964760.counter = 0;
    F.line = 168;
    t_1056964760.data = new Array(chckRange(correctSizeHEX60gensym3_1056964812, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_1056964812, 0, 2147483647) ; ++i) { t_1056964760.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    F.line = 57;
    var hc_1056964817 = [0];
    F.line = 58;
    var index_1056965050 = rawGet_1056964818(t_1056964760, key_1056964761, hc_1056964817, 0);
    if ((0 <= index_1056965050)) {
    F.line = 59;
    t_1056964760.data[chckIndx(index_1056965050, 0, (t_1056964760.data).length - 1)].Field2 = val_1056964762;
    }
    else {
      if (((t_1056964760.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym8_1056965152 = slotsNeeded_637534250(32);
      F.line = 167;
      t_1056964760.counter = 0;
      F.line = 168;
      t_1056964760.data = new Array(chckRange(correctSizeHEX60gensym8_1056965152, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1056965152, 0, 2147483647) ; ++i) { t_1056964760.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1056965157(t_1056964760)) {
      F.line = 49;
      enlarge_1056965312(t_1056964760);
      F.line = 50;
      index_1056965050 = rawGetKnownHC_1056965784(t_1056964760, key_1056964761, hc_1056964817[0]);
      }
      
      F.line = 51;
      index_1056965050 = subInt(-1, index_1056965050);
      F.line = 52;
      rawInsert_1056965606(t_1056964760, t_1056964760, "data", key_1056964761, val_1056964762, hc_1056964817[0], index_1056965050);
      F.line = 60;
      t_1056964760.counter = addInt(t_1056964760.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function define_1056964628(env_1056964629, env_1056964629_Idx, name_1056964630, value_1056964631) {
  var F = {procname: "env.define", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
  framePtr = F;
    F.line = 41;
    var hashed_1056964716 = 0;
    F.line = 42;
    hashed_1056964716 = hash_654311873(name_1056964630);
    F.line = 43;
    HEX5BHEX5DHEX3D_1056964757(env_1056964629[env_1056964629_Idx].values, hashed_1056964716, value_1056964631);
  framePtr = F.prev;

  
}

function nimFloatToString_335544438(a_335544439) {
  var result_335544440 = null;

  var F = {procname: "formatfloat.nimFloatToString", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/formatfloat.nim", line: 0};
  framePtr = F;
    F.line = 101;
        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_335544439))
      result_335544440 = a_335544439 === 0 && 1 / a_335544439 < 0 ? "-0.0" : a_335544439+".0"
    else {
      result_335544440 = a_335544439+""
      if(nimOnlyDigitsOrMinus(result_335544440)){
        result_335544440 = a_335544439+".0"
      }
    }
  
  framePtr = F.prev;

  return result_335544440;

}

function addFloat_33557373(result_33557375, result_33557375_Idx, x_33557376) {
  var F = {procname: "addFloat.addFloat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/formatfloat.nim", line: 0};
  framePtr = F;
    F.line = 131;
    add_33556420(result_33557375, result_33557375_Idx, nimFloatToString_335544438(x_33557376));
  framePtr = F.prev;

  
}

function HEX24_33557369(x_33557371) {
  var result_33557372 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 32;
    addFloat_33557373(result_33557372, 0, x_33557371);
  framePtr = F.prev;

  return result_33557372[0];

}

function addQuoted_1090520501(s_1090520503, s_1090520503_Idx, x_1090520504) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2930;
    s_1090520503[s_1090520503_Idx].push.apply(s_1090520503[s_1090520503_Idx], HEX24_1090520413(x_1090520504));;
  framePtr = F.prev;

  
}

function collectionToString_1090520463(x_1090520465, prefix_1090520466, separator_1090520467, suffix_1090520468) {
  var result_1090520469 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 121;
    result_1090520469[0] = nimCopy(null, prefix_1090520466, NTI33554439);
    F.line = 122;
    var firstElement_1090520470 = true;
    Label1: do {
      F.line = 123;
      var value_1090520491 = null;
      var value_1090520491_Idx = 0;
      F.line = 235;
      var i_436207753 = 0;
      F.line = 236;
      var L_436207754 = (x_1090520465).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207753 < L_436207754)) break Label3;
            F.line = 123;
            value_1090520491 = x_1090520465; value_1090520491_Idx = i_436207753;
            if (firstElement_1090520470) {
            F.line = 125;
            firstElement_1090520470 = false;
            }
            else {
              F.line = 127;
            result_1090520469[0].push.apply(result_1090520469[0], separator_1090520467);;
            }
            
            if ((value_1090520491[value_1090520491_Idx] == null)) {
            F.line = 132;
            result_1090520469[0].push.apply(result_1090520469[0], makeNimstrLit("nil"));;
            }
            else {
              F.line = 134;
            addQuoted_1090520501(result_1090520469, 0, value_1090520491[value_1090520491_Idx]);
            }
            
            F.line = 239;
            i_436207753 += 1;
            if (!(((x_1090520465).length == L_436207754))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 137;
    result_1090520469[0].push.apply(result_1090520469[0], suffix_1090520468);;
  framePtr = F.prev;

  return result_1090520469[0];

}

function HEX24_1090520459(x_1090520461) {
  var result_1090520462 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 148;
    result_1090520462 = nimCopy(null, collectionToString_1090520463(x_1090520461, makeNimstrLit("@["), makeNimstrLit(", "), makeNimstrLit("]")), NTI33554439);
  framePtr = F.prev;

  return result_1090520462;

}

function len_1090520604(t_1090520607) {
  var result_1090520608 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 485;
    result_1090520608 = t_1090520607.counter;
  framePtr = F.prev;

  return result_1090520608;

}

function HEX24_1090520555(t_1090520558) {
  var result_1090520559 = [[]];

  var F = {procname: "$.$", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if ((len_1090520604(t_1090520558) == 0)) {
    F.line = 193;
    result_1090520559[0] = nimCopy(null, makeNimstrLit("{:}"), NTI33554439);
    }
    else {
      F.line = 195;
      result_1090520559[0] = nimCopy(null, makeNimstrLit("{"), NTI33554439);
      Label1: do {
        F.line = 196;
        var key_1090520891 = null;
        F.line = 196;
        var val_1090520892 = null;
        F.line = 694;
        var L_436207761 = len_1090520604(t_1090520558);
        Label2: do {
          F.line = 695;
          var h_436207763 = 0;
          F.line = 75;
          var colontmp__436207764 = 0;
          F.line = 695;
          colontmp__436207764 = (t_1090520558.data).length - 1;
          F.line = 90;
          var res_436207765 = 0;
          Label3: do {
            F.line = 91;
              Label4: while (true) {
              if (!(res_436207765 <= colontmp__436207764)) break Label4;
                F.line = 695;
                h_436207763 = res_436207765;
                if (isFilled_637534239(t_1090520558.data[chckIndx(h_436207763, 0, (t_1090520558.data).length - 1)].Field0)) {
                F.line = 196;
                key_1090520891 = t_1090520558.data[chckIndx(h_436207763, 0, (t_1090520558.data).length - 1)].Field1;
                F.line = 196;
                val_1090520892 = t_1090520558.data[chckIndx(h_436207763, 0, (t_1090520558.data).length - 1)].Field2;
                if ((1 < (result_1090520559[0]).length)) {
                F.line = 197;
                result_1090520559[0].push.apply(result_1090520559[0], makeNimstrLit(", "));;
                }
                
                F.line = 196;
                addQuoted_1090520501(result_1090520559, 0, key_1090520891);
                F.line = 196;
                result_1090520559[0].push.apply(result_1090520559[0], makeNimstrLit(": "));;
                F.line = 196;
                addQuoted_1090520501(result_1090520559, 0, val_1090520892);
                if (!((len_1090520604(t_1090520558) == L_436207761))) {
                F.line = 698;
                failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim(698, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                F.line = 93;
                res_436207765 = addInt(res_436207765, 1);
              }
          } while (false);
        } while (false);
      } while (false);
      F.line = 201;
      result_1090520559[0].push.apply(result_1090520559[0], makeNimstrLit("}"));;
    }
    
  framePtr = F.prev;

  return result_1090520559[0];

}

function allCharsInSet_922748283(s_922748284, theSet_922748285) {
  var result_922748286 = false;

  var F = {procname: "strutils.allCharsInSet", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    Label1: do {
      F.line = 1746;
      var c_922748287 = 0;
      F.line = 253;
      var i_436207768 = 0;
      F.line = 254;
      var L_436207769 = (s_922748284).length;
      Label2: do {
        F.line = 255;
          Label3: while (true) {
          if (!(i_436207768 < L_436207769)) break Label3;
            F.line = 1746;
            c_922748287 = s_922748284[chckIndx(i_436207768, 0, (s_922748284).length - 1)];
            if (!((theSet_922748285[c_922748287] != undefined))) {
            F.line = 1747;
            result_922748286 = false;
            break BeforeRet;
            }
            
            F.line = 257;
            i_436207768 = addInt(i_436207768, 1);
            if (!(((s_922748284).length == L_436207769))) {
            F.line = 258;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 1748;
    result_922748286 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_922748286;

}

function nsuIsEmptyOrWhitespace(s_922749202) {
  var result_922749203 = false;

  var F = {procname: "strutils.isEmptyOrWhitespace", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2895;
    result_922749203 = allCharsInSet_922748283(s_922749202, ConstSet10);
  framePtr = F.prev;

  return result_922749203;

}

function HEX24_1090520413(obj_1090520414) {
  var result_1090520415 = [];

  var F = {procname: "interpreterObj.$", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreterObj.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (isObj(obj_1090520414.m_type, NTI1040187426)) {
    F.line = 42;
    result_1090520415 = nimCopy(null, makeNimstrLit("null"), NTI33554439);
    break BeforeRet;
    }
    else {
    if (isObj(obj_1090520414.m_type, NTI1040187405)) {
    F.line = 43;
    result_1090520415 = nimCopy(null, HEX24_318767107(obj_1090520414.value), NTI33554439);
    break BeforeRet;
    }
    else {
    if (isObj(obj_1090520414.m_type, NTI1040187406)) {
    F.line = 44;
    result_1090520415 = nimCopy(null, HEX24_33557369(obj_1090520414.value), NTI33554439);
    break BeforeRet;
    }
    else {
    if (isObj(obj_1090520414.m_type, NTI1040187404)) {
    F.line = 45;
    result_1090520415 = nimCopy(null, obj_1090520414.value, NTI33554439);
    break BeforeRet;
    }
    else {
    if (isObj(obj_1090520414.m_type, NTI1040187407)) {
    F.line = 46;
    result_1090520415 = nimCopy(null, nimBoolToStr(obj_1090520414.value), NTI33554439);
    break BeforeRet;
    }
    else {
    if (isObj(obj_1090520414.m_type, NTI1040187408)) {
    F.line = 47;
    result_1090520415 = nimCopy(null, HEX24_1090520459(obj_1090520414.values), NTI33554439);
    break BeforeRet;
    }
    else {
    if (isObj(obj_1090520414.m_type, NTI1040187410)) {
    F.line = 48;
    result_1090520415 = nimCopy(null, HEX24_1090520555(obj_1090520414.map), NTI33554439);
    break BeforeRet;
    }
    else {
    if (isObj(obj_1090520414.m_type, NTI1090519070)) {
    if (!(nsuIsEmptyOrWhitespace(obj_1090520414.name))) {
    F.line = 50;
    result_1090520415 = nimCopy(null, (makeNimstrLit("<fn ") || []).concat(obj_1090520414.name || [],makeNimstrLit(">") || []), NTI33554439);
    break BeforeRet;
    }
    else {
      F.line = 51;
      result_1090520415 = nimCopy(null, makeNimstrLit("<anonymous fn>"), NTI33554439);
      break BeforeRet;
    }
    
    }
    else {
    if (isObj(obj_1090520414.m_type, NTI1090519064)) {
    F.line = 52;
    result_1090520415 = nimCopy(null, makeNimstrLit("<native fn>"), NTI33554439);
    break BeforeRet;
    }
    else {
    if (isObj(obj_1090520414.m_type, NTI1090519071)) {
    F.line = 53;
    result_1090520415 = nimCopy(null, (makeNimstrLit("<class ") || []).concat(obj_1090520414.name || [],makeNimstrLit(">") || []), NTI33554439);
    break BeforeRet;
    }
    else {
    if (isObj(obj_1090520414.m_type, NTI1090519087)) {
    F.line = 54;
    result_1090520415 = nimCopy(null, (makeNimstrLit("<instance ") || []).concat(obj_1090520414.class.name || [],makeNimstrLit(">") || []), NTI33554439);
    break BeforeRet;
    }
    }}}}}}}}}}
    F.line = 57;
    result_1090520415 = nimCopy(null, makeNimstrLit("unknown type"), NTI33554439);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1090520415;

}

function newNull_1040187569() {
  var result_1040187570 = null;

  var F = {procname: "slaptype.newNull", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 46;
    result_1040187570 = {m_type: NTI1040187426};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1040187570;

}

function slapPrintln_1107296266(self_1107296267, self_1107296267_Idx, args_1107296268, token_1107296269) {
  var result_1107296270 = null;

  var F = {procname: "builtin.slapPrintln", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((args_1107296268).length == 0)) {
    F.line = 17;
    rawEcho([]);
    }
    else {
      F.line = 19;
    rawEcho(HEX24_1090520413(args_1107296268[chckIndx(0, 0, (args_1107296268).length - 1)]));
    }
    
    F.line = 20;
    result_1107296270 = newNull_1040187569();
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296270;

}

function slapPrint_1107296274(self_1107296275, self_1107296275_Idx, args_1107296276, token_1107296277) {
  var result_1107296278 = null;

  var F = {procname: "builtin.slapPrint", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 23;
    rawEcho(HEX24_1090520413(args_1107296276[chckIndx(0, 0, (args_1107296276).length - 1)]));
    F.line = 24;
    result_1107296278 = newNull_1040187569();
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296278;

}

function slapAppend_1107296279(self_1107296280, self_1107296280_Idx, args_1107296281, token_1107296282) {
  var result_1107296283 = null;

  var F = {procname: "builtin.slapAppend", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!(isObj(args_1107296281[chckIndx(0, 0, (args_1107296281).length - 1)].m_type, NTI1040187408))) {
    F.line = 28;
    error_1006633457(token_1107296282, makeNimstrLit("RuntimeError"), makeNimstrLit("append function only accepts a list and a value"));
    }
    
    F.line = 29;
    args_1107296281[chckIndx(0, 0, (args_1107296281).length - 1)].values.push(args_1107296281[chckIndx(1, 0, (args_1107296281).length - 1)]);;
    F.line = 30;
    result_1107296283 = newNull_1040187569();
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296283;

}

function pop_1107296305(s_1107296307, s_1107296307_Idx) {
  var result_1107296308 = null;

  var F = {procname: "pop.pop", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1863;
    var L_1107296312 = subInt((s_1107296307[s_1107296307_Idx]).length, 1);
    F.line = 1868;
    result_1107296308 = s_1107296307[s_1107296307_Idx][chckIndx(L_1107296312, 0, (s_1107296307[s_1107296307_Idx]).length - 1)];
    F.line = 1869;
    if (s_1107296307[s_1107296307_Idx].length < chckRange(L_1107296312, 0, 2147483647)) { for (var i = s_1107296307[s_1107296307_Idx].length ; i < chckRange(L_1107296312, 0, 2147483647) ; ++i) s_1107296307[s_1107296307_Idx].push(null); }
               else { s_1107296307[s_1107296307_Idx].length = chckRange(L_1107296312, 0, 2147483647); };
  framePtr = F.prev;

  return result_1107296308;

}

function slapPop_1107296294(self_1107296295, self_1107296295_Idx, args_1107296296, token_1107296297) {
  var result_1107296298 = null;

  var F = {procname: "builtin.slapPop", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!(isObj(args_1107296296[chckIndx(0, 0, (args_1107296296).length - 1)].m_type, NTI1040187408))) {
    F.line = 34;
    error_1006633457(token_1107296297, makeNimstrLit("RuntimeError"), makeNimstrLit("pop function only accepts a list"));
    }
    
    F.line = 35;
    result_1107296298 = pop_1107296305(args_1107296296[chckIndx(0, 0, (args_1107296296).length - 1)], "values");
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296298;

}

function newInt_1040187444(value_1040187445) {
  var result_1040187446 = null;

  var F = {procname: "slaptype.newInt", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 36;
    result_1040187446 = {value: value_1040187445, m_type: NTI1040187405};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1040187446;

}

function slapLen_1107296317(self_1107296318, self_1107296318_Idx, args_1107296319, token_1107296320) {
  var result_1107296321 = null;

  var F = {procname: "builtin.slapLen", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (isObj(args_1107296319[chckIndx(0, 0, (args_1107296319).length - 1)].m_type, NTI1040187404)) {
    F.line = 39;
    result_1107296321 = newInt_1040187444((args_1107296319[chckIndx(0, 0, (args_1107296319).length - 1)].value).length);
    break BeforeRet;
    }
    else {
    if (isObj(args_1107296319[chckIndx(0, 0, (args_1107296319).length - 1)].m_type, NTI1040187408)) {
    F.line = 41;
    result_1107296321 = newInt_1040187444((args_1107296319[chckIndx(0, 0, (args_1107296319).length - 1)].values).length);
    break BeforeRet;
    }
    }
    F.line = 42;
    error_1006633457(token_1107296320, makeNimstrLit("RuntimeError"), makeNimstrLit("len function only accepts a list or string"));
  } while (false);
  framePtr = F.prev;

  return result_1107296321;

}

function newString_1040187423(value_1040187424) {
  var result_1040187425 = null;

  var F = {procname: "slaptype.newString", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 34;
    result_1040187425 = {value: nimCopy(null, value_1040187424, NTI33554439), m_type: NTI1040187404};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1040187425;

}

function slapTypeof_1107296337(self_1107296338, self_1107296338_Idx, args_1107296339, token_1107296340) {
  var result_1107296341 = null;

  var F = {procname: "builtin.slapTypeof", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (isObj(args_1107296339[chckIndx(0, 0, (args_1107296339).length - 1)].m_type, NTI1040187426)) {
    F.line = 45;
    result_1107296341 = newString_1040187423(makeNimstrLit("null"));
    break BeforeRet;
    }
    
    if (isObj(args_1107296339[chckIndx(0, 0, (args_1107296339).length - 1)].m_type, NTI1040187405)) {
    F.line = 46;
    result_1107296341 = newString_1040187423(makeNimstrLit("int"));
    break BeforeRet;
    }
    
    if (isObj(args_1107296339[chckIndx(0, 0, (args_1107296339).length - 1)].m_type, NTI1040187408)) {
    F.line = 47;
    result_1107296341 = newString_1040187423(makeNimstrLit("list"));
    break BeforeRet;
    }
    
    if (isObj(args_1107296339[chckIndx(0, 0, (args_1107296339).length - 1)].m_type, NTI1040187404)) {
    F.line = 48;
    result_1107296341 = newString_1040187423(makeNimstrLit("str"));
    break BeforeRet;
    }
    
    if (isObj(args_1107296339[chckIndx(0, 0, (args_1107296339).length - 1)].m_type, NTI1040187407)) {
    F.line = 49;
    result_1107296341 = newString_1040187423(makeNimstrLit("bool"));
    break BeforeRet;
    }
    
    if ((isObj(args_1107296339[chckIndx(0, 0, (args_1107296339).length - 1)].m_type, NTI1090519070) || isObj(args_1107296339[chckIndx(0, 0, (args_1107296339).length - 1)].m_type, NTI1090519064))) {
    F.line = 50;
    result_1107296341 = newString_1040187423(makeNimstrLit("function"));
    break BeforeRet;
    }
    
    if (isObj(args_1107296339[chckIndx(0, 0, (args_1107296339).length - 1)].m_type, NTI1090519071)) {
    F.line = 51;
    result_1107296341 = newString_1040187423(makeNimstrLit("class"));
    break BeforeRet;
    }
    else {
      F.line = 52;
      result_1107296341 = newString_1040187423(makeNimstrLit("unknown"));
      break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_1107296341;

}

function newBool_1040187486(value_1040187487) {
  var result_1040187488 = null;

  var F = {procname: "slaptype.newBool", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 40;
    result_1040187488 = {value: value_1040187487, m_type: NTI1040187407};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1040187488;

}

function slapIsInt_1107296390(self_1107296391, self_1107296391_Idx, args_1107296392, token_1107296393) {
  var result_1107296394 = null;

  var F = {procname: "builtin.slapIsInt", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 54;
    result_1107296394 = newBool_1040187486(isObj(args_1107296392[chckIndx(0, 0, (args_1107296392).length - 1)].m_type, NTI1040187405));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296394;

}

function slapIsFloat_1107296401(self_1107296402, self_1107296402_Idx, args_1107296403, token_1107296404) {
  var result_1107296405 = null;

  var F = {procname: "builtin.slapIsFloat", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 56;
    result_1107296405 = newBool_1040187486(isObj(args_1107296403[chckIndx(0, 0, (args_1107296403).length - 1)].m_type, NTI1040187406));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296405;

}

function slapIsBool_1107296412(self_1107296413, self_1107296413_Idx, args_1107296414, token_1107296415) {
  var result_1107296416 = null;

  var F = {procname: "builtin.slapIsBool", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 58;
    result_1107296416 = newBool_1040187486(isObj(args_1107296414[chckIndx(0, 0, (args_1107296414).length - 1)].m_type, NTI1040187407));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296416;

}

function slapIsString_1107296423(self_1107296424, self_1107296424_Idx, args_1107296425, token_1107296426) {
  var result_1107296427 = null;

  var F = {procname: "builtin.slapIsString", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 60;
    result_1107296427 = newBool_1040187486(isObj(args_1107296425[chckIndx(0, 0, (args_1107296425).length - 1)].m_type, NTI1040187404));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296427;

}

function slapIsList_1107296434(self_1107296435, self_1107296435_Idx, args_1107296436, token_1107296437) {
  var result_1107296438 = null;

  var F = {procname: "builtin.slapIsList", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 62;
    result_1107296438 = newBool_1040187486(isObj(args_1107296436[chckIndx(0, 0, (args_1107296436).length - 1)].m_type, NTI1040187408));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296438;

}

function slapIsMap_1107296445(self_1107296446, self_1107296446_Idx, args_1107296447, token_1107296448) {
  var result_1107296449 = null;

  var F = {procname: "builtin.slapIsMap", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    result_1107296449 = newBool_1040187486(isObj(args_1107296447[chckIndx(0, 0, (args_1107296447).length - 1)].m_type, NTI1040187410));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296449;

}

function slapIsNull_1107296456(self_1107296457, self_1107296457_Idx, args_1107296458, token_1107296459) {
  var result_1107296460 = null;

  var F = {procname: "builtin.slapIsNull", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 66;
    result_1107296460 = newBool_1040187486(isObj(args_1107296458[chckIndx(0, 0, (args_1107296458).length - 1)].m_type, NTI1040187426));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296460;

}

function toInt_33556007(f_33556008) {
    var Temporary1;

  var result_33556009 = 0;

  var F = {procname: "system.toInt", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1468;
    if ((0.0 <= f_33556008)) {
    Temporary1 = (((f_33556008 + 0.5)) | 0);
    }
    else {
    Temporary1 = (((f_33556008 - 0.5)) | 0);
    }
    
    result_33556009 = Temporary1;
  framePtr = F.prev;

  return result_33556009;

}

function integerOutOfRangeError_872415480() {
  var F = {procname: "parseutils.integerOutOfRangeError", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 426;
    raiseException({message: makeNimstrLit("Parsed integer outside of valid range"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function rawParseInt_872415482(s_872415483, b_872415484, b_872415484_Idx, start_872415485) {
      var Temporary1;
          var Temporary4;
      var Temporary7;

  var result_872415486 = 0;

  var F = {procname: "parseutils.rawParseInt", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 434;
    var sign_872415487 = -1;
    F.line = 435;
    var i_872415488 = start_872415485;
    if ((i_872415488 < (s_872415483).length)) {
    if ((s_872415483[chckIndx(i_872415488, 0, (s_872415483).length - 1)] == 43)) {
    F.line = 437;
    i_872415488 += 1;
    }
    else {
    if ((s_872415483[chckIndx(i_872415488, 0, (s_872415483).length - 1)] == 45)) {
    F.line = 439;
    i_872415488 += 1;
    F.line = 440;
    sign_872415487 = 1;
    }
    }
    }
    
      if (!(i_872415488 < (s_872415483).length)) Temporary1 = false; else {        Temporary1 = (ConstSet11[s_872415483[chckIndx(i_872415488, 0, (s_872415483).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 442;
    b_872415484[b_872415484_Idx] = 0;
    Label2: do {
      F.line = 443;
        Label3: while (true) {
          if (!(i_872415488 < (s_872415483).length)) Temporary4 = false; else {            Temporary4 = (ConstSet12[s_872415483[chckIndx(i_872415488, 0, (s_872415483).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 444;
          var c_872415511 = (s_872415483[chckIndx(i_872415488, 0, (s_872415483).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_872415511) / 10) <= b_872415484[b_872415484_Idx])) {
          F.line = 446;
          b_872415484[b_872415484_Idx] = ((b_872415484[b_872415484_Idx] * 10) - c_872415511);
          }
          else {
            F.line = 448;
          integerOutOfRangeError_872415480();
          }
          
          F.line = 449;
          i_872415488 += 1;
          Label5: do {
            F.line = 450;
              Label6: while (true) {
              if (!((i_872415488 < (s_872415483).length) && (s_872415483[chckIndx(i_872415488, 0, (s_872415483).length - 1)] == 95))) break Label6;
                F.line = 450;
                i_872415488 += 1;
              }
          } while (false);
        }
    } while (false);
      if (!(sign_872415487 == -1)) Temporary7 = false; else {        Temporary7 = (b_872415484[b_872415484_Idx] == -9223372036854775808);      }    if (Temporary7) {
    F.line = 452;
    integerOutOfRangeError_872415480();
    }
    else {
      F.line = 454;
      b_872415484[b_872415484_Idx] = (b_872415484[b_872415484_Idx] * sign_872415487);
      F.line = 455;
      result_872415486 = (i_872415488 - start_872415485);
    }
    
    }
    
  framePtr = F.prev;

  return result_872415486;

}

function npuParseBiggestInt(s_872415529, number_872415530, number_872415530_Idx, start_872415531) {
  var result_872415532 = 0;

  var F = {procname: "parseutils.parseBiggestInt", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 469;
    var res_872415533 = [0];
    F.line = 472;
    result_872415532 = rawParseInt_872415482(s_872415529, res_872415533, 0, start_872415531);
    if (!((result_872415532 == 0))) {
    F.line = 474;
    number_872415530[number_872415530_Idx] = res_872415533[0];
    }
    
  framePtr = F.prev;

  return result_872415532;

}

function npuParseInt(s_872415535, number_872415536, number_872415536_Idx, start_872415537) {
      var Temporary1;

  var result_872415538 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 487;
    var res_872415539 = [0];
    F.line = 488;
    result_872415538 = npuParseBiggestInt(s_872415535, res_872415539, 0, start_872415537);
      if ((res_872415539[0] < -2147483648)) Temporary1 = true; else {        Temporary1 = (2147483647 < res_872415539[0]);      }    if (Temporary1) {
    F.line = 491;
    integerOutOfRangeError_872415480();
    }
    
    if (!((result_872415538 == 0))) {
    F.line = 493;
    number_872415536[number_872415536_Idx] = chckRange(res_872415539[0], -2147483648, 2147483647);
    }
    
  framePtr = F.prev;

  return result_872415538;

}

function nsuParseInt(s_922747678) {
      var Temporary1;

  var result_922747679 = [0];

  var F = {procname: "strutils.parseInt", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1069;
    result_922747679[0] = 0;
    F.line = 1070;
    var L_922747680 = npuParseInt(s_922747678, result_922747679, 0, 0);
      if (!((L_922747680 == (s_922747678).length))) Temporary1 = true; else {        Temporary1 = (L_922747680 == 0);      }    if (Temporary1) {
    F.line = 1072;
    raiseException({message: (makeNimstrLit("invalid integer: ") || []).concat(s_922747678 || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_922747679[0];

}

function slapConvertInt_1107296467(self_1107296468, self_1107296468_Idx, args_1107296469, token_1107296470) {
  var result_1107296471 = null;

  var F = {procname: "builtin.slapConvertInt", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (isObj(args_1107296469[chckIndx(0, 0, (args_1107296469).length - 1)].m_type, NTI1040187405)) {
    F.line = 69;
    result_1107296471 = args_1107296469[chckIndx(0, 0, (args_1107296469).length - 1)];
    break BeforeRet;
    }
    
    if (isObj(args_1107296469[chckIndx(0, 0, (args_1107296469).length - 1)].m_type, NTI1040187406)) {
    F.line = 70;
    result_1107296471 = newInt_1040187444(toInt_33556007(args_1107296469[chckIndx(0, 0, (args_1107296469).length - 1)].value));
    break BeforeRet;
    }
    
    if (isObj(args_1107296469[chckIndx(0, 0, (args_1107296469).length - 1)].m_type, NTI1040187404)) {
    F.line = 72;
++excHandler;
    try {
    F.line = 72;
    result_1107296471 = newInt_1040187444(nsuParseInt(args_1107296469[chckIndx(0, 0, (args_1107296469).length - 1)].value));
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    F.line = 73;
    error_1006633457(token_1107296470, makeNimstrLit("RuntimeError"), makeNimstrLit("Cannot convert to an integer"));
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
    }
    
    F.line = 74;
    error_1006633457(token_1107296470, makeNimstrLit("RuntimeError"), makeNimstrLit("Cannot convert to an integer"));
  } while (false);
  framePtr = F.prev;

  return result_1107296471;

}

function slapConvertStr_1107296490(self_1107296491, self_1107296491_Idx, args_1107296492, token_1107296493) {
  var result_1107296494 = null;

  var F = {procname: "builtin.slapConvertStr", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (isObj(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].m_type, NTI1040187405)) {
    F.line = 77;
    result_1107296494 = newString_1040187423(HEX24_318767107(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].value));
    break BeforeRet;
    }
    
    if (isObj(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].m_type, NTI1040187406)) {
    F.line = 78;
    result_1107296494 = newString_1040187423(HEX24_33557369(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].value));
    break BeforeRet;
    }
    
    if (isObj(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].m_type, NTI1040187426)) {
    F.line = 79;
    result_1107296494 = newString_1040187423(HEX24_1090520413(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)]));
    break BeforeRet;
    }
    
    if (isObj(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].m_type, NTI1040187408)) {
    F.line = 80;
    result_1107296494 = newString_1040187423(HEX24_1090520459(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].values));
    break BeforeRet;
    }
    
    if (isObj(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].m_type, NTI1040187404)) {
    F.line = 81;
    result_1107296494 = args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)];
    break BeforeRet;
    }
    
    if (isObj(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].m_type, NTI1040187407)) {
    F.line = 82;
    result_1107296494 = newString_1040187423(nimBoolToStr(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].value));
    break BeforeRet;
    }
    
    if (isObj(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)].m_type, NTI1040187410)) {
    F.line = 83;
    result_1107296494 = newString_1040187423(HEX24_1090520413(args_1107296492[chckIndx(0, 0, (args_1107296492).length - 1)]));
    break BeforeRet;
    }
    
    F.line = 84;
    error_1006633457(token_1107296493, makeNimstrLit("RuntimeError"), makeNimstrLit("Cannot convert to a string"));
  } while (false);
  framePtr = F.prev;

  return result_1107296494;

}

function newList_1040187507(values_1040187508) {
  var result_1040187509 = null;

  var F = {procname: "slaptype.newList", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 42;
    result_1040187509 = {values: nimCopy(null, values_1040187508, NTI1040187480), m_type: NTI1040187408};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1040187509;

}

function slapKeys_1107296543(self_1107296544, self_1107296544_Idx, args_1107296545, token_1107296546) {
  var result_1107296547 = null;

  var F = {procname: "builtin.slapKeys", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!(isObj(args_1107296545[chckIndx(0, 0, (args_1107296545).length - 1)].m_type, NTI1040187410))) {
    F.line = 88;
    error_1006633457(token_1107296546, makeNimstrLit("RuntimeError"), makeNimstrLit("keys function only accepts a map"));
    }
    
    F.line = 89;
    var keys_1107296554 = [];
    Label1: do {
      F.line = 90;
      var key_1107296559 = null;
      F.line = 90;
      var __1107296560 = null;
      F.line = 670;
      var colontmp__436207774 = ({data: [], counter: 0});
      F.line = 90;
      colontmp__436207774 = nimCopy(colontmp__436207774, args_1107296545[chckIndx(0, 0, (args_1107296545).length - 1)].map, NTI1040187418);
      F.line = 694;
      var L_436207775 = len_1090520604(colontmp__436207774);
      Label2: do {
        F.line = 695;
        var h_436207777 = 0;
        F.line = 75;
        var colontmp__436207778 = 0;
        F.line = 695;
        colontmp__436207778 = (colontmp__436207774.data).length - 1;
        F.line = 90;
        var res_436207779 = 0;
        Label3: do {
          F.line = 91;
            Label4: while (true) {
            if (!(res_436207779 <= colontmp__436207778)) break Label4;
              F.line = 695;
              h_436207777 = res_436207779;
              if (isFilled_637534239(colontmp__436207774.data[chckIndx(h_436207777, 0, (colontmp__436207774.data).length - 1)].Field0)) {
              F.line = 90;
              key_1107296559 = colontmp__436207774.data[chckIndx(h_436207777, 0, (colontmp__436207774.data).length - 1)].Field1;
              F.line = 90;
              __1107296560 = colontmp__436207774.data[chckIndx(h_436207777, 0, (colontmp__436207774.data).length - 1)].Field2;
              F.line = 90;
              keys_1107296554.push(key_1107296559);;
              if (!((len_1090520604(colontmp__436207774) == L_436207775))) {
              F.line = 698;
              failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim(698, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 93;
              res_436207779 = addInt(res_436207779, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    F.line = 91;
    result_1107296547 = newList_1040187507(keys_1107296554);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296547;

}

function slapValues_1107296565(self_1107296566, self_1107296566_Idx, args_1107296567, token_1107296568) {
  var result_1107296569 = null;

  var F = {procname: "builtin.slapValues", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!(isObj(args_1107296567[chckIndx(0, 0, (args_1107296567).length - 1)].m_type, NTI1040187410))) {
    F.line = 95;
    error_1006633457(token_1107296568, makeNimstrLit("RuntimeError"), makeNimstrLit("values function only accepts a map"));
    }
    
    F.line = 96;
    var values_1107296576 = [];
    Label1: do {
      F.line = 97;
      var __1107296581 = null;
      F.line = 97;
      var value_1107296582 = null;
      F.line = 670;
      var colontmp__436207782 = ({data: [], counter: 0});
      F.line = 97;
      colontmp__436207782 = nimCopy(colontmp__436207782, args_1107296567[chckIndx(0, 0, (args_1107296567).length - 1)].map, NTI1040187418);
      F.line = 694;
      var L_436207783 = len_1090520604(colontmp__436207782);
      Label2: do {
        F.line = 695;
        var h_436207785 = 0;
        F.line = 75;
        var colontmp__436207786 = 0;
        F.line = 695;
        colontmp__436207786 = (colontmp__436207782.data).length - 1;
        F.line = 90;
        var res_436207787 = 0;
        Label3: do {
          F.line = 91;
            Label4: while (true) {
            if (!(res_436207787 <= colontmp__436207786)) break Label4;
              F.line = 695;
              h_436207785 = res_436207787;
              if (isFilled_637534239(colontmp__436207782.data[chckIndx(h_436207785, 0, (colontmp__436207782.data).length - 1)].Field0)) {
              F.line = 97;
              __1107296581 = colontmp__436207782.data[chckIndx(h_436207785, 0, (colontmp__436207782.data).length - 1)].Field1;
              F.line = 97;
              value_1107296582 = colontmp__436207782.data[chckIndx(h_436207785, 0, (colontmp__436207782.data).length - 1)].Field2;
              F.line = 97;
              values_1107296576.push(value_1107296582);;
              if (!((len_1090520604(colontmp__436207782) == L_436207783))) {
              F.line = 698;
              failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim(698, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 93;
              res_436207787 = addInt(res_436207787, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    F.line = 98;
    result_1107296569 = newList_1040187507(values_1107296576);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296569;

}

function binarySearch_889193461(c_889193462, tab_889193463, len_889193464, stride_889193465) {
      var Temporary3;

  var result_889193466 = 0;

  var F = {procname: "unicode.binarySearch", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 458;
    var n_889193467 = len_889193464;
    F.line = 459;
    var t_889193468 = 0;
    Label1: do {
      F.line = 460;
        Label2: while (true) {
        if (!(1 < n_889193467)) break Label2;
          F.line = 461;
          var m_889193469 = divInt(n_889193467, 2);
          F.line = 462;
          var p_889193470 = addInt(t_889193468, mulInt(m_889193469, stride_889193465));
          if ((tab_889193463[chckIndx(p_889193470, 0, (tab_889193463).length - 1)] <= ((c_889193462) | 0))) {
          F.line = 464;
          t_889193468 = p_889193470;
          F.line = 465;
          n_889193467 = subInt(n_889193467, m_889193469);
          }
          else {
            F.line = 467;
            n_889193467 = m_889193469;
          }
          
        }
    } while (false);
      if (!!((n_889193467 == 0))) Temporary3 = false; else {        Temporary3 = (tab_889193463[chckIndx(t_889193468, 0, (tab_889193463).length - 1)] <= ((c_889193462) | 0));      }    if (Temporary3) {
    F.line = 469;
    result_889193466 = t_889193468;
    break BeforeRet;
    }
    
    F.line = 470;
    result_889193466 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_889193466;

}

function nuctoUpper(c_889193520) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_889193521 = 0;

  var F = {procname: "unicode.toUpper", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 499;
    var c_889193522 = c_889193520;
    F.line = 500;
    var p_889193531 = binarySearch_889193461(c_889193522, toUpperRanges_889193373, 46, 3);
      if (!(0 <= p_889193531)) Temporary2 = false; else {        Temporary2 = (toUpperRanges_889193373[chckIndx(p_889193531, 0, (toUpperRanges_889193373).length - 1)] <= ((c_889193522) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_889193522) | 0) <= toUpperRanges_889193373[chckIndx(addInt(p_889193531, 1), 0, (toUpperRanges_889193373).length - 1)]);      }    if (Temporary1) {
    F.line = 502;
    result_889193521 = ((subInt(addInt(((c_889193522) | 0), toUpperRanges_889193373[chckIndx(addInt(p_889193531, 2), 0, (toUpperRanges_889193373).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    F.line = 503;
    p_889193531 = binarySearch_889193461(c_889193522, toUpperSinglets_889193374, 624, 2);
      if (!(0 <= p_889193531)) Temporary3 = false; else {        Temporary3 = (((c_889193522) | 0) == toUpperSinglets_889193374[chckIndx(p_889193531, 0, (toUpperSinglets_889193374).length - 1)]);      }    if (Temporary3) {
    F.line = 505;
    result_889193521 = ((subInt(addInt(((c_889193522) | 0), toUpperSinglets_889193374[chckIndx(addInt(p_889193531, 1), 0, (toUpperSinglets_889193374).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    F.line = 506;
    result_889193521 = c_889193522;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_889193521;

}

function HEX3CHEX3DHEX25_33555429(x_33555430, y_33555431) {
  var result_33555432 = false;

  var F = {procname: "system.<=%", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/comparisons.nim", line: 0};
  framePtr = F;
    F.line = 182;
    result_33555432 = ((x_33555430 >>> 0) <= (y_33555431 >>> 0));
  framePtr = F.prev;

  return result_33555432;

}

function nuctoUpperStr(s_889194119) {
  var result_889194120 = [];

  var F = {procname: "unicode.toUpper", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 648;
    result_889194120 = nimCopy(null, mnewString(chckRange((s_889194119).length, 0, 2147483647)), NTI33554439);
    F.line = 650;
    var iHEX60gensym307_889194124 = 0;
    F.line = 651;
    var resultIndexHEX60gensym307_889194125 = 0;
    F.line = 652;
    var runeHEX60gensym307_889194126 = 0;
    Label1: do {
      F.line = 663;
        Label2: while (true) {
        if (!(iHEX60gensym307_889194124 < (s_889194119).length)) break Label2;
          if ((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] <= 127)) {
          F.line = 81;
          runeHEX60gensym307_889194126 = chckRange(s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)], -2147483648, 2147483647);
          F.line = 82;
          iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 1);
          }
          else {
          if (((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym307_889194124 <= subInt((s_889194119).length, 2))) {
          F.line = 86;
          runeHEX60gensym307_889194126 = chckRange((((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] & 31) << 6) | (s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 1), 0, (s_889194119).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 88;
          iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 2);
          }
          else {
            F.line = 90;
            runeHEX60gensym307_889194126 = 65533;
            F.line = 91;
            iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 1);
          }
          
          }
          else {
          if (((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym307_889194124 <= subInt((s_889194119).length, 3))) {
          F.line = 96;
          runeHEX60gensym307_889194126 = chckRange(((((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] & 15) << 12) | ((s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 1), 0, (s_889194119).length - 1)] & 63) << 6)) | (s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 2), 0, (s_889194119).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 99;
          iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 3);
          }
          else {
            F.line = 101;
            runeHEX60gensym307_889194126 = 65533;
            F.line = 102;
            iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 1);
          }
          
          }
          else {
          if (((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym307_889194124 <= subInt((s_889194119).length, 4))) {
          F.line = 108;
          runeHEX60gensym307_889194126 = chckRange((((((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] & 7) << 18) | ((s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 1), 0, (s_889194119).length - 1)] & 63) << 12)) | ((s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 2), 0, (s_889194119).length - 1)] & 63) << 6)) | (s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 3), 0, (s_889194119).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 112;
          iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 4);
          }
          else {
            F.line = 114;
            runeHEX60gensym307_889194126 = 65533;
            F.line = 115;
            iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 1);
          }
          
          }
          else {
          if (((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym307_889194124 <= subInt((s_889194119).length, 5))) {
          F.line = 122;
          runeHEX60gensym307_889194126 = chckRange(((((((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] & 3) << 24) | ((s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 1), 0, (s_889194119).length - 1)] & 63) << 18)) | ((s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 2), 0, (s_889194119).length - 1)] & 63) << 12)) | ((s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 3), 0, (s_889194119).length - 1)] & 63) << 6)) | (s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 4), 0, (s_889194119).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 127;
          iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 5);
          }
          else {
            F.line = 129;
            runeHEX60gensym307_889194126 = 65533;
            F.line = 130;
            iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 1);
          }
          
          }
          else {
          if (((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym307_889194124 <= subInt((s_889194119).length, 6))) {
          F.line = 138;
          runeHEX60gensym307_889194126 = chckRange((((((((s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)] & 1) << 30) | ((s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 1), 0, (s_889194119).length - 1)] & 63) << 24)) | ((s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 2), 0, (s_889194119).length - 1)] & 63) << 18)) | ((s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 3), 0, (s_889194119).length - 1)] & 63) << 12)) | ((s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 4), 0, (s_889194119).length - 1)] & 63) << 6)) | (s_889194119[chckIndx(addInt(iHEX60gensym307_889194124, 5), 0, (s_889194119).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 144;
          iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 6);
          }
          else {
            F.line = 146;
            runeHEX60gensym307_889194126 = 65533;
            F.line = 147;
            iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 1);
          }
          
          }
          else {
            F.line = 149;
            runeHEX60gensym307_889194126 = chckRange(s_889194119[chckIndx(iHEX60gensym307_889194124, 0, (s_889194119).length - 1)], -2147483648, 2147483647);
            F.line = 150;
            iHEX60gensym307_889194124 = addInt(iHEX60gensym307_889194124, 1);
          }
          }}}}}
          F.line = 655;
          runeHEX60gensym307_889194126 = nuctoUpper(runeHEX60gensym307_889194126);
          F.line = 211;
          var iHEX60gensym357_889194336 = runeHEX60gensym307_889194126;
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym357_889194336, 127)) {
          F.line = 213;
          (result_889194120.length = chckRange(addInt(resultIndexHEX60gensym307_889194125, 1), 0, 2147483647));
          F.line = 214;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 0), 0, (result_889194120).length - 1)] = chckRange(iHEX60gensym357_889194336, 0, 255);
          F.line = 215;
          resultIndexHEX60gensym307_889194125 = addInt(resultIndexHEX60gensym307_889194125, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym357_889194336, 2047)) {
          F.line = 217;
          (result_889194120.length = chckRange(addInt(resultIndexHEX60gensym307_889194125, 2), 0, 2147483647));
          F.line = 218;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 0), 0, (result_889194120).length - 1)] = chckRange(((iHEX60gensym357_889194336 >> 6) | 192), 0, 255);
          F.line = 219;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 1), 0, (result_889194120).length - 1)] = chckRange(((iHEX60gensym357_889194336 & 63) | 128), 0, 255);
          F.line = 220;
          resultIndexHEX60gensym307_889194125 = addInt(resultIndexHEX60gensym307_889194125, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym357_889194336, 65535)) {
          F.line = 222;
          (result_889194120.length = chckRange(addInt(resultIndexHEX60gensym307_889194125, 3), 0, 2147483647));
          F.line = 223;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 0), 0, (result_889194120).length - 1)] = chckRange(((iHEX60gensym357_889194336 >> 12) | 224), 0, 255);
          F.line = 224;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 1), 0, (result_889194120).length - 1)] = chckRange((((iHEX60gensym357_889194336 >> 6) & 63) | 128), 0, 255);
          F.line = 225;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 2), 0, (result_889194120).length - 1)] = chckRange(((iHEX60gensym357_889194336 & 63) | 128), 0, 255);
          F.line = 226;
          resultIndexHEX60gensym307_889194125 = addInt(resultIndexHEX60gensym307_889194125, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym357_889194336, 2097151)) {
          F.line = 228;
          (result_889194120.length = chckRange(addInt(resultIndexHEX60gensym307_889194125, 4), 0, 2147483647));
          F.line = 229;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 0), 0, (result_889194120).length - 1)] = chckRange(((iHEX60gensym357_889194336 >> 18) | 240), 0, 255);
          F.line = 230;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 1), 0, (result_889194120).length - 1)] = chckRange((((iHEX60gensym357_889194336 >> 12) & 63) | 128), 0, 255);
          F.line = 231;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 2), 0, (result_889194120).length - 1)] = chckRange((((iHEX60gensym357_889194336 >> 6) & 63) | 128), 0, 255);
          F.line = 232;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 3), 0, (result_889194120).length - 1)] = chckRange(((iHEX60gensym357_889194336 & 63) | 128), 0, 255);
          F.line = 233;
          resultIndexHEX60gensym307_889194125 = addInt(resultIndexHEX60gensym307_889194125, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym357_889194336, 67108863)) {
          F.line = 235;
          (result_889194120.length = chckRange(addInt(resultIndexHEX60gensym307_889194125, 5), 0, 2147483647));
          F.line = 236;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 0), 0, (result_889194120).length - 1)] = chckRange(((iHEX60gensym357_889194336 >> 24) | 248), 0, 255);
          F.line = 237;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 1), 0, (result_889194120).length - 1)] = chckRange((((iHEX60gensym357_889194336 >> 18) & 63) | 128), 0, 255);
          F.line = 238;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 2), 0, (result_889194120).length - 1)] = chckRange((((iHEX60gensym357_889194336 >> 12) & 63) | 128), 0, 255);
          F.line = 239;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 3), 0, (result_889194120).length - 1)] = chckRange((((iHEX60gensym357_889194336 >> 6) & 63) | 128), 0, 255);
          F.line = 240;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 4), 0, (result_889194120).length - 1)] = chckRange(((iHEX60gensym357_889194336 & 63) | 128), 0, 255);
          F.line = 241;
          resultIndexHEX60gensym307_889194125 = addInt(resultIndexHEX60gensym307_889194125, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym357_889194336, 2147483647)) {
          F.line = 243;
          (result_889194120.length = chckRange(addInt(resultIndexHEX60gensym307_889194125, 6), 0, 2147483647));
          F.line = 244;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 0), 0, (result_889194120).length - 1)] = chckRange(((iHEX60gensym357_889194336 >> 30) | 252), 0, 255);
          F.line = 245;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 1), 0, (result_889194120).length - 1)] = chckRange((((iHEX60gensym357_889194336 >> 24) & 63) | 128), 0, 255);
          F.line = 246;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 2), 0, (result_889194120).length - 1)] = chckRange((((iHEX60gensym357_889194336 >> 18) & 63) | 128), 0, 255);
          F.line = 247;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 3), 0, (result_889194120).length - 1)] = chckRange((((iHEX60gensym357_889194336 >> 12) & 63) | 128), 0, 255);
          F.line = 248;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 4), 0, (result_889194120).length - 1)] = chckRange((((iHEX60gensym357_889194336 >> 6) & 63) | 128), 0, 255);
          F.line = 249;
          result_889194120[chckIndx(addInt(resultIndexHEX60gensym307_889194125, 5), 0, (result_889194120).length - 1)] = chckRange(((iHEX60gensym357_889194336 & 63) | 128), 0, 255);
          F.line = 250;
          resultIndexHEX60gensym307_889194125 = addInt(resultIndexHEX60gensym307_889194125, 6);
          }
          else {
          }
          }}}}}
        }
    } while (false);
  framePtr = F.prev;

  return result_889194120;

}

function slapUpper_1107296587(self_1107296588, self_1107296588_Idx, args_1107296589, token_1107296590) {
  var result_1107296591 = null;

  var F = {procname: "builtin.slapUpper", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!(isObj(args_1107296589[chckIndx(0, 0, (args_1107296589).length - 1)].m_type, NTI1040187404))) {
    F.line = 102;
    error_1006633457(token_1107296590, makeNimstrLit("RuntimeError"), makeNimstrLit("upper function only accepts a string"));
    }
    
    F.line = 103;
    result_1107296591 = newString_1040187423(nuctoUpperStr(args_1107296589[chckIndx(0, 0, (args_1107296589).length - 1)].value));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296591;

}

function nuctoLower(c_889193472) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_889193473 = 0;

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 481;
    var c_889193474 = c_889193472;
    F.line = 482;
    var p_889193483 = binarySearch_889193461(c_889193474, toLowerRanges_889193371, 45, 3);
      if (!(0 <= p_889193483)) Temporary2 = false; else {        Temporary2 = (toLowerRanges_889193371[chckIndx(p_889193483, 0, (toLowerRanges_889193371).length - 1)] <= ((c_889193474) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_889193474) | 0) <= toLowerRanges_889193371[chckIndx(addInt(p_889193483, 1), 0, (toLowerRanges_889193371).length - 1)]);      }    if (Temporary1) {
    F.line = 484;
    result_889193473 = ((subInt(addInt(((c_889193474) | 0), toLowerRanges_889193371[chckIndx(addInt(p_889193483, 2), 0, (toLowerRanges_889193371).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    F.line = 485;
    p_889193483 = binarySearch_889193461(c_889193474, toLowerSinglets_889193372, 610, 2);
      if (!(0 <= p_889193483)) Temporary3 = false; else {        Temporary3 = (((c_889193474) | 0) == toLowerSinglets_889193372[chckIndx(p_889193483, 0, (toLowerSinglets_889193372).length - 1)]);      }    if (Temporary3) {
    F.line = 487;
    result_889193473 = ((subInt(addInt(((c_889193474) | 0), toLowerSinglets_889193372[chckIndx(addInt(p_889193483, 1), 0, (toLowerSinglets_889193372).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    F.line = 488;
    result_889193473 = c_889193474;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_889193473;

}

function nuctoLowerStr(s_889194482) {
  var result_889194483 = [];

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 648;
    result_889194483 = nimCopy(null, mnewString(chckRange((s_889194482).length, 0, 2147483647)), NTI33554439);
    F.line = 650;
    var iHEX60gensym394_889194487 = 0;
    F.line = 651;
    var resultIndexHEX60gensym394_889194488 = 0;
    F.line = 652;
    var runeHEX60gensym394_889194489 = 0;
    Label1: do {
      F.line = 670;
        Label2: while (true) {
        if (!(iHEX60gensym394_889194487 < (s_889194482).length)) break Label2;
          if ((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] <= 127)) {
          F.line = 81;
          runeHEX60gensym394_889194489 = chckRange(s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)], -2147483648, 2147483647);
          F.line = 82;
          iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 1);
          }
          else {
          if (((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym394_889194487 <= subInt((s_889194482).length, 2))) {
          F.line = 86;
          runeHEX60gensym394_889194489 = chckRange((((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] & 31) << 6) | (s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 1), 0, (s_889194482).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 88;
          iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 2);
          }
          else {
            F.line = 90;
            runeHEX60gensym394_889194489 = 65533;
            F.line = 91;
            iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 1);
          }
          
          }
          else {
          if (((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym394_889194487 <= subInt((s_889194482).length, 3))) {
          F.line = 96;
          runeHEX60gensym394_889194489 = chckRange(((((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] & 15) << 12) | ((s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 1), 0, (s_889194482).length - 1)] & 63) << 6)) | (s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 2), 0, (s_889194482).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 99;
          iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 3);
          }
          else {
            F.line = 101;
            runeHEX60gensym394_889194489 = 65533;
            F.line = 102;
            iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 1);
          }
          
          }
          else {
          if (((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym394_889194487 <= subInt((s_889194482).length, 4))) {
          F.line = 108;
          runeHEX60gensym394_889194489 = chckRange((((((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] & 7) << 18) | ((s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 1), 0, (s_889194482).length - 1)] & 63) << 12)) | ((s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 2), 0, (s_889194482).length - 1)] & 63) << 6)) | (s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 3), 0, (s_889194482).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 112;
          iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 4);
          }
          else {
            F.line = 114;
            runeHEX60gensym394_889194489 = 65533;
            F.line = 115;
            iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 1);
          }
          
          }
          else {
          if (((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym394_889194487 <= subInt((s_889194482).length, 5))) {
          F.line = 122;
          runeHEX60gensym394_889194489 = chckRange(((((((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] & 3) << 24) | ((s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 1), 0, (s_889194482).length - 1)] & 63) << 18)) | ((s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 2), 0, (s_889194482).length - 1)] & 63) << 12)) | ((s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 3), 0, (s_889194482).length - 1)] & 63) << 6)) | (s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 4), 0, (s_889194482).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 127;
          iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 5);
          }
          else {
            F.line = 129;
            runeHEX60gensym394_889194489 = 65533;
            F.line = 130;
            iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 1);
          }
          
          }
          else {
          if (((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym394_889194487 <= subInt((s_889194482).length, 6))) {
          F.line = 138;
          runeHEX60gensym394_889194489 = chckRange((((((((s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)] & 1) << 30) | ((s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 1), 0, (s_889194482).length - 1)] & 63) << 24)) | ((s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 2), 0, (s_889194482).length - 1)] & 63) << 18)) | ((s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 3), 0, (s_889194482).length - 1)] & 63) << 12)) | ((s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 4), 0, (s_889194482).length - 1)] & 63) << 6)) | (s_889194482[chckIndx(addInt(iHEX60gensym394_889194487, 5), 0, (s_889194482).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 144;
          iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 6);
          }
          else {
            F.line = 146;
            runeHEX60gensym394_889194489 = 65533;
            F.line = 147;
            iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 1);
          }
          
          }
          else {
            F.line = 149;
            runeHEX60gensym394_889194489 = chckRange(s_889194482[chckIndx(iHEX60gensym394_889194487, 0, (s_889194482).length - 1)], -2147483648, 2147483647);
            F.line = 150;
            iHEX60gensym394_889194487 = addInt(iHEX60gensym394_889194487, 1);
          }
          }}}}}
          F.line = 655;
          runeHEX60gensym394_889194489 = nuctoLower(runeHEX60gensym394_889194489);
          F.line = 211;
          var iHEX60gensym444_889194699 = runeHEX60gensym394_889194489;
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym444_889194699, 127)) {
          F.line = 213;
          (result_889194483.length = chckRange(addInt(resultIndexHEX60gensym394_889194488, 1), 0, 2147483647));
          F.line = 214;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 0), 0, (result_889194483).length - 1)] = chckRange(iHEX60gensym444_889194699, 0, 255);
          F.line = 215;
          resultIndexHEX60gensym394_889194488 = addInt(resultIndexHEX60gensym394_889194488, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym444_889194699, 2047)) {
          F.line = 217;
          (result_889194483.length = chckRange(addInt(resultIndexHEX60gensym394_889194488, 2), 0, 2147483647));
          F.line = 218;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 0), 0, (result_889194483).length - 1)] = chckRange(((iHEX60gensym444_889194699 >> 6) | 192), 0, 255);
          F.line = 219;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 1), 0, (result_889194483).length - 1)] = chckRange(((iHEX60gensym444_889194699 & 63) | 128), 0, 255);
          F.line = 220;
          resultIndexHEX60gensym394_889194488 = addInt(resultIndexHEX60gensym394_889194488, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym444_889194699, 65535)) {
          F.line = 222;
          (result_889194483.length = chckRange(addInt(resultIndexHEX60gensym394_889194488, 3), 0, 2147483647));
          F.line = 223;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 0), 0, (result_889194483).length - 1)] = chckRange(((iHEX60gensym444_889194699 >> 12) | 224), 0, 255);
          F.line = 224;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 1), 0, (result_889194483).length - 1)] = chckRange((((iHEX60gensym444_889194699 >> 6) & 63) | 128), 0, 255);
          F.line = 225;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 2), 0, (result_889194483).length - 1)] = chckRange(((iHEX60gensym444_889194699 & 63) | 128), 0, 255);
          F.line = 226;
          resultIndexHEX60gensym394_889194488 = addInt(resultIndexHEX60gensym394_889194488, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym444_889194699, 2097151)) {
          F.line = 228;
          (result_889194483.length = chckRange(addInt(resultIndexHEX60gensym394_889194488, 4), 0, 2147483647));
          F.line = 229;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 0), 0, (result_889194483).length - 1)] = chckRange(((iHEX60gensym444_889194699 >> 18) | 240), 0, 255);
          F.line = 230;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 1), 0, (result_889194483).length - 1)] = chckRange((((iHEX60gensym444_889194699 >> 12) & 63) | 128), 0, 255);
          F.line = 231;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 2), 0, (result_889194483).length - 1)] = chckRange((((iHEX60gensym444_889194699 >> 6) & 63) | 128), 0, 255);
          F.line = 232;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 3), 0, (result_889194483).length - 1)] = chckRange(((iHEX60gensym444_889194699 & 63) | 128), 0, 255);
          F.line = 233;
          resultIndexHEX60gensym394_889194488 = addInt(resultIndexHEX60gensym394_889194488, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym444_889194699, 67108863)) {
          F.line = 235;
          (result_889194483.length = chckRange(addInt(resultIndexHEX60gensym394_889194488, 5), 0, 2147483647));
          F.line = 236;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 0), 0, (result_889194483).length - 1)] = chckRange(((iHEX60gensym444_889194699 >> 24) | 248), 0, 255);
          F.line = 237;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 1), 0, (result_889194483).length - 1)] = chckRange((((iHEX60gensym444_889194699 >> 18) & 63) | 128), 0, 255);
          F.line = 238;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 2), 0, (result_889194483).length - 1)] = chckRange((((iHEX60gensym444_889194699 >> 12) & 63) | 128), 0, 255);
          F.line = 239;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 3), 0, (result_889194483).length - 1)] = chckRange((((iHEX60gensym444_889194699 >> 6) & 63) | 128), 0, 255);
          F.line = 240;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 4), 0, (result_889194483).length - 1)] = chckRange(((iHEX60gensym444_889194699 & 63) | 128), 0, 255);
          F.line = 241;
          resultIndexHEX60gensym394_889194488 = addInt(resultIndexHEX60gensym394_889194488, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555429(iHEX60gensym444_889194699, 2147483647)) {
          F.line = 243;
          (result_889194483.length = chckRange(addInt(resultIndexHEX60gensym394_889194488, 6), 0, 2147483647));
          F.line = 244;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 0), 0, (result_889194483).length - 1)] = chckRange(((iHEX60gensym444_889194699 >> 30) | 252), 0, 255);
          F.line = 245;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 1), 0, (result_889194483).length - 1)] = chckRange((((iHEX60gensym444_889194699 >> 24) & 63) | 128), 0, 255);
          F.line = 246;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 2), 0, (result_889194483).length - 1)] = chckRange((((iHEX60gensym444_889194699 >> 18) & 63) | 128), 0, 255);
          F.line = 247;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 3), 0, (result_889194483).length - 1)] = chckRange((((iHEX60gensym444_889194699 >> 12) & 63) | 128), 0, 255);
          F.line = 248;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 4), 0, (result_889194483).length - 1)] = chckRange((((iHEX60gensym444_889194699 >> 6) & 63) | 128), 0, 255);
          F.line = 249;
          result_889194483[chckIndx(addInt(resultIndexHEX60gensym394_889194488, 5), 0, (result_889194483).length - 1)] = chckRange(((iHEX60gensym444_889194699 & 63) | 128), 0, 255);
          F.line = 250;
          resultIndexHEX60gensym394_889194488 = addInt(resultIndexHEX60gensym394_889194488, 6);
          }
          else {
          }
          }}}}}
        }
    } while (false);
  framePtr = F.prev;

  return result_889194483;

}

function slapLower_1107296598(self_1107296599, self_1107296599_Idx, args_1107296600, token_1107296601) {
  var result_1107296602 = null;

  var F = {procname: "builtin.slapLower", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!(isObj(args_1107296600[chckIndx(0, 0, (args_1107296600).length - 1)].m_type, NTI1040187404))) {
    F.line = 107;
    error_1006633457(token_1107296601, makeNimstrLit("RuntimeError"), makeNimstrLit("lower function only accepts a string"));
    }
    
    F.line = 108;
    result_1107296602 = newString_1040187423(nuctoLowerStr(args_1107296600[chckIndx(0, 0, (args_1107296600).length - 1)].value));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296602;

}

function loadBuiltins_1107296265() {
    
function def_1107296612(name_1107296613, arity_1107296614, call_1107296619) {
        arity_1107296614 = nimCopy(null, arity_1107296614, NTI1107296432);
        
function HEX3Aanonymous_1107296620() {
          var result_1107296621 = {Field0: 0, Field1: 0};

          var F = {procname: "def.:anonymous", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
          framePtr = F;
            F.line = 116;
            result_1107296621 = nimCopy(result_1107296621, arity_1107296614, NTI1107296437);
          framePtr = F.prev;

          return result_1107296621;

        }

      var F = {procname: "loadBuiltins.def", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
      framePtr = F;
        F.line = 114;
        define_1056964628(globals_1107296611, 0, name_1107296613, {arity: HEX3Aanonymous_1107296620, call: call_1107296619, m_type: NTI1090519064});
      framePtr = F.prev;

      
    }

  var result_1107296610 = null;

  var F = {procname: "builtin.loadBuiltins", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/builtin.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 111;
    var globals_1107296611 = [newEnv_1056964626(null)];
    F.line = 120;
    def_1107296612(makeNimstrLit("println"), {Field0: 0, Field1: 1}, slapPrintln_1107296266);
    F.line = 121;
    def_1107296612(makeNimstrLit("print"), {Field0: 1, Field1: 1}, slapPrint_1107296274);
    F.line = 122;
    def_1107296612(makeNimstrLit("append"), {Field0: 2, Field1: 2}, slapAppend_1107296279);
    F.line = 123;
    def_1107296612(makeNimstrLit("pop"), {Field0: 1, Field1: 1}, slapPop_1107296294);
    F.line = 124;
    def_1107296612(makeNimstrLit("len"), {Field0: 1, Field1: 1}, slapLen_1107296317);
    F.line = 125;
    def_1107296612(makeNimstrLit("type"), {Field0: 1, Field1: 1}, slapTypeof_1107296337);
    F.line = 126;
    def_1107296612(makeNimstrLit("isInt"), {Field0: 1, Field1: 1}, slapIsInt_1107296390);
    F.line = 127;
    def_1107296612(makeNimstrLit("isFloat"), {Field0: 1, Field1: 1}, slapIsFloat_1107296401);
    F.line = 128;
    def_1107296612(makeNimstrLit("isBool"), {Field0: 1, Field1: 1}, slapIsBool_1107296412);
    F.line = 129;
    def_1107296612(makeNimstrLit("isStr"), {Field0: 1, Field1: 1}, slapIsString_1107296423);
    F.line = 130;
    def_1107296612(makeNimstrLit("isList"), {Field0: 1, Field1: 1}, slapIsList_1107296434);
    F.line = 131;
    def_1107296612(makeNimstrLit("isMap"), {Field0: 1, Field1: 1}, slapIsMap_1107296445);
    F.line = 132;
    def_1107296612(makeNimstrLit("isNull"), {Field0: 1, Field1: 1}, slapIsNull_1107296456);
    F.line = 133;
    def_1107296612(makeNimstrLit("int"), {Field0: 1, Field1: 1}, slapConvertInt_1107296467);
    F.line = 134;
    def_1107296612(makeNimstrLit("str"), {Field0: 1, Field1: 1}, slapConvertStr_1107296490);
    F.line = 135;
    def_1107296612(makeNimstrLit("keys"), {Field0: 1, Field1: 1}, slapKeys_1107296543);
    F.line = 136;
    def_1107296612(makeNimstrLit("values"), {Field0: 1, Field1: 1}, slapValues_1107296565);
    F.line = 137;
    def_1107296612(makeNimstrLit("upper"), {Field0: 1, Field1: 1}, slapUpper_1107296587);
    F.line = 138;
    def_1107296612(makeNimstrLit("lower"), {Field0: 1, Field1: 1}, slapLower_1107296598);
    F.line = 140;
    result_1107296610 = globals_1107296611[0];
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1107296610;

}

function initTable_603981195(initialSize_603981198) {
  var result_603981199 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym16_603981201 = slotsNeeded_637534250(chckRange(initialSize_603981198, 0, 2147483647));
    F.line = 167;
    result_603981199.counter = 0;
    F.line = 168;
    result_603981199.data = new Array(chckRange(correctSizeHEX60gensym16_603981201, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_603981201, 0, 2147483647) ; ++i) { result_603981199.data[i] = {Field0: 0, Field1: null, Field2: 0}; }  framePtr = F.prev;

  return result_603981199;

}

function newInterpreter_603981192() {
  var result_603981193 = null;

  var F = {procname: "interpreter.newInterpreter", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 32;
    var globals_603981194 = loadBuiltins_1107296265();
    F.line = 33;
    result_603981193 = {env: globals_603981194, globals: globals_603981194, locals: initTable_603981195(32), m_type: NTI1090519048};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603981193;

}

function newResolver_620757026(interpreter_620757027) {
  var result_620757028 = null;

  var F = {procname: "resolver.newResolver", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 25;
    result_620757028 = {interpreter: interpreter_620757027, currentFunction: 0, currentClass: 0, m_type: NTI620756998, scopes: []};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_620757028;

}

function interpret_603983494(self_603983495, self_603983495_Idx, statements_603983496) {
  var F = {procname: "interpreter.interpret", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 519;
      var s_603986456 = null;
      var s_603986456_Idx = 0;
      F.line = 235;
      var i_436207794 = 0;
      F.line = 236;
      var L_436207795 = (statements_603983496).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207794 < L_436207795)) break Label3;
            F.line = 519;
            s_603986456 = statements_603983496; s_603986456_Idx = chckIndx(i_436207794, 0, (statements_603983496).length - 1);
            F.line = 519;
            eval_603984907(self_603983495, self_603983495_Idx, s_603986456[s_603986456_Idx]);
            F.line = 239;
            i_436207794 = addInt(i_436207794, 1);
            if (!(((statements_603983496).length == L_436207795))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function execute_436207623(source_436207624, path_436207625) {
  var F = {procname: "main.execute", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/main.nim", line: 0};
  framePtr = F;
    F.line = 16;
    var lexer_436207626 = [newLexer_570426731(source_436207624, path_436207625)];
    F.line = 17;
    var tokens_436207627 = tokenize_570427864(lexer_436207626[0]);
    F.line = 20;
    var parser_436207628 = [newParser_587202570(tokens_436207627)];
    F.line = 21;
    var nodes_436207629 = parse_587202615(parser_436207628[0]);
    F.line = 25;
    var interpreter_436207630 = [newInterpreter_603981192()];
    F.line = 26;
    var resolver_436207631 = [newResolver_620757026(interpreter_436207630[0])];
    F.line = 27;
    resolve_620757134(resolver_436207631, 0, nodes_436207629);
    F.line = 28;
    interpreter_436207630[0] = resolver_436207631[0].interpreter;
    F.line = 29;
    interpret_603983494(interpreter_436207630, 0, nodes_436207629);
  framePtr = F.prev;

  
}
var F = {procname: "module main", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/main.nim", line: 0};
framePtr = F;
F.line = 31;
module.exports.execute = execute_436207623;
framePtr = F.prev;
var F = {procname: "module main", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/main.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module main", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/main.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function sysFatal_33557004(message_33557007) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    raiseException({message: nimCopy(null, message_33557007, NTI33554439), m_type: NTI33555142, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");
  framePtr = F.prev;

  
}

function chckNilDisp(p_33557003, p_33557003_Idx) {
    if ((p_33557003 == null && p_33557003_Idx == 0)) {
    sysFatal_33557004(makeNimstrLit("cannot dispatch; dispatcher is nil"));
    }
    

  
}

function HEX21HEX24_654311442(h_654311443) {
  var result_654311444 = 0;

  var F = {procname: "hashes.!$", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 90;
    var h_654311445 = (h_654311443 >>> 0);
    F.line = 91;
    var res_654311450 = ((h_654311445 + (h_654311445 << 3)) >>> 0);
    F.line = 92;
    res_654311450 = (res_654311450 ^ (res_654311450 >>> 11));
    F.line = 93;
    res_654311450 = ((res_654311450 + (res_654311450 << 15)) >>> 0);
    F.line = 94;
    result_654311444 = (res_654311450 | 0);
  framePtr = F.prev;

  return result_654311444;

}

function hasBigUint64Array_687865901() {
  var result_687865902 = false;

  var F = {procname: "jsutils.hasBigUint64Array", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/std/private/jsutils.nim", line: 0};
  framePtr = F;
    F.line = 46;
    result_687865902 = typeof BigUint64Array != 'undefined'
  framePtr = F.prev;

  return result_687865902;

}

function hash_654311632(x_654311633) {
    var Temporary1;

  var result_654311634 = 0;

  var F = {procname: "hashes.hash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 270;
    var y_654311635 = (x_654311633 + 0.0);
    F.line = 278;
    F.line = 142;
    var P0HEX60gensym16_654311695 = BigInt("0xa0761d6478bd642f");
    F.line = 143;
    var P1HEX60gensym16_654311696 = BigInt("0xe7037ed1a0b428db");
    F.line = 144;
    var P58HEX60gensym16_654311697 = BigInt("0xeb44accab455d16d");
    F.line = 145;
    F.line = 150;
    var xHEX60gensym11_654311666 = new ArrayBuffer(8);
    F.line = 151;
    var yHEX60gensym11_654311667 = new Float64Array(xHEX60gensym11_654311666);
    if (hasBigUint64Array_687865901()) {
    F.line = 153;
    var zHEX60gensym11_654311668 = new BigUint64Array(xHEX60gensym11_654311666);
    F.line = 154;
    yHEX60gensym11_654311667[0] = y_654311635;
    Temporary1 = zHEX60gensym11_654311668[0];
    }
    else {
      F.line = 157;
      var zHEX60gensym11_654311669 = new Uint32Array(xHEX60gensym11_654311666);
      F.line = 158;
      yHEX60gensym11_654311667[0] = y_654311635;
    Temporary1 = (BigInt(zHEX60gensym11_654311669[0]) + (BigInt(zHEX60gensym11_654311669[1]) << BigInt(32)));
    }
    
    var resHEX60gensym16_654311698 = hiXorLoJs_654311509(hiXorLoJs_654311509(P0HEX60gensym16_654311695, (Temporary1 ^ P1HEX60gensym16_654311696)), P58HEX60gensym16_654311697);
    result_654311634 = Number((() => { const i = resHEX60gensym16_654311698, b = 32; return BigInt.asIntN(b, i) })());
  framePtr = F.prev;

  return result_654311634;

}

function hash_1124073488(x_1124073489) {
  var result_1124073490 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 16;
    result_1124073490 = HEX21HEX24_654311442(hash_654311632(x_1124073489.value));
  framePtr = F.prev;

  return result_1124073490;

}

function hash_1124073482(x_1124073483) {
  var result_1124073484 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 14;
    result_1124073484 = HEX21HEX24_654311442(hash_654311594(x_1124073483.value));
  framePtr = F.prev;

  return result_1124073484;

}

function hash_1124073494(x_1124073496) {
  var result_1124073497 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 210;
    result_1124073497 = hashWangYi1_654311602((x_1124073496 ? 1 : 0));
  framePtr = F.prev;

  return result_1124073497;

}

function hash_1124073491(x_1124073492) {
  var result_1124073493 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 18;
    result_1124073493 = HEX21HEX24_654311442(hash_1124073494(x_1124073492.value));
  framePtr = F.prev;

  return result_1124073493;

}

function HEX21HEX26_654311427(h_654311428, val_654311429) {
  var result_654311430 = 0;

  var F = {procname: "hashes.!&", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 79;
    var h_654311431 = (h_654311428 >>> 0);
    F.line = 80;
    var val_654311432 = (val_654311429 >>> 0);
    F.line = 81;
    var res_654311433 = ((h_654311431 + val_654311432) >>> 0);
    F.line = 82;
    res_654311433 = ((res_654311433 + (res_654311433 << 10)) >>> 0);
    F.line = 83;
    res_654311433 = (res_654311433 ^ (res_654311433 >>> 6));
    F.line = 84;
    result_654311430 = (res_654311433 | 0);
  framePtr = F.prev;

  return result_654311430;

}

function hash_1124073573(x_1124073575) {
  var result_1124073576 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 556;
    result_1124073576 = HEX21HEX26_654311427(result_1124073576, hash_654311594(x_1124073575["Field0"]));
    F.line = 556;
    result_1124073576 = HEX21HEX26_654311427(result_1124073576, hash_1124073480(x_1124073575["Field1"]));
    F.line = 556;
    result_1124073576 = HEX21HEX26_654311427(result_1124073576, hash_1124073480(x_1124073575["Field2"]));
    F.line = 557;
    result_1124073576 = HEX21HEX24_654311442(result_1124073576);
  framePtr = F.prev;

  return result_1124073576;

}

function hash_1124073556(x_1124073558) {
  var result_1124073559 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 570;
      var a_1124073572 = null;
      F.line = 8;
      var i_436207799 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436207799 < (x_1124073558).length)) break Label3;
            F.line = 570;
            a_1124073572 = x_1124073558[chckIndx(i_436207799, 0, (x_1124073558).length - 1)];
            F.line = 570;
            result_1124073559 = HEX21HEX26_654311427(result_1124073559, hash_1124073573(a_1124073572));
            F.line = 11;
            i_436207799 = addInt(i_436207799, 1);
          }
      } while (false);
    } while (false);
    F.line = 572;
    result_1124073559 = HEX21HEX24_654311442(result_1124073559);
  framePtr = F.prev;

  return result_1124073559;

}

function hash_1124073548(x_1124073550) {
  var result_1124073551 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 556;
    result_1124073551 = HEX21HEX26_654311427(result_1124073551, hash_1124073556(x_1124073550.data));
    F.line = 556;
    result_1124073551 = HEX21HEX26_654311427(result_1124073551, hash_654311594(x_1124073550.counter));
    F.line = 557;
    result_1124073551 = HEX21HEX24_654311442(result_1124073551);
  framePtr = F.prev;

  return result_1124073551;

}

function hash_1124073545(x_1124073546) {
  var result_1124073547 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 25;
    result_1124073547 = hash_1124073548(x_1124073546.map);
    F.line = 26;
    result_1124073547 = HEX21HEX24_654311442(result_1124073547);
  framePtr = F.prev;

  return result_1124073547;

}

function hash_1124073510(x_1124073512) {
  var result_1124073513 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 570;
      var a_1124073526 = null;
      var a_1124073526_Idx = 0;
      F.line = 8;
      var i_436207803 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436207803 < (x_1124073512).length)) break Label3;
            F.line = 570;
            a_1124073526 = x_1124073512; a_1124073526_Idx = chckIndx(i_436207803, 0, (x_1124073512).length - 1);
            F.line = 570;
            result_1124073513 = HEX21HEX26_654311427(result_1124073513, hash_1124073480(a_1124073526[a_1124073526_Idx]));
            F.line = 11;
            i_436207803 = addInt(i_436207803, 1);
          }
      } while (false);
    } while (false);
    F.line = 572;
    result_1124073513 = HEX21HEX24_654311442(result_1124073513);
  framePtr = F.prev;

  return result_1124073513;

}

function hash_1124073507(x_1124073508) {
  var result_1124073509 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 22;
    result_1124073509 = HEX21HEX24_654311442(hash_1124073510(x_1124073508.values));
  framePtr = F.prev;

  return result_1124073509;

}

function hash_1124073504(x_1124073505) {
  var result_1124073506 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 20;
    result_1124073506 = HEX21HEX24_654311442(hash_654311873(x_1124073505.value));
  framePtr = F.prev;

  return result_1124073506;

}

function hash_1124073477(x_1124073478) {
  var result_1124073479 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_1124073479;

}

function hash_1124073480(x_1124073478) {
  var result_1124073481 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 530;
    chckNilDisp(x_1124073478);
    if (isObj(x_1124073478.m_type, NTI1040187406)) {
    F.line = 12;
    result_1124073481 = hash_1124073488(x_1124073478);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073478.m_type, NTI1040187405)) {
    F.line = 12;
    result_1124073481 = hash_1124073482(x_1124073478);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073478.m_type, NTI1040187407)) {
    F.line = 12;
    result_1124073481 = hash_1124073491(x_1124073478);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073478.m_type, NTI1040187410)) {
    F.line = 12;
    result_1124073481 = hash_1124073545(x_1124073478);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073478.m_type, NTI1040187408)) {
    F.line = 12;
    result_1124073481 = hash_1124073507(x_1124073478);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073478.m_type, NTI1040187404)) {
    F.line = 12;
    result_1124073481 = hash_1124073504(x_1124073478);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073478.m_type, NTI1040187403)) {
    F.line = 12;
    result_1124073481 = hash_1124073477(x_1124073478);
    break BeforeRet;
    }
    }}}}}}
  } while (false);
  framePtr = F.prev;

  return result_1124073481;

}

function hash_1124073617(x_1124073619) {
  var result_1124073620 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 210;
    result_1124073620 = hashWangYi1_654311602(x_1124073619);
  framePtr = F.prev;

  return result_1124073620;

}

function hash_1124073614(x_1124073615) {
  var result_1124073616 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 31;
    result_1124073616 = HEX21HEX26_654311427(HEX21HEX26_654311427(hash_1124073617(x_1124073615.kind), hash_654311873(x_1124073615.value)), hash_654311594(x_1124073615.line));
    F.line = 32;
    result_1124073616 = HEX21HEX24_654311442(result_1124073616);
  framePtr = F.prev;

  return result_1124073616;

}

function hash_1124073636(x_1124073637) {
  var result_1124073638 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 39;
    result_1124073638 = hash_1124073614(x_1124073637.name);
    F.line = 40;
    result_1124073638 = HEX21HEX24_654311442(result_1124073638);
  framePtr = F.prev;

  return result_1124073638;

}

function hash_1124073642(x_1124073643) {
  var result_1124073644 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 47;
    result_1124073644 = HEX21HEX26_654311427(hash_1124073614(x_1124073643.name), hash_1124073634(x_1124073643.value));
    F.line = 48;
    result_1124073644 = HEX21HEX24_654311442(result_1124073644);
  framePtr = F.prev;

  return result_1124073644;

}

function hash_1124073639(x_1124073640) {
  var result_1124073641 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 43;
    result_1124073641 = HEX21HEX26_654311427(hash_1124073634(x_1124073640.variable), hash_1124073634(x_1124073640.indexOrKey));
    F.line = 44;
    result_1124073641 = HEX21HEX24_654311442(result_1124073641);
  framePtr = F.prev;

  return result_1124073641;

}

function hash_1124073648(x_1124073649) {
  var result_1124073650 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 55;
    result_1124073650 = HEX21HEX24_654311442(hash_1124073614(x_1124073649.keyword));
  framePtr = F.prev;

  return result_1124073650;

}

function hash_1124073645(x_1124073646) {
  var result_1124073647 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
    F.line = 51;
    result_1124073647 = HEX21HEX26_654311427(HEX21HEX26_654311427(hash_1124073634(x_1124073646.variable), hash_1124073634(x_1124073646.indexOrKey)), hash_1124073634(x_1124073646.value));
    F.line = 52;
    result_1124073647 = HEX21HEX24_654311442(result_1124073647);
  framePtr = F.prev;

  return result_1124073647;

}

function hash_1124073631(x_1124073632) {
  var result_1124073633 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_1124073633;

}

function hash_1124073634(x_1124073632) {
  var result_1124073635 = 0;

  var F = {procname: "objhash.hash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/objhash.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 530;
    chckNilDisp(x_1124073632);
    if (isObj(x_1124073632.m_type, NTI1023410225)) {
    F.line = 36;
    result_1124073635 = hash_1124073636(x_1124073632);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073632.m_type, NTI1023410227)) {
    F.line = 36;
    result_1124073635 = hash_1124073642(x_1124073632);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073632.m_type, NTI1023410226)) {
    F.line = 36;
    result_1124073635 = hash_1124073639(x_1124073632);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073632.m_type, NTI1023410234)) {
    F.line = 36;
    result_1124073635 = hash_1124073648(x_1124073632);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073632.m_type, NTI1023410228)) {
    F.line = 36;
    result_1124073635 = hash_1124073645(x_1124073632);
    break BeforeRet;
    }
    else {
    if (isObj(x_1124073632.m_type, NTI1023410214)) {
    F.line = 36;
    result_1124073635 = hash_1124073631(x_1124073632);
    break BeforeRet;
    }
    }}}}}
  } while (false);
  framePtr = F.prev;

  return result_1124073635;

}

function resolve_620757092(self_620757093, self_620757093_Idx, expre_620757094) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function resolve_620757095(self_620757093, self_620757093_Idx, expre_620757094) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 38;
    resolve_620757092(self_620757093, self_620757093_Idx, expre_620757094);
  framePtr = F.prev;

  
}

function resolve_620757096(self_620757097, self_620757097_Idx, statement_620757098) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function resolve_620757099(self_620757097, self_620757097_Idx, statement_620757098) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 39;
    resolve_620757096(self_620757097, self_620757097_Idx, statement_620757098);
  framePtr = F.prev;

  
}

function resolve_620757100(self_620757101, self_620757101_Idx, statements_620757102) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 42;
      var statement_620757124 = null;
      var statement_620757124_Idx = 0;
      F.line = 235;
      var i_436207806 = 0;
      F.line = 236;
      var L_436207807 = (statements_620757102).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207806 < L_436207807)) break Label3;
            F.line = 42;
            statement_620757124 = statements_620757102; statement_620757124_Idx = chckIndx(i_436207806, 0, (statements_620757102).length - 1);
            F.line = 42;
            resolve_620757099(self_620757101, self_620757101_Idx, statement_620757124[statement_620757124_Idx]);
            F.line = 239;
            i_436207806 = addInt(i_436207806, 1);
            if (!(((statements_620757102).length == L_436207807))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function resolve_620757134(self_620757101, self_620757101_Idx, statements_620757102) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 41;
    resolve_620757100(self_620757101, self_620757101_Idx, statements_620757102);
  framePtr = F.prev;

  
}

function initTable_620758963(initialSize_620758966) {
  var result_620758967 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym26_620758969 = slotsNeeded_637534250(chckRange(initialSize_620758966, 0, 2147483647));
    F.line = 167;
    result_620758967.counter = 0;
    F.line = 168;
    result_620758967.data = new Array(chckRange(correctSizeHEX60gensym26_620758969, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_620758969, 0, 2147483647) ; ++i) { result_620758967.data[i] = {Field0: 0, Field1: [], Field2: false}; }  framePtr = F.prev;

  return result_620758967;

}

function beginScope_620757074(self_620757075, self_620757075_Idx) {
  var F = {procname: "resolver.beginScope", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 197;
    self_620757075[self_620757075_Idx].scopes.push(initTable_620758963(32));;
  framePtr = F.prev;

  
}

function pop_620758989(s_620758991, s_620758991_Idx) {
  var result_620758992 = ({data: [], counter: 0});

  var F = {procname: "pop.pop", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1863;
    var L_620758996 = subInt((s_620758991[s_620758991_Idx]).length, 1);
    F.line = 1868;
    result_620758992 = nimCopy(result_620758992, s_620758991[s_620758991_Idx][chckIndx(L_620758996, 0, (s_620758991[s_620758991_Idx]).length - 1)], NTI620757007);
    F.line = 1869;
    if (s_620758991[s_620758991_Idx].length < chckRange(L_620758996, 0, 2147483647)) { for (var i = s_620758991[s_620758991_Idx].length ; i < chckRange(L_620758996, 0, 2147483647) ; ++i) s_620758991[s_620758991_Idx].push(({data: [], counter: 0})); }
               else { s_620758991[s_620758991_Idx].length = chckRange(L_620758996, 0, 2147483647); };
  framePtr = F.prev;

  return result_620758992;

}

function endScope_620757076(self_620757077, self_620757077_Idx) {
  var F = {procname: "resolver.endScope", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 199;
    var _ = pop_620758989(self_620757077[self_620757077_Idx], "scopes");
  framePtr = F.prev;

  
}

function resolve_620757135(self_620757136, self_620757136_Idx, statement_620757137) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 46;
    beginScope_620757074(self_620757136, self_620757136_Idx);
    F.line = 47;
    resolve_620757134(self_620757136, self_620757136_Idx, statement_620757137.statements);
    F.line = 48;
    endScope_620757076(self_620757136, self_620757136_Idx);
  framePtr = F.prev;

  
}

function resolve_620757138(self_620757136, self_620757136_Idx, statement_620757137) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 45;
    resolve_620757135(self_620757136, self_620757136_Idx, statement_620757137);
  framePtr = F.prev;

  
}

function rawGet_620757232(t_620757235, key_620757236, hc_620757237, hc_620757237_Idx) {
            var Temporary3;

  var result_620757238 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_620757237[hc_620757237_Idx] = hash_654311873(key_620757236);
    if ((hc_620757237[hc_620757237_Idx] == 0)) {
    F.line = 66;
    hc_620757237[hc_620757237_Idx] = 314159265;
    }
    
    if (((t_620757235.data).length == 0)) {
    F.line = 48;
    result_620757238 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_620757290 = (hc_620757237[hc_620757237_Idx] & (t_620757235.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_620757235.data[chckIndx(h_620757290, 0, (t_620757235.data).length - 1)].Field0)) break Label2;
            if (!(t_620757235.data[chckIndx(h_620757290, 0, (t_620757235.data).length - 1)].Field0 == hc_620757237[hc_620757237_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_620757235.data[chckIndx(h_620757290, 0, (t_620757235.data).length - 1)].Field1, key_620757236);            }          if (Temporary3) {
          F.line = 56;
          result_620757238 = h_620757290;
          break BeforeRet;
          }
          
          F.line = 57;
          h_620757290 = nextTry_637534242(h_620757290, (t_620757235.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_620757238 = subInt(-1, h_620757290);
  } while (false);
  framePtr = F.prev;

  return result_620757238;

}

function hasKey_620759058(t_620759061, key_620759062) {
  var result_620759063 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 371;
    var hc_620759064 = [0];
    F.line = 372;
    result_620759063 = (0 <= rawGet_620757232(t_620759061, key_620759062, hc_620759064, 0));
  framePtr = F.prev;

  return result_620759063;

}

function contains_620759052(t_620759055, key_620759056) {
  var result_620759057 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 382;
    result_620759057 = hasKey_620759058(t_620759055, key_620759056);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_620759057;

}

function mustRehash_620757906(t_620757908) {
  var result_620757909 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_620757908.counter < (t_620757908.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_620757909 = ((mulInt((t_620757908.data).length, 2) < mulInt(t_620757908.counter, 3)) || (subInt((t_620757908.data).length, t_620757908.counter) < 4));
  framePtr = F.prev;

  return result_620757909;

}

function rawInsert_620758355(t_620758359, data_620758360, data_620758360_Idx, key_620758361, val_620758362, hc_620758363, h_620758364) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_620758360[data_620758360_Idx][chckIndx(h_620758364, 0, (data_620758360[data_620758360_Idx]).length - 1)].Field1 = nimCopy(null, key_620758361, NTI33554439);
    F.line = 23;
    data_620758360[data_620758360_Idx][chckIndx(h_620758364, 0, (data_620758360[data_620758360_Idx]).length - 1)].Field2 = val_620758362;
    F.line = 24;
    data_620758360[data_620758360_Idx][chckIndx(h_620758364, 0, (data_620758360[data_620758360_Idx]).length - 1)].Field0 = hc_620758363;
  framePtr = F.prev;

  
}

function enlarge_620758061(t_620758064) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 249;
    var n_620758067 = [];
    F.line = 250;
    n_620758067 = new Array(chckRange(mulInt((t_620758064.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_620758064.data).length, 2), 0, 2147483647) ; ++i) { n_620758067[i] = {Field0: 0, Field1: [], Field2: false}; }    F.line = 251;
    var Temporary1 = t_620758064.data; t_620758064.data = n_620758067; n_620758067 = Temporary1;    Label2: do {
      F.line = 252;
      var i_620758131 = 0;
      F.line = 43;
      var colontmp__436207812 = 0;
      F.line = 252;
      colontmp__436207812 = (n_620758067).length - 1;
      F.line = 65;
      var res_436207813 = 0;
      Label3: do {
        F.line = 66;
          Label4: while (true) {
          if (!(res_436207813 <= colontmp__436207812)) break Label4;
            F.line = 252;
            i_620758131 = res_436207813;
            F.line = 253;
            var eh_620758185 = n_620758067[chckIndx(i_620758131, 0, (n_620758067).length - 1)].Field0;
            if (isFilled_637534239(eh_620758185)) {
            F.line = 255;
            var j_620758189 = (eh_620758185 & (t_620758064.data).length - 1);
            Label5: do {
              F.line = 256;
                Label6: while (true) {
                if (!isFilled_637534239(t_620758064.data[chckIndx(j_620758189, 0, (t_620758064.data).length - 1)].Field0)) break Label6;
                  F.line = 257;
                  j_620758189 = nextTry_637534242(j_620758189, (t_620758064.data).length - 1);
                }
            } while (false);
            F.line = 259;
            rawInsert_620758355(t_620758064, t_620758064, "data", n_620758067[chckIndx(i_620758131, 0, (n_620758067).length - 1)].Field1, n_620758067[chckIndx(i_620758131, 0, (n_620758067).length - 1)].Field2, eh_620758185, j_620758189);
            }
            
            F.line = 68;
            res_436207813 = addInt(res_436207813, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_620758533(t_620758536, key_620758537, hc_620758538) {
  var result_620758539 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_620758536.data).length == 0)) {
    F.line = 48;
    result_620758539 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_620758590 = (hc_620758538 & (t_620758536.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_620758536.data[chckIndx(h_620758590, 0, (t_620758536.data).length - 1)].Field0)) break Label2;
          if (((t_620758536.data[chckIndx(h_620758590, 0, (t_620758536.data).length - 1)].Field0 == hc_620758538) && eqStrings(t_620758536.data[chckIndx(h_620758590, 0, (t_620758536.data).length - 1)].Field1, key_620758537))) {
          F.line = 56;
          result_620758539 = h_620758590;
          break BeforeRet;
          }
          
          F.line = 57;
          h_620758590 = nextTry_637534242(h_620758590, (t_620758536.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_620758539 = subInt(-1, h_620758590);
  } while (false);
  framePtr = F.prev;

  return result_620758539;

}

function HEX5BHEX5DHEX3D_620757733(t_620757736, key_620757737, val_620757738) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_620757736.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym12_620757787 = slotsNeeded_637534250(32);
    F.line = 167;
    t_620757736.counter = 0;
    F.line = 168;
    t_620757736.data = new Array(chckRange(correctSizeHEX60gensym12_620757787, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_620757787, 0, 2147483647) ; ++i) { t_620757736.data[i] = {Field0: 0, Field1: [], Field2: false}; }    }
    
    F.line = 57;
    var hc_620757792 = [0];
    F.line = 58;
    var index_620757799 = rawGet_620757232(t_620757736, key_620757737, hc_620757792, 0);
    if ((0 <= index_620757799)) {
    F.line = 59;
    t_620757736.data[chckIndx(index_620757799, 0, (t_620757736.data).length - 1)].Field2 = val_620757738;
    }
    else {
      if (((t_620757736.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym15_620757901 = slotsNeeded_637534250(32);
      F.line = 167;
      t_620757736.counter = 0;
      F.line = 168;
      t_620757736.data = new Array(chckRange(correctSizeHEX60gensym15_620757901, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_620757901, 0, 2147483647) ; ++i) { t_620757736.data[i] = {Field0: 0, Field1: [], Field2: false}; }      }
      
      if (mustRehash_620757906(t_620757736)) {
      F.line = 49;
      enlarge_620758061(t_620757736);
      F.line = 50;
      index_620757799 = rawGetKnownHC_620758533(t_620757736, key_620757737, hc_620757792[0]);
      }
      
      F.line = 51;
      index_620757799 = subInt(-1, index_620757799);
      F.line = 52;
      rawInsert_620758355(t_620757736, t_620757736, "data", key_620757737, val_620757738, hc_620757792[0], index_620757799);
      F.line = 60;
      t_620757736.counter = addInt(t_620757736.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function declare_620757078(self_620757079, self_620757079_Idx, name_620757080) {
  var F = {procname: "resolver.declare", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((self_620757079[self_620757079_Idx].scopes).length == 0)) {
    F.line = 202;
    break BeforeRet;
    }
    else {
    if (contains_620759052(self_620757079[self_620757079_Idx].scopes[chckIndx(subInt((self_620757079[self_620757079_Idx].scopes).length, 1), 0, (self_620757079[self_620757079_Idx].scopes).length - 1)], name_620757080.value)) {
    F.line = 204;
    error_1006633457(name_620757080, makeNimstrLit("SyntaxError"), makeNimstrLit("Variable with this name is already declared in this scope"));
    }
    else {
      F.line = 205;
    HEX5BHEX5DHEX3D_620757733(self_620757079[self_620757079_Idx].scopes[chckIndx(subInt((self_620757079[self_620757079_Idx].scopes).length, 1), 0, (self_620757079[self_620757079_Idx].scopes).length - 1)], name_620757080.value, false);
    }
    }
  } while (false);
  framePtr = F.prev;

  
}

function isEmpty_637534236(hcode_637534237) {
  var result_637534238 = false;

  var F = {procname: "tables.isEmpty", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 19;
    result_637534238 = (hcode_637534237 == 0);
  framePtr = F.prev;

  return result_637534238;

}

function del_620759219(t_620759222, key_620759223) {
                    var Temporary6;
                    var Temporary7;
                    var Temporary8;
                      var Temporary9;
                      var Temporary10;

  var F = {procname: "del.del", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 135;
    var hc_620759224 = [0];
    F.line = 136;
    var i_620759231 = rawGet_620757232(t_620759222, key_620759223, hc_620759224, 0);
    F.line = 112;
    var mskHEX60gensym36_620759235 = (t_620759222.data).length - 1;
    if ((0 <= i_620759231)) {
    F.line = 114;
    t_620759222.counter = subInt(t_620759222.counter, 1);
    Label1: do {
      Label2: do {
        F.line = 116;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 117;
            var jHEX60gensym36_620759241 = i_620759231;
            F.line = 118;
            var rHEX60gensym36_620759242 = jHEX60gensym36_620759241;
            F.line = 497;
            t_620759222.data[chckIndx(i_620759231, 0, (t_620759222.data).length - 1)].Field0 = 0;
            F.line = 120;
            t_620759222.data[chckIndx(i_620759231, 0, (t_620759222.data).length - 1)].Field1 = nimCopy(null, [], NTI33554439);
            F.line = 121;
            t_620759222.data[chckIndx(i_620759231, 0, (t_620759222.data).length - 1)].Field2 = false;
            Label4: do {
              F.line = 122;
                Label5: while (true) {
                if (!true) break Label5;
                  F.line = 123;
                  i_620759231 = (addInt(i_620759231, 1) & mskHEX60gensym36_620759235);
                  if (isEmpty_637534236(t_620759222.data[chckIndx(i_620759231, 0, (t_620759222.data).length - 1)].Field0)) {
                  F.line = 125;
                  break Label1;
                  }
                  
                  F.line = 126;
                  rHEX60gensym36_620759242 = (t_620759222.data[chckIndx(i_620759231, 0, (t_620759222.data).length - 1)].Field0 & mskHEX60gensym36_620759235);
                    if (!(rHEX60gensym36_620759242 <= i_620759231)) Temporary8 = false; else {                      Temporary8 = (jHEX60gensym36_620759241 < rHEX60gensym36_620759242);                    }                    if (Temporary8) Temporary7 = true; else {                      if (!(jHEX60gensym36_620759241 < rHEX60gensym36_620759242)) Temporary9 = false; else {                        Temporary9 = (i_620759231 < jHEX60gensym36_620759241);                      }                      Temporary7 = Temporary9;                    }                    if (Temporary7) Temporary6 = true; else {                      if (!(i_620759231 < jHEX60gensym36_620759241)) Temporary10 = false; else {                        Temporary10 = (rHEX60gensym36_620759242 <= i_620759231);                      }                      Temporary6 = Temporary10;                    }                  if (!(Temporary6)) {
                  F.line = 128;
                  break Label4;
                  }
                  
                }
            } while (false);
            F.line = 130;
            t_620759222.data[chckIndx(jHEX60gensym36_620759241, 0, (t_620759222.data).length - 1)] = nimCopy(t_620759222.data[chckIndx(jHEX60gensym36_620759241, 0, (t_620759222.data).length - 1)], t_620759222.data[chckIndx(i_620759231, 0, (t_620759222.data).length - 1)], NTI620757013);
          }
      } while (false);
    } while (false);
    }
    
  framePtr = F.prev;

  
}

function define_620757081(self_620757082, self_620757082_Idx, name_620757083) {
  var F = {procname: "resolver.define", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((self_620757082[self_620757082_Idx].scopes).length == 0)) {
    F.line = 208;
    break BeforeRet;
    }
    else {
    if (contains_620759052(self_620757082[self_620757082_Idx].scopes[chckIndx(subInt((self_620757082[self_620757082_Idx].scopes).length, 1), 0, (self_620757082[self_620757082_Idx].scopes).length - 1)], name_620757083.value)) {
    F.line = 210;
    del_620759219(self_620757082[self_620757082_Idx].scopes[chckIndx(subInt((self_620757082[self_620757082_Idx].scopes).length, 1), 0, (self_620757082[self_620757082_Idx].scopes).length - 1)], name_620757083.value);
    }
    }
    F.line = 211;
    HEX5BHEX5DHEX3D_620757733(self_620757082[self_620757082_Idx].scopes[chckIndx(subInt((self_620757082[self_620757082_Idx].scopes).length, 1), 0, (self_620757082[self_620757082_Idx].scopes).length - 1)], name_620757083.value, true);
  } while (false);
  framePtr = F.prev;

  
}

function resolve_620757139(self_620757140, self_620757140_Idx, statement_620757141) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 51;
    declare_620757078(self_620757140, self_620757140_Idx, statement_620757141.name);
    if (!((statement_620757141.init == null))) {
    F.line = 52;
    resolve_620757095(self_620757140, self_620757140_Idx, statement_620757141.init);
    }
    
    F.line = 53;
    define_620757081(self_620757140, self_620757140_Idx, statement_620757141.name);
  framePtr = F.prev;

  
}

function resolve_620757145(self_620757140, self_620757140_Idx, statement_620757141) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 50;
    resolve_620757139(self_620757140, self_620757140_Idx, statement_620757141);
  framePtr = F.prev;

  
}

function getOrDefault_620757222(t_620757225, key_620757226, default_620757227) {
    var Temporary1;

  var result_620757228 = false;

  var F = {procname: "getOrDefault.getOrDefault", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 187;
    var hcHEX60gensym2_620757231 = [0];
    F.line = 188;
    var indexHEX60gensym2_620757471 = rawGet_620757232(t_620757225, key_620757226, hcHEX60gensym2_620757231, 0);
    F.line = 189;
    if ((0 <= indexHEX60gensym2_620757471)) {
    Temporary1 = t_620757225.data[chckIndx(indexHEX60gensym2_620757471, 0, (t_620757225.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_620757227;
    }
    
    result_620757228 = Temporary1;
  framePtr = F.prev;

  return result_620757228;

}

function rawGet_1090519205(t_1090519208, key_1090519209, hc_1090519210, hc_1090519210_Idx) {
            var Temporary3;

  var result_1090519211 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_1090519210[hc_1090519210_Idx] = hash_1124073634(key_1090519209);
    if ((hc_1090519210[hc_1090519210_Idx] == 0)) {
    F.line = 66;
    hc_1090519210[hc_1090519210_Idx] = 314159265;
    }
    
    if (((t_1090519208.data).length == 0)) {
    F.line = 48;
    result_1090519211 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1090519262 = (hc_1090519210[hc_1090519210_Idx] & (t_1090519208.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_1090519208.data[chckIndx(h_1090519262, 0, (t_1090519208.data).length - 1)].Field0)) break Label2;
            if (!(t_1090519208.data[chckIndx(h_1090519262, 0, (t_1090519208.data).length - 1)].Field0 == hc_1090519210[hc_1090519210_Idx])) Temporary3 = false; else {              Temporary3 = (t_1090519208.data[chckIndx(h_1090519262, 0, (t_1090519208.data).length - 1)].Field1 == key_1090519209);            }          if (Temporary3) {
          F.line = 56;
          result_1090519211 = h_1090519262;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1090519262 = nextTry_637534242(h_1090519262, (t_1090519208.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1090519211 = subInt(-1, h_1090519262);
  } while (false);
  framePtr = F.prev;

  return result_1090519211;

}

function mustRehash_1090519554(t_1090519556) {
  var result_1090519557 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1090519556.counter < (t_1090519556.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_1090519557 = ((mulInt((t_1090519556.data).length, 2) < mulInt(t_1090519556.counter, 3)) || (subInt((t_1090519556.data).length, t_1090519556.counter) < 4));
  framePtr = F.prev;

  return result_1090519557;

}

function rawInsert_1090520003(t_1090520007, data_1090520008, data_1090520008_Idx, key_1090520009, val_1090520010, hc_1090520011, h_1090520012) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_1090520008[data_1090520008_Idx][chckIndx(h_1090520012, 0, (data_1090520008[data_1090520008_Idx]).length - 1)].Field1 = key_1090520009;
    F.line = 23;
    data_1090520008[data_1090520008_Idx][chckIndx(h_1090520012, 0, (data_1090520008[data_1090520008_Idx]).length - 1)].Field2 = val_1090520010;
    F.line = 24;
    data_1090520008[data_1090520008_Idx][chckIndx(h_1090520012, 0, (data_1090520008[data_1090520008_Idx]).length - 1)].Field0 = hc_1090520011;
  framePtr = F.prev;

  
}

function enlarge_1090519709(t_1090519712) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 249;
    var n_1090519715 = [];
    F.line = 250;
    n_1090519715 = new Array(chckRange(mulInt((t_1090519712.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1090519712.data).length, 2), 0, 2147483647) ; ++i) { n_1090519715[i] = {Field0: 0, Field1: null, Field2: 0}; }    F.line = 251;
    var Temporary1 = t_1090519712.data; t_1090519712.data = n_1090519715; n_1090519715 = Temporary1;    Label2: do {
      F.line = 252;
      var i_1090519779 = 0;
      F.line = 43;
      var colontmp__436207825 = 0;
      F.line = 252;
      colontmp__436207825 = (n_1090519715).length - 1;
      F.line = 65;
      var res_436207826 = 0;
      Label3: do {
        F.line = 66;
          Label4: while (true) {
          if (!(res_436207826 <= colontmp__436207825)) break Label4;
            F.line = 252;
            i_1090519779 = res_436207826;
            F.line = 253;
            var eh_1090519833 = n_1090519715[chckIndx(i_1090519779, 0, (n_1090519715).length - 1)].Field0;
            if (isFilled_637534239(eh_1090519833)) {
            F.line = 255;
            var j_1090519837 = (eh_1090519833 & (t_1090519712.data).length - 1);
            Label5: do {
              F.line = 256;
                Label6: while (true) {
                if (!isFilled_637534239(t_1090519712.data[chckIndx(j_1090519837, 0, (t_1090519712.data).length - 1)].Field0)) break Label6;
                  F.line = 257;
                  j_1090519837 = nextTry_637534242(j_1090519837, (t_1090519712.data).length - 1);
                }
            } while (false);
            F.line = 259;
            rawInsert_1090520003(t_1090519712, t_1090519712, "data", n_1090519715[chckIndx(i_1090519779, 0, (n_1090519715).length - 1)].Field1, n_1090519715[chckIndx(i_1090519779, 0, (n_1090519715).length - 1)].Field2, eh_1090519833, j_1090519837);
            }
            
            F.line = 68;
            res_436207826 = addInt(res_436207826, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_1090520172(t_1090520175, key_1090520176, hc_1090520177) {
  var result_1090520178 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_1090520175.data).length == 0)) {
    F.line = 48;
    result_1090520178 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1090520229 = (hc_1090520177 & (t_1090520175.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_1090520175.data[chckIndx(h_1090520229, 0, (t_1090520175.data).length - 1)].Field0)) break Label2;
          if (((t_1090520175.data[chckIndx(h_1090520229, 0, (t_1090520175.data).length - 1)].Field0 == hc_1090520177) && (t_1090520175.data[chckIndx(h_1090520229, 0, (t_1090520175.data).length - 1)].Field1 == key_1090520176))) {
          F.line = 56;
          result_1090520178 = h_1090520229;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1090520229 = nextTry_637534242(h_1090520229, (t_1090520175.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1090520178 = subInt(-1, h_1090520229);
  } while (false);
  framePtr = F.prev;

  return result_1090520178;

}

function HEX5BHEX5DHEX3D_1090519144(t_1090519147, key_1090519148, val_1090519149) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1090519147.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym1_1090519199 = slotsNeeded_637534250(32);
    F.line = 167;
    t_1090519147.counter = 0;
    F.line = 168;
    t_1090519147.data = new Array(chckRange(correctSizeHEX60gensym1_1090519199, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1090519199, 0, 2147483647) ; ++i) { t_1090519147.data[i] = {Field0: 0, Field1: null, Field2: 0}; }    }
    
    F.line = 57;
    var hc_1090519204 = [0];
    F.line = 58;
    var index_1090519447 = rawGet_1090519205(t_1090519147, key_1090519148, hc_1090519204, 0);
    if ((0 <= index_1090519447)) {
    F.line = 59;
    t_1090519147.data[chckIndx(index_1090519447, 0, (t_1090519147.data).length - 1)].Field2 = val_1090519149;
    }
    else {
      if (((t_1090519147.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym6_1090519549 = slotsNeeded_637534250(32);
      F.line = 167;
      t_1090519147.counter = 0;
      F.line = 168;
      t_1090519147.data = new Array(chckRange(correctSizeHEX60gensym6_1090519549, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1090519549, 0, 2147483647) ; ++i) { t_1090519147.data[i] = {Field0: 0, Field1: null, Field2: 0}; }      }
      
      if (mustRehash_1090519554(t_1090519147)) {
      F.line = 49;
      enlarge_1090519709(t_1090519147);
      F.line = 50;
      index_1090519447 = rawGetKnownHC_1090520172(t_1090519147, key_1090519148, hc_1090519204[0]);
      }
      
      F.line = 51;
      index_1090519447 = subInt(-1, index_1090519447);
      F.line = 52;
      rawInsert_1090520003(t_1090519147, t_1090519147, "data", key_1090519148, val_1090519149, hc_1090519204[0], index_1090519447);
      F.line = 60;
      t_1090519147.counter = addInt(t_1090519147.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function resolve_1090519100(self_1090519101, self_1090519101_Idx, expre_1090519102, depth_1090519103) {
  var F = {procname: "interpreterObj.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreterObj.nim", line: 0};
  framePtr = F;
    F.line = 39;
    HEX5BHEX5DHEX3D_1090519144(self_1090519101[self_1090519101_Idx].locals, expre_1090519102, depth_1090519103);
  framePtr = F.prev;

  
}

function resolveLocal_620757084(self_620757085, self_620757085_Idx, expre_620757086, name_620757087) {
  var F = {procname: "resolver.resolveLocal", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    Label1: do {
      F.line = 214;
      var i_620759787 = 0;
      F.line = 6;
      var colontmp__436207819 = 0;
      F.line = 214;
      colontmp__436207819 = subInt((self_620757085[self_620757085_Idx].scopes).length, 1);
      F.line = 33;
      var res_436207820 = colontmp__436207819;
      Label2: do {
        F.line = 34;
          Label3: while (true) {
          if (!(0 <= res_436207820)) break Label3;
            F.line = 214;
            i_620759787 = res_436207820;
            if (contains_620759052(self_620757085[self_620757085_Idx].scopes[chckIndx(i_620759787, 0, (self_620757085[self_620757085_Idx].scopes).length - 1)], name_620757087.value)) {
            F.line = 216;
            resolve_1090519100(self_620757085[self_620757085_Idx], "interpreter", expre_620757086, subInt(subInt((self_620757085[self_620757085_Idx].scopes).length, 1), i_620759787));
            F.line = 217;
            break BeforeRet;
            }
            
            F.line = 36;
            res_436207820 = subInt(res_436207820, 1);
          }
      } while (false);
    } while (false);
  } while (false);
  framePtr = F.prev;

  
}

function resolve_620757146(self_620757147, self_620757147_Idx, expre_620757148) {
      var Temporary1;

  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
      if (!!(((self_620757147[self_620757147_Idx].scopes).length == 0))) Temporary1 = false; else {        Temporary1 = (getOrDefault_620757222(self_620757147[self_620757147_Idx].scopes[chckIndx(subInt((self_620757147[self_620757147_Idx].scopes).length, 1), 0, (self_620757147[self_620757147_Idx].scopes).length - 1)], expre_620757148.name.value, true) == false);      }    if (Temporary1) {
    F.line = 57;
    error_1006633457(expre_620757148.name, makeNimstrLit("SyntaxError"), makeNimstrLit("Cannot read local variable in its own initializer"));
    }
    
    F.line = 58;
    resolveLocal_620757084(self_620757147, self_620757147_Idx, expre_620757148, expre_620757148.name);
  framePtr = F.prev;

  
}

function resolve_620757525(self_620757147, self_620757147_Idx, expre_620757148) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 55;
    resolve_620757146(self_620757147, self_620757147_Idx, expre_620757148);
  framePtr = F.prev;

  
}

function resolve_620757526(self_620757527, self_620757527_Idx, expre_620757528) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 61;
    resolve_620757095(self_620757527, self_620757527_Idx, expre_620757528.value);
    F.line = 62;
    resolveLocal_620757084(self_620757527, self_620757527_Idx, expre_620757528, expre_620757528.name);
  framePtr = F.prev;

  
}

function resolve_620757529(self_620757527, self_620757527_Idx, expre_620757528) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 60;
    resolve_620757526(self_620757527, self_620757527_Idx, expre_620757528);
  framePtr = F.prev;

  
}

function resolve_620757530(self_620757531, self_620757531_Idx, expre_620757532) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 65;
    resolve_620757095(self_620757531, self_620757531_Idx, expre_620757532.variable);
    F.line = 66;
    resolve_620757095(self_620757531, self_620757531_Idx, expre_620757532.value);
    F.line = 67;
    resolve_620757095(self_620757531, self_620757531_Idx, expre_620757532.indexOrKey);
  framePtr = F.prev;

  
}

function resolve_620757533(self_620757531, self_620757531_Idx, expre_620757532) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 64;
    resolve_620757530(self_620757531, self_620757531_Idx, expre_620757532);
  framePtr = F.prev;

  
}

function resolveFunction_620757088(self_620757089, self_620757089_Idx, function_620757090, functype_620757091) {
  var F = {procname: "resolver.resolveFunction", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 220;
    var enclosingFunction_620759842 = self_620757089[self_620757089_Idx].currentFunction;
    F.line = 221;
    self_620757089[self_620757089_Idx].currentFunction = functype_620757091;
    F.line = 222;
    beginScope_620757074(self_620757089, self_620757089_Idx);
    Label1: do {
      F.line = 223;
      var param_620759863 = null;
      var param_620759863_Idx = 0;
      F.line = 235;
      var i_436207831 = 0;
      F.line = 236;
      var L_436207832 = (function_620757090.parameters).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207831 < L_436207832)) break Label3;
            F.line = 223;
            param_620759863 = function_620757090.parameters; param_620759863_Idx = chckIndx(i_436207831, 0, (function_620757090.parameters).length - 1);
            F.line = 224;
            var paramName_620759864 = null;
            F.line = 225;
            var defaultValue_620759865 = null;
            if (isObj(param_620759863[param_620759863_Idx].m_type, NTI1023410258)) {
            F.line = 227;
            paramName_620759864 = param_620759863[param_620759863_Idx].paramName;
            }
            else {
            if (isObj(param_620759863[param_620759863_Idx].m_type, NTI1023410257)) {
            F.line = 229;
            paramName_620759864 = param_620759863[param_620759863_Idx].paramName;
            F.line = 230;
            defaultValue_620759865 = param_620759863[param_620759863_Idx].default;
            }
            else {
            if (isObj(param_620759863[param_620759863_Idx].m_type, NTI1023410259)) {
            F.line = 232;
            paramName_620759864 = param_620759863[param_620759863_Idx].paramName;
            }
            }}
            F.line = 223;
            declare_620757078(self_620757089, self_620757089_Idx, paramName_620759864);
            F.line = 223;
            define_620757081(self_620757089, self_620757089_Idx, paramName_620759864);
            if (!((defaultValue_620759865 == null))) {
            F.line = 236;
            resolve_620757095(self_620757089, self_620757089_Idx, defaultValue_620759865);
            }
            
            F.line = 239;
            i_436207831 = addInt(i_436207831, 1);
            if (!(((function_620757090.parameters).length == L_436207832))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 238;
    resolve_620757134(self_620757089, self_620757089_Idx, function_620757090.body);
    F.line = 239;
    endScope_620757076(self_620757089, self_620757089_Idx);
    F.line = 240;
    self_620757089[self_620757089_Idx].currentFunction = enclosingFunction_620759842;
  framePtr = F.prev;

  
}

function resolve_620757534(self_620757535, self_620757535_Idx, statement_620757536) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 70;
    declare_620757078(self_620757535, self_620757535_Idx, statement_620757536.name);
    F.line = 71;
    define_620757081(self_620757535, self_620757535_Idx, statement_620757536.name);
    F.line = 72;
    resolveFunction_620757088(self_620757535, self_620757535_Idx, statement_620757536.function, 1);
  framePtr = F.prev;

  
}

function resolve_620757537(self_620757535, self_620757535_Idx, statement_620757536) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 69;
    resolve_620757534(self_620757535, self_620757535_Idx, statement_620757536);
  framePtr = F.prev;

  
}

function resolve_620757538(self_620757539, self_620757539_Idx, expre_620757540) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 75;
    resolveFunction_620757088(self_620757539, self_620757539_Idx, expre_620757540, 1);
  framePtr = F.prev;

  
}

function resolve_620757541(self_620757539, self_620757539_Idx, expre_620757540) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 74;
    resolve_620757538(self_620757539, self_620757539_Idx, expre_620757540);
  framePtr = F.prev;

  
}

function resolve_620757542(self_620757543, self_620757543_Idx, statement_620757544) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 77;
    resolve_620757095(self_620757543, self_620757543_Idx, statement_620757544.expression);
  framePtr = F.prev;

  
}

function resolve_620757545(self_620757543, self_620757543_Idx, statement_620757544) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 77;
    resolve_620757542(self_620757543, self_620757543_Idx, statement_620757544);
  framePtr = F.prev;

  
}

function resolve_620757546(self_620757547, self_620757547_Idx, statement_620757548) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 80;
    resolve_620757095(self_620757547, self_620757547_Idx, statement_620757548.condition);
    F.line = 81;
    resolve_620757099(self_620757547, self_620757547_Idx, statement_620757548.thenBranch);
  framePtr = F.prev;

  
}

function resolve_620757549(self_620757547, self_620757547_Idx, statement_620757548) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 79;
    resolve_620757546(self_620757547, self_620757547_Idx, statement_620757548);
  framePtr = F.prev;

  
}

function resolve_620757550(self_620757551, self_620757551_Idx, statement_620757552) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 84;
    resolve_620757095(self_620757551, self_620757551_Idx, statement_620757552.condition);
    F.line = 85;
    resolve_620757099(self_620757551, self_620757551_Idx, statement_620757552.thenBranch);
    if (!((~((statement_620757552.elifBranches).length) == 0))) {
    Label1: do {
      F.line = 87;
      var i_620757577 = null;
      var i_620757577_Idx = 0;
      F.line = 235;
      var i_436207836 = 0;
      F.line = 236;
      var L_436207837 = (statement_620757552.elifBranches).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207836 < L_436207837)) break Label3;
            F.line = 87;
            i_620757577 = statement_620757552.elifBranches; i_620757577_Idx = chckIndx(i_436207836, 0, (statement_620757552.elifBranches).length - 1);
            F.line = 87;
            resolve_620757549(self_620757551, self_620757551_Idx, i_620757577[i_620757577_Idx]);
            F.line = 239;
            i_436207836 = addInt(i_436207836, 1);
            if (!(((statement_620757552.elifBranches).length == L_436207837))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    }
    
    if (!((statement_620757552.elseBranch == null))) {
    F.line = 89;
    resolve_620757099(self_620757551, self_620757551_Idx, statement_620757552.elseBranch);
    }
    
  framePtr = F.prev;

  
}

function resolve_620757590(self_620757551, self_620757551_Idx, statement_620757552) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 83;
    resolve_620757550(self_620757551, self_620757551_Idx, statement_620757552);
  framePtr = F.prev;

  
}

function resolve_620757591(self_620757592, self_620757592_Idx, statement_620757593) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    if ((self_620757592[self_620757592_Idx].currentFunction == 0)) {
    F.line = 92;
    error_1006633457(statement_620757593.keyword, makeNimstrLit("SyntaxError"), makeNimstrLit("Cannot return from top-level code"));
    }
    
    if (!((statement_620757593.value == null))) {
    if ((self_620757592[self_620757592_Idx].currentFunction == 3)) {
    F.line = 95;
    error_1006633457(statement_620757593.keyword, makeNimstrLit("SyntaxError"), makeNimstrLit("Cannot return a value from an initializer"));
    }
    
    F.line = 96;
    resolve_620757095(self_620757592, self_620757592_Idx, statement_620757593.value);
    }
    
  framePtr = F.prev;

  
}

function resolve_620757606(self_620757592, self_620757592_Idx, statement_620757593) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 91;
    resolve_620757591(self_620757592, self_620757592_Idx, statement_620757593);
  framePtr = F.prev;

  
}

function resolve_620757607(self_620757608, self_620757608_Idx, statement_620757609) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function resolve_620757610(self_620757608, self_620757608_Idx, statement_620757609) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 98;
    resolve_620757607(self_620757608, self_620757608_Idx, statement_620757609);
  framePtr = F.prev;

  
}

function resolve_620757611(self_620757612, self_620757612_Idx, statement_620757613) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 101;
    resolve_620757095(self_620757612, self_620757612_Idx, statement_620757613.name);
  framePtr = F.prev;

  
}

function resolve_620757614(self_620757612, self_620757612_Idx, statement_620757613) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 100;
    resolve_620757611(self_620757612, self_620757612_Idx, statement_620757613);
  framePtr = F.prev;

  
}

function resolve_620757615(self_620757616, self_620757616_Idx, statement_620757617) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function resolve_620757618(self_620757616, self_620757616_Idx, statement_620757617) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 103;
    resolve_620757615(self_620757616, self_620757616_Idx, statement_620757617);
  framePtr = F.prev;

  
}

function resolve_620757619(self_620757620, self_620757620_Idx, statement_620757621) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 106;
    resolve_620757095(self_620757620, self_620757620_Idx, statement_620757621.condition);
    F.line = 107;
    resolve_620757099(self_620757620, self_620757620_Idx, statement_620757621.body);
  framePtr = F.prev;

  
}

function resolve_620757622(self_620757620, self_620757620_Idx, statement_620757621) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 105;
    resolve_620757619(self_620757620, self_620757620_Idx, statement_620757621);
  framePtr = F.prev;

  
}

function resolve_620757623(self_620757624, self_620757624_Idx, expre_620757625) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 110;
    resolve_620757095(self_620757624, self_620757624_Idx, expre_620757625.left);
    F.line = 111;
    resolve_620757095(self_620757624, self_620757624_Idx, expre_620757625.right);
  framePtr = F.prev;

  
}

function resolve_620757626(self_620757624, self_620757624_Idx, expre_620757625) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 109;
    resolve_620757623(self_620757624, self_620757624_Idx, expre_620757625);
  framePtr = F.prev;

  
}

function resolve_620757627(self_620757628, self_620757628_Idx, expre_620757629) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 114;
    resolve_620757095(self_620757628, self_620757628_Idx, expre_620757629.callee);
    Label1: do {
      F.line = 115;
      var argument_620757650 = null;
      var argument_620757650_Idx = 0;
      F.line = 235;
      var i_436207841 = 0;
      F.line = 236;
      var L_436207842 = (expre_620757629.arguments).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207841 < L_436207842)) break Label3;
            F.line = 115;
            argument_620757650 = expre_620757629.arguments; argument_620757650_Idx = chckIndx(i_436207841, 0, (expre_620757629.arguments).length - 1);
            F.line = 115;
            resolve_620757095(self_620757628, self_620757628_Idx, argument_620757650[argument_620757650_Idx]);
            F.line = 239;
            i_436207841 = addInt(i_436207841, 1);
            if (!(((expre_620757629.arguments).length == L_436207842))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function resolve_620757660(self_620757628, self_620757628_Idx, expre_620757629) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 113;
    resolve_620757627(self_620757628, self_620757628_Idx, expre_620757629);
  framePtr = F.prev;

  
}

function resolve_620757661(self_620757662, self_620757662_Idx, expre_620757663) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 118;
    resolve_620757095(self_620757662, self_620757662_Idx, expre_620757663.variable);
    F.line = 119;
    resolve_620757095(self_620757662, self_620757662_Idx, expre_620757663.indexOrKey);
  framePtr = F.prev;

  
}

function resolve_620757664(self_620757662, self_620757662_Idx, expre_620757663) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 117;
    resolve_620757661(self_620757662, self_620757662_Idx, expre_620757663);
  framePtr = F.prev;

  
}

function resolve_620757665(self_620757666, self_620757666_Idx, expre_620757667) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 121;
    resolve_620757095(self_620757666, self_620757666_Idx, expre_620757667.expression);
  framePtr = F.prev;

  
}

function resolve_620757668(self_620757666, self_620757666_Idx, expre_620757667) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 121;
    resolve_620757665(self_620757666, self_620757666_Idx, expre_620757667);
  framePtr = F.prev;

  
}

function resolve_620757669(self_620757670, self_620757670_Idx, expre_620757671) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function resolve_620757672(self_620757670, self_620757670_Idx, expre_620757671) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 123;
    resolve_620757669(self_620757670, self_620757670_Idx, expre_620757671);
  framePtr = F.prev;

  
}

function resolve_620757673(self_620757674, self_620757674_Idx, expre_620757675) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 127;
    resolve_620757095(self_620757674, self_620757674_Idx, expre_620757675.left);
    F.line = 128;
    resolve_620757095(self_620757674, self_620757674_Idx, expre_620757675.right);
  framePtr = F.prev;

  
}

function resolve_620757676(self_620757674, self_620757674_Idx, expre_620757675) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 126;
    resolve_620757673(self_620757674, self_620757674_Idx, expre_620757675);
  framePtr = F.prev;

  
}

function resolve_620757677(self_620757678, self_620757678_Idx, statement_620757679) {
      var Temporary1;

  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 131;
    var enclosingClass_620757680 = self_620757678[self_620757678_Idx].currentClass;
    F.line = 132;
    self_620757678[self_620757678_Idx].currentClass = 1;
    F.line = 133;
    declare_620757078(self_620757678, self_620757678_Idx, statement_620757679.name);
    F.line = 134;
    define_620757081(self_620757678, self_620757678_Idx, statement_620757679.name);
      if (!!((statement_620757679.superclass == null))) Temporary1 = false; else {        Temporary1 = eqStrings(statement_620757679.name.value, statement_620757679.superclass.name.value);      }    if (Temporary1) {
    F.line = 137;
    error_1006633457(statement_620757679.superclass.name, makeNimstrLit("RuntimeError"), makeNimstrLit("A class cannot inherit from itself."));
    }
    
    if (!((statement_620757679.superclass == null))) {
    F.line = 140;
    self_620757678[self_620757678_Idx].currentClass = 2;
    F.line = 141;
    resolve_620757525(self_620757678, self_620757678_Idx, statement_620757679.superclass);
    }
    
    if (!((statement_620757679.superclass == null))) {
    F.line = 144;
    beginScope_620757074(self_620757678, self_620757678_Idx);
    F.line = 145;
    HEX5BHEX5DHEX3D_620757733(self_620757678[self_620757678_Idx].scopes[chckIndx(subInt((self_620757678[self_620757678_Idx].scopes).length, 1), 0, (self_620757678[self_620757678_Idx].scopes).length - 1)], makeNimstrLit("super"), true);
    }
    
    F.line = 147;
    beginScope_620757074(self_620757678, self_620757678_Idx);
    F.line = 148;
    HEX5BHEX5DHEX3D_620757733(self_620757678[self_620757678_Idx].scopes[chckIndx(subInt((self_620757678[self_620757678_Idx].scopes).length, 1), 0, (self_620757678[self_620757678_Idx].scopes).length - 1)], makeNimstrLit("self"), true);
    Label2: do {
      F.line = 149;
      var m_620758840 = null;
      var m_620758840_Idx = 0;
      F.line = 235;
      var i_436207846 = 0;
      F.line = 236;
      var L_436207847 = (statement_620757679.methods).length;
      Label3: do {
        F.line = 237;
          Label4: while (true) {
          if (!(i_436207846 < L_436207847)) break Label4;
            F.line = 149;
            m_620758840 = statement_620757679.methods; m_620758840_Idx = chckIndx(i_436207846, 0, (statement_620757679.methods).length - 1);
            F.line = 150;
            var declaration_620758841 = 2;
            if (eqStrings(m_620758840[m_620758840_Idx].name.value, makeNimstrLit("new"))) {
            F.line = 151;
            declaration_620758841 = 3;
            }
            
            F.line = 149;
            resolveFunction_620757088(self_620757678, self_620757678_Idx, m_620758840[m_620758840_Idx].function, declaration_620758841);
            F.line = 239;
            i_436207846 = addInt(i_436207846, 1);
            if (!(((statement_620757679.methods).length == L_436207847))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    Label5: do {
      F.line = 153;
      var m_620758845 = null;
      var m_620758845_Idx = 0;
      F.line = 235;
      var i_436207850 = 0;
      F.line = 236;
      var L_436207851 = (statement_620757679.classMethods).length;
      Label6: do {
        F.line = 237;
          Label7: while (true) {
          if (!(i_436207850 < L_436207851)) break Label7;
            F.line = 153;
            m_620758845 = statement_620757679.classMethods; m_620758845_Idx = chckIndx(i_436207850, 0, (statement_620757679.classMethods).length - 1);
            F.line = 153;
            beginScope_620757074(self_620757678, self_620757678_Idx);
            F.line = 153;
            HEX5BHEX5DHEX3D_620757733(self_620757678[self_620757678_Idx].scopes[chckIndx(subInt((self_620757678[self_620757678_Idx].scopes).length, 1), 0, (self_620757678[self_620757678_Idx].scopes).length - 1)], makeNimstrLit("self"), true);
            F.line = 153;
            resolveFunction_620757088(self_620757678, self_620757678_Idx, m_620758845[m_620758845_Idx].function, 2);
            F.line = 153;
            endScope_620757076(self_620757678, self_620757678_Idx);
            F.line = 239;
            i_436207850 = addInt(i_436207850, 1);
            if (!(((statement_620757679.classMethods).length == L_436207851))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 158;
    endScope_620757076(self_620757678, self_620757678_Idx);
    if (!((statement_620757679.superclass == null))) {
    F.line = 160;
    endScope_620757076(self_620757678, self_620757678_Idx);
    }
    
    F.line = 162;
    self_620757678[self_620757678_Idx].currentClass = enclosingClass_620757680;
  framePtr = F.prev;

  
}

function resolve_620758907(self_620757678, self_620757678_Idx, statement_620757679) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 130;
    resolve_620757677(self_620757678, self_620757678_Idx, statement_620757679);
  framePtr = F.prev;

  
}

function resolve_620758908(self_620758909, self_620758909_Idx, expre_620758910) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 164;
    resolve_620757095(self_620758909, self_620758909_Idx, expre_620758910.right);
  framePtr = F.prev;

  
}

function resolve_620758911(self_620758909, self_620758909_Idx, expre_620758910) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 164;
    resolve_620758908(self_620758909, self_620758909_Idx, expre_620758910);
  framePtr = F.prev;

  
}

function resolve_620758912(self_620758913, self_620758913_Idx, expre_620758914) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 166;
    resolve_620757095(self_620758913, self_620758913_Idx, expre_620758914.instance);
  framePtr = F.prev;

  
}

function resolve_620758915(self_620758913, self_620758913_Idx, expre_620758914) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 166;
    resolve_620758912(self_620758913, self_620758913_Idx, expre_620758914);
  framePtr = F.prev;

  
}

function resolve_620758916(self_620758917, self_620758917_Idx, expre_620758918) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 169;
    resolve_620757095(self_620758917, self_620758917_Idx, expre_620758918.value);
    F.line = 170;
    resolve_620757095(self_620758917, self_620758917_Idx, expre_620758918.instance);
  framePtr = F.prev;

  
}

function resolve_620758919(self_620758917, self_620758917_Idx, expre_620758918) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 168;
    resolve_620758916(self_620758917, self_620758917_Idx, expre_620758918);
  framePtr = F.prev;

  
}

function resolve_620758920(self_620758921, self_620758921_Idx, expre_620758922) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    if ((self_620758921[self_620758921_Idx].currentClass == 0)) {
    F.line = 174;
    error_1006633457(expre_620758922.keyword, makeNimstrLit("SyntaxError"), makeNimstrLit("Cannot use \'self\' or \'&\' outside of a class"));
    }
    
    F.line = 175;
    resolveLocal_620757084(self_620758921, self_620758921_Idx, expre_620758922, expre_620758922.keyword);
  framePtr = F.prev;

  
}

function resolve_620758928(self_620758921, self_620758921_Idx, expre_620758922) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 172;
    resolve_620758920(self_620758921, self_620758921_Idx, expre_620758922);
  framePtr = F.prev;

  
}

function resolve_620758929(self_620758930, self_620758930_Idx, expre_620758931) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 178;
      var value_620758935 = null;
      var value_620758935_Idx = 0;
      F.line = 235;
      var i_436207854 = 0;
      F.line = 236;
      var L_436207855 = (expre_620758931.values).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207854 < L_436207855)) break Label3;
            F.line = 178;
            value_620758935 = expre_620758931.values; value_620758935_Idx = chckIndx(i_436207854, 0, (expre_620758931.values).length - 1);
            F.line = 178;
            resolve_620757095(self_620758930, self_620758930_Idx, value_620758935[value_620758935_Idx]);
            F.line = 239;
            i_436207854 = addInt(i_436207854, 1);
            if (!(((expre_620758931.values).length == L_436207855))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function resolve_620758936(self_620758930, self_620758930_Idx, expre_620758931) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 177;
    resolve_620758929(self_620758930, self_620758930_Idx, expre_620758931);
  framePtr = F.prev;

  
}

function resolve_620758937(self_620758938, self_620758938_Idx, expre_620758939) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 182;
      var k_620758943 = null;
      var k_620758943_Idx = 0;
      F.line = 235;
      var i_436207858 = 0;
      F.line = 236;
      var L_436207859 = (expre_620758939.keys).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207858 < L_436207859)) break Label3;
            F.line = 182;
            k_620758943 = expre_620758939.keys; k_620758943_Idx = chckIndx(i_436207858, 0, (expre_620758939.keys).length - 1);
            F.line = 182;
            resolve_620757095(self_620758938, self_620758938_Idx, k_620758943[k_620758943_Idx]);
            F.line = 239;
            i_436207858 = addInt(i_436207858, 1);
            if (!(((expre_620758939.keys).length == L_436207859))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    Label4: do {
      F.line = 184;
      var v_620758947 = null;
      var v_620758947_Idx = 0;
      F.line = 235;
      var i_436207862 = 0;
      F.line = 236;
      var L_436207863 = (expre_620758939.values).length;
      Label5: do {
        F.line = 237;
          Label6: while (true) {
          if (!(i_436207862 < L_436207863)) break Label6;
            F.line = 184;
            v_620758947 = expre_620758939.values; v_620758947_Idx = chckIndx(i_436207862, 0, (expre_620758939.values).length - 1);
            F.line = 184;
            resolve_620757095(self_620758938, self_620758938_Idx, v_620758947[v_620758947_Idx]);
            F.line = 239;
            i_436207862 = addInt(i_436207862, 1);
            if (!(((expre_620758939.values).length == L_436207863))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function resolve_620758948(self_620758938, self_620758938_Idx, expre_620758939) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 181;
    resolve_620758937(self_620758938, self_620758938_Idx, expre_620758939);
  framePtr = F.prev;

  
}

function resolve_620758949(self_620758950, self_620758950_Idx, expre_620758951) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    if ((self_620758950[self_620758950_Idx].currentClass == 0)) {
    F.line = 189;
    error_1006633457(expre_620758951.keyword, makeNimstrLit("RuntimeError"), makeNimstrLit("Cannot use \'super\' outside of a class"));
    }
    else {
    if (!((self_620758950[self_620758950_Idx].currentClass == 2))) {
    F.line = 191;
    error_1006633457(expre_620758951.keyword, makeNimstrLit("RuntimeError"), makeNimstrLit("Cannot use \'super\' in a class with no superclass"));
    }
    }
    F.line = 193;
    resolveLocal_620757084(self_620758950, self_620758950_Idx, expre_620758951, expre_620758951.keyword);
  framePtr = F.prev;

  
}

function resolve_620758960(self_620758950, self_620758950_Idx, expre_620758951) {
  var F = {procname: "resolver.resolve", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/resolver.nim", line: 0};
  framePtr = F;
    F.line = 187;
    resolve_620758949(self_620758950, self_620758950_Idx, expre_620758951);
  framePtr = F.prev;

  
}

function eval_603981188(self_603981189, self_603981189_Idx, expre_603981190) {
  var result_603983520 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_603983520;

}

function eval_603981191(self_603981189, self_603981189_Idx, expre_603981190) {
  var result_603983520 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 29;
    result_603983520 = eval_603981188(self_603981189, self_603981189_Idx, expre_603981190);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603983520;

}

function newFloat_1040187465(value_1040187466) {
  var result_1040187467 = null;

  var F = {procname: "slaptype.newFloat", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 38;
    result_1040187467 = {value: value_1040187466, m_type: NTI1040187406};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1040187467;

}

function parseFloatNative_33557269(a_33557270) {
  var result_33557271 = 0.0;

  var F = {procname: "system.parseFloatNative", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system/jssys.nim", line: 0};
  framePtr = F;
    F.line = 702;
    var a2_33557272 = toJSStr(a_33557270);
    F.line = 703;
      result_33557271 = Number(a2_33557272);
  
  framePtr = F.prev;

  return result_33557271;

}

function npuParseFloat(s_872415644, number_872415645, number_872415645_Idx, start_872415646) {
  var result_872415647 = 0;

  var F = {procname: "parseutils.parseFloat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 595;
    var bf_872415648 = [0.0];
    F.line = 596;
    result_872415647 = nimParseBiggestFloat(s_872415644, bf_872415648, 0, start_872415646);
    if (!((result_872415647 == 0))) {
    F.line = 598;
    number_872415645[number_872415645_Idx] = bf_872415648[0];
    }
    
  framePtr = F.prev;

  return result_872415647;

}

function nsuParseFloat(s_922747698) {
      var Temporary1;

  var result_922747699 = [0.0];

  var F = {procname: "strutils.parseFloat", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1111;
    result_922747699[0] = 0.0;
    F.line = 1112;
    var L_922747700 = npuParseFloat(s_922747698, result_922747699, 0, 0);
      if (!((L_922747700 == (s_922747698).length))) Temporary1 = true; else {        Temporary1 = (L_922747700 == 0);      }    if (Temporary1) {
    F.line = 1114;
    raiseException({message: (makeNimstrLit("invalid float: ") || []).concat(s_922747698 || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_922747699[0];

}

function eval_603983521(self_603983522, self_603983522_Idx, expre_603983523) {
  var result_603983524 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 131;
    switch (expre_603983523.kind) {
    case 2:
      F.line = 132;
      result_603983524 = newString_1040187423(expre_603983523.value);
      break BeforeRet;
      break;
    case 0:
      F.line = 133;
      result_603983524 = newInt_1040187444(nsuParseInt(expre_603983523.value));
      break BeforeRet;
      break;
    case 1:
      F.line = 134;
      result_603983524 = newFloat_1040187465(nsuParseFloat(expre_603983523.value));
      break BeforeRet;
      break;
    case 60:
      F.line = 135;
      result_603983524 = newBool_1040187486(true);
      break BeforeRet;
      break;
    case 61:
      F.line = 136;
      result_603983524 = newBool_1040187486(false);
      break BeforeRet;
      break;
    case 62:
      F.line = 137;
      result_603983524 = newNull_1040187569();
      break BeforeRet;
      break;
    default: 
      break;
    }
  } while (false);
  framePtr = F.prev;

  return result_603983524;

}

function eval_603983525(self_603983522, self_603983522_Idx, expre_603983523) {
  var result_603983526 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 130;
    result_603983526 = eval_603983521(self_603983522, self_603983522_Idx, expre_603983523);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603983526;

}

function eval_603983527(self_603983528, self_603983528_Idx, expre_603983529) {
  var result_603983530 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 142;
    result_603983530 = eval_603981191(self_603983528, self_603983528_Idx, expre_603983529.expression);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603983530;

}

function eval_603983531(self_603983528, self_603983528_Idx, expre_603983529) {
  var result_603983532 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 141;
    result_603983532 = eval_603983527(self_603983528, self_603983528_Idx, expre_603983529);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603983532;

}

function isTruthy_603983483(self_603983484, self_603983484_Idx, obj_603983485) {
  var result_603987130 = false;

  var F = {procname: "interpreter.isTruthy", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (isObj(obj_603983485.m_type, NTI1040187426)) {
    F.line = 536;
    result_603987130 = false;
    break BeforeRet;
    }
    
    if (isObj(obj_603983485.m_type, NTI1040187407)) {
    F.line = 537;
    result_603987130 = obj_603983485.value;
    break BeforeRet;
    }
    else {
      F.line = 538;
      result_603987130 = true;
      break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_603987130;

}

function eval_603983533(self_603983534, self_603983534_Idx, expre_603983535) {
  var result_603983536 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 146;
    var right_603983537 = eval_603981191(self_603983534, self_603983534_Idx, expre_603983535.right);
    F.line = 148;
    switch (expre_603983535.operator.kind) {
    case 15:
      if ((isObj(right_603983537.m_type, NTI1040187405) || isObj(right_603983537.m_type, NTI1040187406))) {
      if (isObj(right_603983537.m_type, NTI1040187405)) {
      F.line = 151;
      result_603983536 = newInt_1040187444(negInt(right_603983537.value));
      break BeforeRet;
      }
      else {
      if (isObj(right_603983537.m_type, NTI1040187406)) {
      F.line = 152;
      result_603983536 = newFloat_1040187465(-(right_603983537.value));
      break BeforeRet;
      }
      }
      }
      else {
        F.line = 154;
      error_1006633457(expre_603983535.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("All operands must be either string or int and float"));
      }
      
      break;
    case 28:
      F.line = 156;
      result_603983536 = newBool_1040187486(isTruthy_603983483(self_603983534, self_603983534_Idx, right_603983537));
      break BeforeRet;
      break;
    default: 
      break;
    }
  } while (false);
  framePtr = F.prev;

  return result_603983536;

}

function eval_603983562(self_603983534, self_603983534_Idx, expre_603983535) {
  var result_603983563 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 145;
    result_603983563 = eval_603983533(self_603983534, self_603983534_Idx, expre_603983535);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603983563;

}

function hasKey_603984033(t_603984036, key_603984037) {
  var result_603984038 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 371;
    var hc_603984039 = [0];
    F.line = 372;
    result_603984038 = (0 <= rawGet_1090519205(t_603984036, key_603984037, hc_603984039, 0));
  framePtr = F.prev;

  return result_603984038;

}

function raiseKeyError_603984166(key_603984168) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 236;
    raiseException({message: makeNimstrLit("key not found"), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_603984099(t_603984102, key_603984103) {
  var result_603984104 = null;
  var result_603984104_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym22_603984105 = [0];
    F.line = 243;
    var indexHEX60gensym22_603984112 = rawGet_1090519205(t_603984102, key_603984103, hcHEX60gensym22_603984105, 0);
    if ((0 <= indexHEX60gensym22_603984112)) {
    F.line = 244;
    result_603984104 = t_603984102.data[chckIndx(indexHEX60gensym22_603984112, 0, (t_603984102.data).length - 1)]; result_603984104_Idx = "Field2";
    }
    else {
      F.line = 246;
    raiseKeyError_603984166(key_603984103);
    }
    
  framePtr = F.prev;

  return [result_603984104, result_603984104_Idx];

}

function HEX5BHEX5D_1056966181(t_1056966184, key_1056966185) {
  var result_1056966186 = null;
  var result_1056966186_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym22_1056966187 = [0];
    F.line = 243;
    var indexHEX60gensym22_1056966194 = rawGet_1056964818(t_1056966184, key_1056966185, hcHEX60gensym22_1056966187, 0);
    if ((0 <= indexHEX60gensym22_1056966194)) {
    F.line = 244;
    result_1056966186 = t_1056966184.data[chckIndx(indexHEX60gensym22_1056966194, 0, (t_1056966184.data).length - 1)]; result_1056966186_Idx = "Field2";
    }
    else {
      F.line = 246;
    raiseKeyError_1006633350(key_1056966185);
    }
    
  framePtr = F.prev;

  return [result_1056966186, result_1056966186_Idx];

}

function ancestor_1056964635(env_1056964636, env_1056964636_Idx, distance_1056964637) {
  var result_1056966266 = null;

  var F = {procname: "env.ancestor", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 56;
    var environment_1056966267 = env_1056964636[env_1056964636_Idx];
    Label1: do {
      F.line = 57;
      var __1056966272 = 0;
      F.line = 119;
      var i_436207872 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436207872 < distance_1056964637)) break Label3;
            F.line = 57;
            __1056966272 = i_436207872;
            F.line = 57;
            environment_1056966267 = environment_1056966267.enclosing;
            F.line = 122;
            i_436207872 = addInt(i_436207872, 1);
          }
      } while (false);
    } while (false);
    F.line = 58;
    result_1056966266 = environment_1056966267;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1056966266;

}

function getAt_1056964638(env_1056964639, env_1056964639_Idx, distance_1056964640, name_1056964641) {
    var Temporary1;

  var result_1056966277 = null;

  var F = {procname: "env.getAt", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 60;
    result_1056966277 = (Temporary1 = HEX5BHEX5D_1056966181(ancestor_1056964635(env_1056964639, env_1056964639_Idx, distance_1056964640).values, hash_654311873(name_1056964641)), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1056966277;

}

function hasKey_1056966115(t_1056966118, key_1056966119) {
  var result_1056966120 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 371;
    var hc_1056966121 = [0];
    F.line = 372;
    result_1056966120 = (0 <= rawGet_1056964818(t_1056966118, key_1056966119, hc_1056966121, 0));
  framePtr = F.prev;

  return result_1056966120;

}

function get_1056964632(env_1056964633, env_1056964633_Idx, name_1056964634) {
    var Temporary1;

  var result_1056966074 = null;

  var F = {procname: "env.get", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (hasKey_1056966115(env_1056964633[env_1056964633_Idx].values, hash_654311873(name_1056964634.value))) {
    F.line = 50;
    result_1056966074 = (Temporary1 = HEX5BHEX5D_1056966181(env_1056964633[env_1056964633_Idx].values, hash_654311873(name_1056964634.value)), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
    }
    
    if (!((env_1056964633[env_1056964633_Idx].enclosing == null))) {
    F.line = 51;
    result_1056966074 = get_1056964632(env_1056964633[env_1056964633_Idx], "enclosing", name_1056964634);
    break BeforeRet;
    }
    else {
      F.line = 53;
    error_1006633457(name_1056964634, makeNimstrLit("RuntimeError"), (makeNimstrLit("\'") || []).concat(name_1056964634.value || [],makeNimstrLit("\' is not defined") || []));
    }
    
  } while (false);
  framePtr = F.prev;

  return result_1056966074;

}

function lookUpVariable_603983490(self_603983491, self_603983491_Idx, name_603983492, expre_603983493) {
    var Temporary1;

  var result_603987569 = null;

  var F = {procname: "interpreter.lookUpVariable", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (hasKey_603984033(self_603983491[self_603983491_Idx].locals, expre_603983493)) {
    F.line = 631;
    var distance_603987673 = (Temporary1 = HEX5BHEX5D_603984099(self_603983491[self_603983491_Idx].locals, expre_603983493), Temporary1)[0][Temporary1[1]];
    F.line = 632;
    result_603987569 = getAt_1056964638(self_603983491[self_603983491_Idx], "env", distance_603987673, name_603983492.value);
    break BeforeRet;
    }
    else {
      F.line = 634;
      result_603987569 = get_1056964632(self_603983491[self_603983491_Idx], "globals", name_603983492);
      break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_603987569;

}

function eval_603983564(self_603983565, self_603983565_Idx, expre_603983566) {
  var result_603983567 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 162;
    result_603983567 = lookUpVariable_603983490(self_603983565, self_603983565_Idx, expre_603983566.name, expre_603983566);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603983567;

}

function eval_603983568(self_603983565, self_603983565_Idx, expre_603983566) {
  var result_603983569 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 161;
    result_603983569 = eval_603983564(self_603983565, self_603983565_Idx, expre_603983566);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603983569;

}

function isNimException_33556520() {
    return lastJSError && lastJSError.m_type;

  
}

function rawGet_1056966720(t_1056966723, key_1056966724, hc_1056966725, hc_1056966725_Idx) {
            var Temporary3;

  var result_1056966726 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_1056966725[hc_1056966725_Idx] = hash_1124073480(key_1056966724);
    if ((hc_1056966725[hc_1056966725_Idx] == 0)) {
    F.line = 66;
    hc_1056966725[hc_1056966725_Idx] = 314159265;
    }
    
    if (((t_1056966723.data).length == 0)) {
    F.line = 48;
    result_1056966726 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1056966777 = (hc_1056966725[hc_1056966725_Idx] & (t_1056966723.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_1056966723.data[chckIndx(h_1056966777, 0, (t_1056966723.data).length - 1)].Field0)) break Label2;
            if (!(t_1056966723.data[chckIndx(h_1056966777, 0, (t_1056966723.data).length - 1)].Field0 == hc_1056966725[hc_1056966725_Idx])) Temporary3 = false; else {              Temporary3 = (t_1056966723.data[chckIndx(h_1056966777, 0, (t_1056966723.data).length - 1)].Field1 == key_1056966724);            }          if (Temporary3) {
          F.line = 56;
          result_1056966726 = h_1056966777;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1056966777 = nextTry_637534242(h_1056966777, (t_1056966723.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1056966726 = subInt(-1, h_1056966777);
  } while (false);
  framePtr = F.prev;

  return result_1056966726;

}

function raiseKeyError_603983937(key_603983939) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 234;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(HEX24_1090520413(key_603983939) || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_603983870(t_603983873, key_603983874) {
  var result_603983875 = null;
  var result_603983875_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym22_603983876 = [0];
    F.line = 243;
    var indexHEX60gensym22_603983883 = rawGet_1056966720(t_603983873, key_603983874, hcHEX60gensym22_603983876, 0);
    if ((0 <= indexHEX60gensym22_603983883)) {
    F.line = 244;
    result_603983875 = t_603983873.data[chckIndx(indexHEX60gensym22_603983883, 0, (t_603983873.data).length - 1)]; result_603983875_Idx = "Field2";
    }
    else {
      F.line = 246;
    raiseKeyError_603983937(key_603983874);
    }
    
  framePtr = F.prev;

  return [result_603983875, result_603983875_Idx];

}

function eval_603983570(self_603983571, self_603983571_Idx, expre_603983572) {
              var Temporary6;

  var result_603983573 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 166;
    var indexOrKey_603983574 = eval_603981191(self_603983571, self_603983571_Idx, expre_603983572.indexOrKey);
    F.line = 167;
    var variable_603983575 = eval_603981191(self_603983571, self_603983571_Idx, expre_603983572.variable);
    if (isObj(variable_603983575.m_type, NTI1040187408)) {
    if (!(isObj(indexOrKey_603983574.m_type, NTI1040187405))) {
    F.line = 169;
    error_1006633457(expre_603983572.token, makeNimstrLit("RuntimeError"), makeNimstrLit("List indices must be integers"));
    }
    
    F.line = 170;
++excHandler;
    try {
    F.line = 171;
    result_603983573 = variable_603983575.values[chckIndx(indexOrKey_603983574.value, 0, (variable_603983575.values).length - 1)];
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555128))) {
    F.line = 173;
    error_1006633457(expre_603983572.token, makeNimstrLit("RuntimeError"), makeNimstrLit("Index out of range"));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
    }
    else {
    if (isObj(variable_603983575.m_type, NTI1040187410)) {
    F.line = 176;
    var map_603983594 = [nimCopy(null, variable_603983575.map, NTI1040187418)];
    F.line = 177;
    var key_603983595 = eval_603981191(self_603983571, self_603983571_Idx, expre_603983572.indexOrKey);
    Label2: do {
      F.line = 178;
      var i_603983816 = null;
      var i_603983816_Idx = 0;
      F.line = 737;
      var L_436207879 = len_1090520604(map_603983594[0]);
      Label3: do {
        F.line = 738;
        var h_436207881 = 0;
        F.line = 75;
        var colontmp__436207882 = 0;
        F.line = 738;
        colontmp__436207882 = (map_603983594[0].data).length - 1;
        F.line = 90;
        var res_436207883 = 0;
        Label4: do {
          F.line = 91;
            Label5: while (true) {
            if (!(res_436207883 <= colontmp__436207882)) break Label5;
              F.line = 738;
              h_436207881 = res_436207883;
              if (isFilled_637534239(map_603983594[0].data[chckIndx(h_436207881, 0, (map_603983594[0].data).length - 1)].Field0)) {
              F.line = 178;
              i_603983816 = map_603983594[0].data[chckIndx(h_436207881, 0, (map_603983594[0].data).length - 1)]; i_603983816_Idx = "Field1";
              if ((hash_1124073480(i_603983816[i_603983816_Idx]) == hash_1124073480(key_603983595))) {
              F.line = 180;
              result_603983573 = (Temporary6 = HEX5BHEX5D_603983870(map_603983594[0], i_603983816[i_603983816_Idx]), Temporary6)[0][Temporary6[1]];
              break BeforeRet;
              }
              
              if (!((len_1090520604(map_603983594[0]) == L_436207879))) {
              F.line = 741;
              failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim(741, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 93;
              res_436207883 = addInt(res_436207883, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    F.line = 181;
    error_1006633457(expre_603983572.token, makeNimstrLit("RuntimeError"), (makeNimstrLit("Value with key \'") || []).concat(HEX24_1090520413(key_603983595) || [],makeNimstrLit("\' does not exist") || []));
    }
    else {
    if (isObj(variable_603983575.m_type, NTI1040187404)) {
    if (!(isObj(indexOrKey_603983574.m_type, NTI1040187405))) {
    F.line = 184;
    error_1006633457(expre_603983572.token, makeNimstrLit("RuntimeError"), makeNimstrLit("String indices must be integers"));
    }
    
    F.line = 185;
    F.line = 851;
    var resultHEX60gensym41_603983962 = [];
    Label7: do {
      F.line = 852;
      var xHEX60gensym41_603983963 = 0;
      F.line = 251;
      var colontmp__436207886 = [];
      F.line = 185;
      colontmp__436207886 = variable_603983575.value;
      F.line = 253;
      var i_436207887 = 0;
      F.line = 254;
      var L_436207888 = (colontmp__436207886).length;
      Label8: do {
        F.line = 255;
          Label9: while (true) {
          if (!(i_436207887 < L_436207888)) break Label9;
            F.line = 852;
            xHEX60gensym41_603983963 = colontmp__436207886[chckIndx(i_436207887, 0, (colontmp__436207886).length - 1)];
            F.line = 852;
            resultHEX60gensym41_603983962.push(xHEX60gensym41_603983963);;
            F.line = 257;
            i_436207887 = addInt(i_436207887, 1);
            if (!(((colontmp__436207886).length == L_436207888))) {
            F.line = 258;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    var chars_603983968 = nimCopy(null, resultHEX60gensym41_603983962, NTI603981885);
    F.line = 186;
++excHandler;
    try {
    F.line = 187;
    result_603983573 = newString_1040187423(nimCharToStr(chars_603983968[chckIndx(indexOrKey_603983574.value, 0, (chars_603983968).length - 1)]));
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555128))) {
    F.line = 189;
    error_1006633457(expre_603983572.token, makeNimstrLit("RuntimeError"), makeNimstrLit("Index out of range"));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
    }
    else {
      F.line = 191;
    error_1006633457(expre_603983572.token, makeNimstrLit("RuntimeError"), makeNimstrLit("Only lists and maps can be used with \'@[]\'"));
    }
    }}
  } while (false);
  framePtr = F.prev;

  return result_603983573;

}

function eval_603983978(self_603983571, self_603983571_Idx, expre_603983572) {
  var result_603983979 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 165;
    result_603983979 = eval_603983570(self_603983571, self_603983571_Idx, expre_603983572);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603983979;

}

function contains_603984027(t_603984030, key_603984031) {
  var result_603984032 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 382;
    result_603984032 = hasKey_603984033(t_603984030, key_603984031);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984032;

}

function assignAt_1056964646(env_1056964647, env_1056964647_Idx, distance_1056964648, name_1056964649, value_1056964650) {
  var F = {procname: "env.assignAt", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
  framePtr = F;
    F.line = 72;
    HEX5BHEX5DHEX3D_1056964757(ancestor_1056964635(env_1056964647, env_1056964647_Idx, distance_1056964648).values, hash_654311873(name_1056964649.value), value_1056964650);
  framePtr = F.prev;

  
}

function assign_1056964642(env_1056964643, env_1056964643_Idx, name_1056964644, value_1056964645) {
  var F = {procname: "env.assign", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (hasKey_1056966115(env_1056964643[env_1056964643_Idx].values, hash_654311873(name_1056964644.value))) {
    F.line = 65;
    HEX5BHEX5DHEX3D_1056964757(env_1056964643[env_1056964643_Idx].values, hash_654311873(name_1056964644.value), value_1056964645);
    F.line = 66;
    break BeforeRet;
    }
    else {
    if (!((env_1056964643[env_1056964643_Idx].enclosing == null))) {
    F.line = 68;
    assign_1056964642(env_1056964643[env_1056964643_Idx], "enclosing", name_1056964644, value_1056964645);
    F.line = 69;
    break BeforeRet;
    }
    }
    F.line = 70;
    error_1006633457(name_1056964644, makeNimstrLit("RuntimeError"), (makeNimstrLit("\'") || []).concat(name_1056964644.value || [],makeNimstrLit("\' is not defined") || []));
  } while (false);
  framePtr = F.prev;

  
}

function eval_603983980(self_603983981, self_603983981_Idx, expre_603983982) {
    var Temporary1;

  var result_603983983 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 195;
    var value_603983984 = eval_603981191(self_603983981, self_603983981_Idx, expre_603983982.value);
    if (contains_603984027(self_603983981[self_603983981_Idx].locals, expre_603983982)) {
    F.line = 197;
    var distance_603984179 = (Temporary1 = HEX5BHEX5D_603984099(self_603983981[self_603983981_Idx].locals, expre_603983982), Temporary1)[0][Temporary1[1]];
    F.line = 198;
    assignAt_1056964646(self_603983981[self_603983981_Idx], "env", distance_603984179, expre_603983982.name, value_603983984);
    }
    else {
      F.line = 200;
    assign_1056964642(self_603983981[self_603983981_Idx], "globals", expre_603983982.name, value_603983984);
    }
    
    F.line = 201;
    result_603983983 = value_603983984;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603983983;

}

function eval_603984180(self_603983981, self_603983981_Idx, expre_603983982) {
  var result_603984181 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 194;
    result_603984181 = eval_603983980(self_603983981, self_603983981_Idx, expre_603983982);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984181;

}

function mustRehash_1056967051(t_1056967053) {
  var result_1056967054 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1056967053.counter < (t_1056967053.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_1056967054 = ((mulInt((t_1056967053.data).length, 2) < mulInt(t_1056967053.counter, 3)) || (subInt((t_1056967053.data).length, t_1056967053.counter) < 4));
  framePtr = F.prev;

  return result_1056967054;

}

function rawInsert_1056967500(t_1056967504, data_1056967505, data_1056967505_Idx, key_1056967506, val_1056967507, hc_1056967508, h_1056967509) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_1056967505[data_1056967505_Idx][chckIndx(h_1056967509, 0, (data_1056967505[data_1056967505_Idx]).length - 1)].Field1 = key_1056967506;
    F.line = 23;
    data_1056967505[data_1056967505_Idx][chckIndx(h_1056967509, 0, (data_1056967505[data_1056967505_Idx]).length - 1)].Field2 = val_1056967507;
    F.line = 24;
    data_1056967505[data_1056967505_Idx][chckIndx(h_1056967509, 0, (data_1056967505[data_1056967505_Idx]).length - 1)].Field0 = hc_1056967508;
  framePtr = F.prev;

  
}

function enlarge_1056967206(t_1056967209) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 249;
    var n_1056967212 = [];
    F.line = 250;
    n_1056967212 = new Array(chckRange(mulInt((t_1056967209.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1056967209.data).length, 2), 0, 2147483647) ; ++i) { n_1056967212[i] = {Field0: 0, Field1: null, Field2: null}; }    F.line = 251;
    var Temporary1 = t_1056967209.data; t_1056967209.data = n_1056967212; n_1056967212 = Temporary1;    Label2: do {
      F.line = 252;
      var i_1056967276 = 0;
      F.line = 43;
      var colontmp__436207893 = 0;
      F.line = 252;
      colontmp__436207893 = (n_1056967212).length - 1;
      F.line = 65;
      var res_436207894 = 0;
      Label3: do {
        F.line = 66;
          Label4: while (true) {
          if (!(res_436207894 <= colontmp__436207893)) break Label4;
            F.line = 252;
            i_1056967276 = res_436207894;
            F.line = 253;
            var eh_1056967330 = n_1056967212[chckIndx(i_1056967276, 0, (n_1056967212).length - 1)].Field0;
            if (isFilled_637534239(eh_1056967330)) {
            F.line = 255;
            var j_1056967334 = (eh_1056967330 & (t_1056967209.data).length - 1);
            Label5: do {
              F.line = 256;
                Label6: while (true) {
                if (!isFilled_637534239(t_1056967209.data[chckIndx(j_1056967334, 0, (t_1056967209.data).length - 1)].Field0)) break Label6;
                  F.line = 257;
                  j_1056967334 = nextTry_637534242(j_1056967334, (t_1056967209.data).length - 1);
                }
            } while (false);
            F.line = 259;
            rawInsert_1056967500(t_1056967209, t_1056967209, "data", n_1056967212[chckIndx(i_1056967276, 0, (n_1056967212).length - 1)].Field1, n_1056967212[chckIndx(i_1056967276, 0, (n_1056967212).length - 1)].Field2, eh_1056967330, j_1056967334);
            }
            
            F.line = 68;
            res_436207894 = addInt(res_436207894, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_1056967669(t_1056967672, key_1056967673, hc_1056967674) {
  var result_1056967675 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_1056967672.data).length == 0)) {
    F.line = 48;
    result_1056967675 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1056967726 = (hc_1056967674 & (t_1056967672.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_1056967672.data[chckIndx(h_1056967726, 0, (t_1056967672.data).length - 1)].Field0)) break Label2;
          if (((t_1056967672.data[chckIndx(h_1056967726, 0, (t_1056967672.data).length - 1)].Field0 == hc_1056967674) && (t_1056967672.data[chckIndx(h_1056967726, 0, (t_1056967672.data).length - 1)].Field1 == key_1056967673))) {
          F.line = 56;
          result_1056967675 = h_1056967726;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1056967726 = nextTry_637534242(h_1056967726, (t_1056967672.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1056967675 = subInt(-1, h_1056967726);
  } while (false);
  framePtr = F.prev;

  return result_1056967675;

}

function HEX5BHEX5DHEX3D_1056966659(t_1056966662, key_1056966663, val_1056966664) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_1056966662.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym18_1056966714 = slotsNeeded_637534250(32);
    F.line = 167;
    t_1056966662.counter = 0;
    F.line = 168;
    t_1056966662.data = new Array(chckRange(correctSizeHEX60gensym18_1056966714, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1056966714, 0, 2147483647) ; ++i) { t_1056966662.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    F.line = 57;
    var hc_1056966719 = [0];
    F.line = 58;
    var index_1056966944 = rawGet_1056966720(t_1056966662, key_1056966663, hc_1056966719, 0);
    if ((0 <= index_1056966944)) {
    F.line = 59;
    t_1056966662.data[chckIndx(index_1056966944, 0, (t_1056966662.data).length - 1)].Field2 = val_1056966664;
    }
    else {
      if (((t_1056966662.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym23_1056967046 = slotsNeeded_637534250(32);
      F.line = 167;
      t_1056966662.counter = 0;
      F.line = 168;
      t_1056966662.data = new Array(chckRange(correctSizeHEX60gensym23_1056967046, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_1056967046, 0, 2147483647) ; ++i) { t_1056966662.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_1056967051(t_1056966662)) {
      F.line = 49;
      enlarge_1056967206(t_1056966662);
      F.line = 50;
      index_1056966944 = rawGetKnownHC_1056967669(t_1056966662, key_1056966663, hc_1056966719[0]);
      }
      
      F.line = 51;
      index_1056966944 = subInt(-1, index_1056966944);
      F.line = 52;
      rawInsert_1056967500(t_1056966662, t_1056966662, "data", key_1056966663, val_1056966664, hc_1056966719[0], index_1056966944);
      F.line = 60;
      t_1056966662.counter = addInt(t_1056966662.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function listOrMapAssignAt_1056964656(env_1056964657, env_1056964657_Idx, distance_1056964658, name_1056964659, value_1056964660, indexOrKey_1056964661) {
    var Temporary1;

  var F = {procname: "env.listOrMapAssignAt", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
  framePtr = F;
    F.line = 92;
    var listOrMap_1056967977 = (Temporary1 = HEX5BHEX5D_1056966181(ancestor_1056964635(env_1056964657, env_1056964657_Idx, distance_1056964658).values, hash_654311873(name_1056964659.value)), Temporary1)[0][Temporary1[1]];
    if (isObj(listOrMap_1056967977.m_type, NTI1040187408)) {
    if (!(isObj(indexOrKey_1056964661.m_type, NTI1040187405))) {
    F.line = 94;
    error_1006633457(name_1056964659, makeNimstrLit("RuntimeError"), makeNimstrLit("List indices must be integers"));
    }
    
    F.line = 95;
    listOrMap_1056967977.values[chckIndx(indexOrKey_1056964661.value, 0, (listOrMap_1056967977.values).length - 1)] = value_1056964660;
    }
    else {
    if (isObj(listOrMap_1056967977.m_type, NTI1040187410)) {
    F.line = 98;
    HEX5BHEX5DHEX3D_1056966659(listOrMap_1056967977.map, indexOrKey_1056964661, value_1056964660);
    }
    else {
      F.line = 100;
    error_1006633457(name_1056964659, makeNimstrLit("RuntimeError"), makeNimstrLit("Only lists and maps can be used with \'@[]\'"));
    }
    }
  framePtr = F.prev;

  
}

function listOrMapAssign_1056964651(env_1056964652, env_1056964652_Idx, name_1056964653, value_1056964654, indexOrKey_1056964655) {
    var Temporary1;
      var Temporary2;

  var F = {procname: "env.listOrMapAssign", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
  framePtr = F;
    if (hasKey_1056966115(env_1056964652[env_1056964652_Idx].values, hash_654311873(name_1056964653.value))) {
    F.line = 76;
    var listOrMap_1056966593 = (Temporary1 = HEX5BHEX5D_1056966181(env_1056964652[env_1056964652_Idx].values, hash_654311873(name_1056964653.value)), Temporary1)[0][Temporary1[1]];
    if (isObj(listOrMap_1056966593.m_type, NTI1040187408)) {
    if (!(isObj(indexOrKey_1056964655.m_type, NTI1040187405))) {
    F.line = 78;
    error_1006633457(name_1056964653, makeNimstrLit("RuntimeError"), makeNimstrLit("List indices must be integers"));
    }
    
      if (!(indexOrKey_1056964655.value < (listOrMap_1056966593.values).length)) Temporary2 = false; else {        Temporary2 = (-1 < indexOrKey_1056964655.value);      }    if (Temporary2) {
    F.line = 80;
    listOrMap_1056966593.values[chckIndx(indexOrKey_1056964655.value, 0, (listOrMap_1056966593.values).length - 1)] = value_1056964654;
    }
    else {
      F.line = 82;
    error_1006633457(name_1056964653, makeNimstrLit("RuntimeError"), makeNimstrLit("Index out of range"));
    }
    
    }
    else {
    if (isObj(listOrMap_1056966593.m_type, NTI1040187410)) {
    F.line = 85;
    HEX5BHEX5DHEX3D_1056966659(listOrMap_1056966593.map, indexOrKey_1056964655, value_1056964654);
    }
    }
    }
    else {
    if (!((env_1056964652[env_1056964652_Idx].enclosing == null))) {
    F.line = 87;
    listOrMapAssign_1056964651(env_1056964652[env_1056964652_Idx], "enclosing", name_1056964653, value_1056964654, indexOrKey_1056964655);
    }
    else {
      F.line = 89;
    error_1006633457(name_1056964653, makeNimstrLit("RuntimeError"), (makeNimstrLit("\'") || []).concat(name_1056964653.value || [],makeNimstrLit("\' is not defined") || []));
    }
    }
  framePtr = F.prev;

  
}

function eval_603984182(self_603984183, self_603984183_Idx, expre_603984184) {
      var Temporary1;

  var result_603984185 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 205;
    var indexOrKey_603984186 = eval_603981191(self_603984183, self_603984183_Idx, expre_603984184.indexOrKey);
    F.line = 206;
    var value_603984187 = eval_603981191(self_603984183, self_603984183_Idx, expre_603984184.value);
    if (!(isObj(expre_603984184.variable.m_type, NTI1023410225))) {
    F.line = 208;
    var listOrMap_603984194 = eval_603981191(self_603984183, self_603984183_Idx, expre_603984184.variable);
    if (isObj(listOrMap_603984194.m_type, NTI1040187408)) {
    if (!(isObj(indexOrKey_603984186.m_type, NTI1040187405))) {
    F.line = 210;
    error_1006633457(expre_603984184.token, makeNimstrLit("RuntimeError"), makeNimstrLit("List indices must be integers"));
    }
    else {
      F.line = 211;
      listOrMap_603984194.values[chckIndx(indexOrKey_603984186.value, 0, (listOrMap_603984194.values).length - 1)] = value_603984187;
    }
    
    }
    
    }
    else {
      F.line = 215;
      var name_603984207 = expre_603984184.variable.name;
      F.line = 216;
      var variable_603984208 = expre_603984184.variable;
      if (hasKey_603984033(self_603984183[self_603984183_Idx].locals, variable_603984208)) {
      F.line = 218;
      var distance_603984312 = (Temporary1 = HEX5BHEX5D_603984099(self_603984183[self_603984183_Idx].locals, variable_603984208), Temporary1)[0][Temporary1[1]];
      F.line = 219;
      listOrMapAssignAt_1056964656(self_603984183[self_603984183_Idx], "env", distance_603984312, name_603984207, value_603984187, indexOrKey_603984186);
      }
      else {
        F.line = 221;
      listOrMapAssign_1056964651(self_603984183[self_603984183_Idx], "globals", name_603984207, value_603984187, indexOrKey_603984186);
      }
      
    }
    
    F.line = 223;
    result_603984185 = value_603984187;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984185;

}

function eval_603984313(self_603984183, self_603984183_Idx, expre_603984184) {
  var result_603984314 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 204;
    result_603984314 = eval_603984182(self_603984183, self_603984183_Idx, expre_603984184);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984314;

}

function eval_603984315(self_603984316, self_603984316_Idx, expre_603984317) {
  var result_603984318 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 227;
    var left_603984319 = eval_603981191(self_603984316, self_603984316_Idx, expre_603984317.left);
    if ((expre_603984317.operator.kind == 49)) {
    if (isTruthy_603983483(self_603984316, self_603984316_Idx, left_603984319)) {
    F.line = 229;
    result_603984318 = left_603984319;
    break BeforeRet;
    }
    
    }
    else {
      if (!(isTruthy_603983483(self_603984316, self_603984316_Idx, left_603984319))) {
      F.line = 231;
      result_603984318 = left_603984319;
      break BeforeRet;
      }
      
    }
    
    F.line = 232;
    result_603984318 = eval_603981191(self_603984316, self_603984316_Idx, expre_603984317.right);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984318;

}

function eval_603984324(self_603984316, self_603984316_Idx, expre_603984317) {
  var result_603984325 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 226;
    result_603984325 = eval_603984315(self_603984316, self_603984316_Idx, expre_603984317);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984325;

}

function eval_603984326(self_603984327, self_603984327_Idx, expre_603984328) {
  var result_603984329 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 236;
    var callee_603984330 = eval_603981191(self_603984327, self_603984327_Idx, expre_603984328.callee);
    F.line = 237;
    var arguments_603984331 = [];
    Label1: do {
      F.line = 238;
      var arg_603984335 = null;
      var arg_603984335_Idx = 0;
      F.line = 235;
      var i_436207898 = 0;
      F.line = 236;
      var L_436207899 = (expre_603984328.arguments).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207898 < L_436207899)) break Label3;
            F.line = 238;
            arg_603984335 = expre_603984328.arguments; arg_603984335_Idx = chckIndx(i_436207898, 0, (expre_603984328.arguments).length - 1);
            F.line = 238;
            arguments_603984331.push(eval_603981191(self_603984327, self_603984327_Idx, arg_603984335[arg_603984335_Idx]));;
            F.line = 239;
            i_436207898 = addInt(i_436207898, 1);
            if (!(((expre_603984328.arguments).length == L_436207899))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    if (!(isObj(callee_603984330.m_type, NTI1090519064))) {
    F.line = 240;
    error_1006633457(expre_603984328.paren, makeNimstrLit("RuntimeError"), makeNimstrLit("Can only call classes and functions"));
    }
    
    F.line = 241;
    var function_603984346 = callee_603984330;
    F.line = 242;
    var colontmp__436207901 = function_603984346.arity();
    F.line = 242;
    var atLeast_603984347 = colontmp__436207901["Field0"];
    F.line = 242;
    var atMost_603984348 = colontmp__436207901["Field1"];
    if (((arguments_603984331).length < atLeast_603984347)) {
    F.line = 244;
    error_1006633457(expre_603984328.paren, makeNimstrLit("RuntimeError"), (makeNimstrLit("Expected at least ") || []).concat(HEX24_318767107(atLeast_603984347) || [],makeNimstrLit(" argument(s) but got ") || [],HEX24_318767107((arguments_603984331).length) || []));
    }
    
    if ((atMost_603984348 < (arguments_603984331).length)) {
    F.line = 246;
    error_1006633457(expre_603984328.paren, makeNimstrLit("RuntimeError"), (makeNimstrLit("Expected at most ") || []).concat(HEX24_318767107(atMost_603984348) || [],makeNimstrLit(" argument(s) but got ") || [],HEX24_318767107((arguments_603984331).length) || []));
    }
    
    F.line = 248;
    result_603984329 = function_603984346.call(self_603984327, self_603984327_Idx, arguments_603984331, expre_603984328.paren);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984329;

}

function eval_603984365(self_603984327, self_603984327_Idx, expre_603984328) {
  var result_603984366 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 235;
    result_603984366 = eval_603984326(self_603984327, self_603984327_Idx, expre_603984328);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984366;

}

function rawGet_603982047(t_603982050, key_603982051, hc_603982052, hc_603982052_Idx) {
            var Temporary3;

  var result_603982053 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_603982052[hc_603982052_Idx] = hash_654311873(key_603982051);
    if ((hc_603982052[hc_603982052_Idx] == 0)) {
    F.line = 66;
    hc_603982052[hc_603982052_Idx] = 314159265;
    }
    
    if (((t_603982050.data).length == 0)) {
    F.line = 48;
    result_603982053 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_603982105 = (hc_603982052[hc_603982052_Idx] & (t_603982050.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_603982050.data[chckIndx(h_603982105, 0, (t_603982050.data).length - 1)].Field0)) break Label2;
            if (!(t_603982050.data[chckIndx(h_603982105, 0, (t_603982050.data).length - 1)].Field0 == hc_603982052[hc_603982052_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_603982050.data[chckIndx(h_603982105, 0, (t_603982050.data).length - 1)].Field1, key_603982051);            }          if (Temporary3) {
          F.line = 56;
          result_603982053 = h_603982105;
          break BeforeRet;
          }
          
          F.line = 57;
          h_603982105 = nextTry_637534242(h_603982105, (t_603982050.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_603982053 = subInt(-1, h_603982105);
  } while (false);
  framePtr = F.prev;

  return result_603982053;

}

function hasKey_603982040(t_603982043, key_603982044) {
  var result_603982045 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 371;
    var hc_603982046 = [0];
    F.line = 372;
    result_603982045 = (0 <= rawGet_603982047(t_603982043, key_603982044, hc_603982046, 0));
  framePtr = F.prev;

  return result_603982045;

}

function HEX5BHEX5D_603982330(t_603982333, key_603982334) {
  var result_603982335 = null;
  var result_603982335_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym22_603982336 = [0];
    F.line = 243;
    var indexHEX60gensym22_603982343 = rawGet_603982047(t_603982333, key_603982334, hcHEX60gensym22_603982336, 0);
    if ((0 <= indexHEX60gensym22_603982343)) {
    F.line = 244;
    result_603982335 = t_603982333.data[chckIndx(indexHEX60gensym22_603982343, 0, (t_603982333.data).length - 1)]; result_603982335_Idx = "Field2";
    }
    else {
      F.line = 246;
    raiseKeyError_570428124(key_603982334);
    }
    
  framePtr = F.prev;

  return [result_603982335, result_603982335_Idx];

}

function rawGet_603981390(t_603981393, key_603981394, hc_603981395, hc_603981395_Idx) {
            var Temporary3;

  var result_603981396 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_603981395[hc_603981395_Idx] = hash_654311873(key_603981394);
    if ((hc_603981395[hc_603981395_Idx] == 0)) {
    F.line = 66;
    hc_603981395[hc_603981395_Idx] = 314159265;
    }
    
    if (((t_603981393.data).length == 0)) {
    F.line = 48;
    result_603981396 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_603981448 = (hc_603981395[hc_603981395_Idx] & (t_603981393.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_603981393.data[chckIndx(h_603981448, 0, (t_603981393.data).length - 1)].Field0)) break Label2;
            if (!(t_603981393.data[chckIndx(h_603981448, 0, (t_603981393.data).length - 1)].Field0 == hc_603981395[hc_603981395_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_603981393.data[chckIndx(h_603981448, 0, (t_603981393.data).length - 1)].Field1, key_603981394);            }          if (Temporary3) {
          F.line = 56;
          result_603981396 = h_603981448;
          break BeforeRet;
          }
          
          F.line = 57;
          h_603981448 = nextTry_637534242(h_603981448, (t_603981393.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_603981396 = subInt(-1, h_603981448);
  } while (false);
  framePtr = F.prev;

  return result_603981396;

}

function hasKey_603981383(t_603981386, key_603981387) {
  var result_603981388 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 371;
    var hc_603981389 = [0];
    F.line = 372;
    result_603981388 = (0 <= rawGet_603981390(t_603981386, key_603981387, hc_603981389, 0));
  framePtr = F.prev;

  return result_603981388;

}

function HEX5BHEX5D_603981682(t_603981685, key_603981686) {
  var result_603981687 = null;
  var result_603981687_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym22_603981688 = [0];
    F.line = 243;
    var indexHEX60gensym22_603981695 = rawGet_603981390(t_603981685, key_603981686, hcHEX60gensym22_603981688, 0);
    if ((0 <= indexHEX60gensym22_603981695)) {
    F.line = 244;
    result_603981687 = t_603981685.data[chckIndx(indexHEX60gensym22_603981695, 0, (t_603981685.data).length - 1)]; result_603981687_Idx = "Field2";
    }
    else {
      F.line = 246;
    raiseKeyError_570428124(key_603981686);
    }
    
  framePtr = F.prev;

  return [result_603981687, result_603981687_Idx];

}

function findMethod_603981339(ct_603981340, name_603981341) {
    var Temporary1;

  var result_603981342 = null;

  var F = {procname: "interpreter.findMethod", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (hasKey_603981383(ct_603981340.methods, name_603981341)) {
    F.line = 75;
    result_603981342 = (Temporary1 = HEX5BHEX5D_603981682(ct_603981340.methods, name_603981341), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
    }
    
    if (!((ct_603981340.superclass == null))) {
    F.line = 76;
    result_603981342 = findMethod_603981339(ct_603981340.superclass, name_603981341);
    break BeforeRet;
    }
    
    F.line = 77;
    result_603981342 = null;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603981342;

}

function eval_603984904(self_603984905, self_603984905_Idx, statement_603984906) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function eval_603984907(self_603984905, self_603984905_Idx, statement_603984906) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 387;
    eval_603984904(self_603984905, self_603984905_Idx, statement_603984906);
  framePtr = F.prev;

  
}

function executeBlock_603981184(self_603981185, self_603981185_Idx, statements_603981186, environment_603981187) {
  var F = {procname: "interpreter.executeBlock", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 406;
    var previous_603984936 = self_603981185[self_603981185_Idx].env;
    F.line = 407;
    try {
    F.line = 408;
    self_603981185[self_603981185_Idx].env = environment_603981187;
    Label2: do {
      F.line = 409;
      var i_603984940 = null;
      var i_603984940_Idx = 0;
      F.line = 235;
      var i_436207919 = 0;
      F.line = 236;
      var L_436207920 = (statements_603981186).length;
      Label3: do {
        F.line = 237;
          Label4: while (true) {
          if (!(i_436207919 < L_436207920)) break Label4;
            F.line = 409;
            i_603984940 = statements_603981186; i_603984940_Idx = chckIndx(i_436207919, 0, (statements_603981186).length - 1);
            F.line = 409;
            eval_603984907(self_603981185, self_603981185_Idx, i_603984940[i_603984940_Idx]);
            F.line = 239;
            i_436207919 = addInt(i_436207919, 1);
            if (!(((statements_603981186).length == L_436207920))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    } finally {
    framePtr = F;
    F.line = 412;
    self_603981185[self_603981185_Idx].env = previous_603984936;
    }
  framePtr = F.prev;

  
}

function getCurrentException() {
  var result_33556523 = null;

    if (isNimException_33556520()) {
    result_33556523 = lastJSError;
    }
    

  return result_33556523;

}

function newFunction_603981224(name_603981225, declaration_603981226, closure_603981227, isInitFunc_603981228) {
    
function HEX3Aanonymous_603981231() {
      var result_603981232 = {Field0: 0, Field1: 0};

      var F = {procname: "newFunction.:anonymous", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
      framePtr = F;
      BeforeRet: do {
        F.line = 44;
        var atLeast_603981233 = 0;
        F.line = 45;
        var atMost_603981234 = 0;
        Label1: do {
          F.line = 46;
          var i_603981238 = null;
          var i_603981238_Idx = 0;
          F.line = 235;
          var i_436207905 = 0;
          F.line = 236;
          var L_436207906 = (fun_603981230.declaration.parameters).length;
          Label2: do {
            F.line = 237;
              Label3: while (true) {
              if (!(i_436207905 < L_436207906)) break Label3;
                F.line = 46;
                i_603981238 = fun_603981230.declaration.parameters; i_603981238_Idx = chckIndx(i_436207905, 0, (fun_603981230.declaration.parameters).length - 1);
                if (isObj(i_603981238[i_603981238_Idx].m_type, NTI1023410258)) {
                F.line = 47;
                atLeast_603981233 = addInt(atLeast_603981233, 1);
                F.line = 47;
                atMost_603981234 = addInt(atMost_603981234, 1);
                }
                else {
                if (isObj(i_603981238[i_603981238_Idx].m_type, NTI1023410257)) {
                F.line = 48;
                atMost_603981234 = addInt(atMost_603981234, 1);
                }
                else {
                if (isObj(i_603981238[i_603981238_Idx].m_type, NTI1023410259)) {
                F.line = 49;
                atLeast_603981233 = addInt(atLeast_603981233, 1);
                F.line = 49;
                atMost_603981234 = 2147483647;
                F.line = 49;
                break Label1;
                }
                }}
                F.line = 239;
                i_436207905 = addInt(i_436207905, 1);
                if (!(((fun_603981230.declaration.parameters).length == L_436207906))) {
                F.line = 240;
                failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        F.line = 50;
        var colontmp__436207908 = atLeast_603981233;
        F.line = 50;
        var colontmp__436207909 = atMost_603981234;
        F.line = 50;
        result_603981232 = nimCopy(result_603981232, {Field0: colontmp__436207908, Field1: colontmp__436207909}, NTI603980537);
        break BeforeRet;
      } while (false);
      framePtr = F.prev;

      return result_603981232;

    }
    
function HEX3Aanonymous_603981277(self_603981278, self_603981278_Idx, args_603981279, token_603981280) {
      var result_603981281 = null;

      var F = {procname: "newFunction.:anonymous", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
      framePtr = F;
      BeforeRet: do {
        F.line = 52;
        var environment_603981282 = [newEnv_1056964626(closure_603981227)];
        F.line = 53;
        var parameters_603981283 = nimCopy(null, fun_603981230.declaration.parameters, NTI1023410236);
        Label1: do {
          F.line = 54;
          var i_603981291 = 0;
          F.line = 117;
          var colontmp__436207915 = 0;
          F.line = 54;
          colontmp__436207915 = (parameters_603981283).length;
          F.line = 119;
          var i_436207916 = 0;
          Label2: do {
            F.line = 120;
              Label3: while (true) {
              if (!(i_436207916 < colontmp__436207915)) break Label3;
                F.line = 54;
                i_603981291 = i_436207916;
                if (isObj(parameters_603981283[chckIndx(i_603981291, 0, (parameters_603981283).length - 1)].m_type, NTI1023410257)) {
                if ((subInt((args_603981279).length, 1) < i_603981291)) {
                F.line = 57;
                define_1056964628(environment_603981282, 0, parameters_603981283[chckIndx(i_603981291, 0, (parameters_603981283).length - 1)].paramName.value, eval_603981191(self_603981278, self_603981278_Idx, parameters_603981283[chckIndx(i_603981291, 0, (parameters_603981283).length - 1)].default));
                }
                else {
                  F.line = 59;
                define_1056964628(environment_603981282, 0, parameters_603981283[chckIndx(i_603981291, 0, (parameters_603981283).length - 1)].paramName.value, args_603981279[chckIndx(i_603981291, 0, (args_603981279).length - 1)]);
                }
                
                }
                else {
                if (isObj(parameters_603981283[chckIndx(i_603981291, 0, (parameters_603981283).length - 1)].m_type, NTI1023410259)) {
                F.line = 61;
                var list_603981307 = [];
                Label4: do {
                  F.line = 62;
                  var j_603981315 = 0;
                  F.line = 117;
                  var colontmp__436207912 = 0;
                  F.line = 62;
                  colontmp__436207912 = (args_603981279).length;
                  F.line = 119;
                  var i_436207913 = i_603981291;
                  Label5: do {
                    F.line = 120;
                      Label6: while (true) {
                      if (!(i_436207913 < colontmp__436207912)) break Label6;
                        F.line = 62;
                        j_603981315 = i_436207913;
                        F.line = 62;
                        list_603981307.push(args_603981279[chckIndx(j_603981315, 0, (args_603981279).length - 1)]);;
                        F.line = 122;
                        i_436207913 = addInt(i_436207913, 1);
                      }
                  } while (false);
                } while (false);
                F.line = 63;
                define_1056964628(environment_603981282, 0, parameters_603981283[chckIndx(i_603981291, 0, (parameters_603981283).length - 1)].paramName.value, newList_1040187507(list_603981307));
                }
                else {
                  F.line = 65;
                define_1056964628(environment_603981282, 0, parameters_603981283[chckIndx(i_603981291, 0, (parameters_603981283).length - 1)].paramName.value, args_603981279[chckIndx(i_603981291, 0, (args_603981279).length - 1)]);
                }
                }
                F.line = 122;
                i_436207916 = addInt(i_436207916, 1);
              }
          } while (false);
        } while (false);
        F.line = 66;
++excHandler;
        try {
        F.line = 67;
        executeBlock_603981184(self_603981278, self_603981278_Idx, declaration_603981226.body, environment_603981282[0]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        framePtr = F;
        if (lastJSError && (isObj(lastJSError.m_type, NTI1073741830))) {
        F.line = 69;
        var rx_603981320 = getCurrentException();
        F.line = 69;
        result_603981281 = rx_603981320.value;
        break BeforeRet;
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        framePtr = F;
        }
        if (isInitFunc_603981228) {
        F.line = 70;
        result_603981281 = getAt_1056964638(fun_603981230, "closure", 0, makeNimstrLit("self"));
        break BeforeRet;
        }
        
        F.line = 71;
        result_603981281 = newNull_1040187569();
        break BeforeRet;
      } while (false);
      framePtr = F.prev;

      return result_603981281;

    }

  var result_603981229 = null;

  var F = {procname: "interpreter.newFunction", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 38;
    var fun_603981230 = {m_type: NTI1090519070, name: [], isInitFunc: false, declaration: null, closure: null, call: null, arity: null};
    F.line = 39;
    fun_603981230.name = nimCopy(null, name_603981225, NTI33554439);
    F.line = 40;
    fun_603981230.isInitFunc = isInitFunc_603981228;
    F.line = 41;
    fun_603981230.declaration = declaration_603981226;
    F.line = 42;
    fun_603981230.closure = closure_603981227;
    F.line = 43;
    fun_603981230.arity = HEX3Aanonymous_603981231;
    F.line = 51;
    fun_603981230.call = HEX3Aanonymous_603981277;
    F.line = 72;
    result_603981229 = fun_603981230;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603981229;

}

function bind_603981764(self_603981765, instance_603981766) {
  var result_603981767 = null;

  var F = {procname: "interpreter.bind", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 80;
    var env_603981768 = [newEnv_1056964626(self_603981765.closure)];
    F.line = 81;
    define_1056964628(env_603981768, 0, makeNimstrLit("self"), instance_603981766);
    F.line = 82;
    result_603981767 = newFunction_603981224(self_603981765.name, self_603981765.declaration, env_603981768[0], self_603981765.isInitFunc);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603981767;

}

function get_603981995(ci_603981996, name_603981997, i_603981998, i_603981998_Idx) {
    var Temporary1;

  var result_603981999 = null;

  var F = {procname: "interpreter.get", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (hasKey_603982040(ci_603981996.fields, name_603981997.value)) {
    F.line = 105;
    result_603981999 = (Temporary1 = HEX5BHEX5D_603982330(ci_603981996.fields, name_603981997.value), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
    }
    
    F.line = 106;
    var m_603982400 = findMethod_603981339(ci_603981996.class, name_603981997.value);
    if (!((m_603982400 == null))) {
    F.line = 107;
    result_603981999 = bind_603981764(m_603982400, ci_603981996);
    break BeforeRet;
    }
    
    F.line = 108;
    error_1006633457(name_603981997, makeNimstrLit("RuntimeError"), (makeNimstrLit("Property \'") || []).concat(name_603981997.value || [],makeNimstrLit("\' is not defined") || []));
  } while (false);
  framePtr = F.prev;

  return result_603981999;

}

function eval_603984367(self_603984368, self_603984368_Idx, expre_603984369) {
  var result_603984370 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 252;
    var obj_603984371 = eval_603981191(self_603984368, self_603984368_Idx, expre_603984369.instance);
    if (isObj(obj_603984371.m_type, NTI1090519087)) {
    F.line = 254;
    result_603984370 = get_603981995(obj_603984371, expre_603984369.name, self_603984368, self_603984368_Idx);
    break BeforeRet;
    }
    else {
    if (isObj(obj_603984371.m_type, NTI1090519071)) {
    F.line = 256;
    result_603984370 = get_603981995(obj_603984371.cinstance, expre_603984369.name, self_603984368, self_603984368_Idx);
    break BeforeRet;
    }
    }
    F.line = 258;
    error_1006633457(expre_603984369.name, makeNimstrLit("RuntimeError"), makeNimstrLit("Only instances have properties"));
  } while (false);
  framePtr = F.prev;

  return result_603984370;

}

function eval_603984384(self_603984368, self_603984368_Idx, expre_603984369) {
  var result_603984385 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 251;
    result_603984385 = eval_603984367(self_603984368, self_603984368_Idx, expre_603984369);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984385;

}

function mustRehash_603982621(t_603982623) {
  var result_603982624 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_603982623.counter < (t_603982623.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_603982624 = ((mulInt((t_603982623.data).length, 2) < mulInt(t_603982623.counter, 3)) || (subInt((t_603982623.data).length, t_603982623.counter) < 4));
  framePtr = F.prev;

  return result_603982624;

}

function rawInsert_603983070(t_603983074, data_603983075, data_603983075_Idx, key_603983076, val_603983077, hc_603983078, h_603983079) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_603983075[data_603983075_Idx][chckIndx(h_603983079, 0, (data_603983075[data_603983075_Idx]).length - 1)].Field1 = nimCopy(null, key_603983076, NTI33554439);
    F.line = 23;
    data_603983075[data_603983075_Idx][chckIndx(h_603983079, 0, (data_603983075[data_603983075_Idx]).length - 1)].Field2 = val_603983077;
    F.line = 24;
    data_603983075[data_603983075_Idx][chckIndx(h_603983079, 0, (data_603983075[data_603983075_Idx]).length - 1)].Field0 = hc_603983078;
  framePtr = F.prev;

  
}

function enlarge_603982776(t_603982779) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 249;
    var n_603982782 = [];
    F.line = 250;
    n_603982782 = new Array(chckRange(mulInt((t_603982779.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_603982779.data).length, 2), 0, 2147483647) ; ++i) { n_603982782[i] = {Field0: 0, Field1: [], Field2: null}; }    F.line = 251;
    var Temporary1 = t_603982779.data; t_603982779.data = n_603982782; n_603982782 = Temporary1;    Label2: do {
      F.line = 252;
      var i_603982846 = 0;
      F.line = 43;
      var colontmp__436207924 = 0;
      F.line = 252;
      colontmp__436207924 = (n_603982782).length - 1;
      F.line = 65;
      var res_436207925 = 0;
      Label3: do {
        F.line = 66;
          Label4: while (true) {
          if (!(res_436207925 <= colontmp__436207924)) break Label4;
            F.line = 252;
            i_603982846 = res_436207925;
            F.line = 253;
            var eh_603982900 = n_603982782[chckIndx(i_603982846, 0, (n_603982782).length - 1)].Field0;
            if (isFilled_637534239(eh_603982900)) {
            F.line = 255;
            var j_603982904 = (eh_603982900 & (t_603982779.data).length - 1);
            Label5: do {
              F.line = 256;
                Label6: while (true) {
                if (!isFilled_637534239(t_603982779.data[chckIndx(j_603982904, 0, (t_603982779.data).length - 1)].Field0)) break Label6;
                  F.line = 257;
                  j_603982904 = nextTry_637534242(j_603982904, (t_603982779.data).length - 1);
                }
            } while (false);
            F.line = 259;
            rawInsert_603983070(t_603982779, t_603982779, "data", n_603982782[chckIndx(i_603982846, 0, (n_603982782).length - 1)].Field1, n_603982782[chckIndx(i_603982846, 0, (n_603982782).length - 1)].Field2, eh_603982900, j_603982904);
            }
            
            F.line = 68;
            res_436207925 = addInt(res_436207925, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_603983239(t_603983242, key_603983243, hc_603983244) {
  var result_603983245 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_603983242.data).length == 0)) {
    F.line = 48;
    result_603983245 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_603983296 = (hc_603983244 & (t_603983242.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_603983242.data[chckIndx(h_603983296, 0, (t_603983242.data).length - 1)].Field0)) break Label2;
          if (((t_603983242.data[chckIndx(h_603983296, 0, (t_603983242.data).length - 1)].Field0 == hc_603983244) && eqStrings(t_603983242.data[chckIndx(h_603983296, 0, (t_603983242.data).length - 1)].Field1, key_603983243))) {
          F.line = 56;
          result_603983245 = h_603983296;
          break BeforeRet;
          }
          
          F.line = 57;
          h_603983296 = nextTry_637534242(h_603983296, (t_603983242.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_603983245 = subInt(-1, h_603983296);
  } while (false);
  framePtr = F.prev;

  return result_603983245;

}

function HEX5BHEX5DHEX3D_603982448(t_603982451, key_603982452, val_603982453) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_603982451.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym27_603982502 = slotsNeeded_637534250(32);
    F.line = 167;
    t_603982451.counter = 0;
    F.line = 168;
    t_603982451.data = new Array(chckRange(correctSizeHEX60gensym27_603982502, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_603982502, 0, 2147483647) ; ++i) { t_603982451.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    F.line = 57;
    var hc_603982507 = [0];
    F.line = 58;
    var index_603982514 = rawGet_603982047(t_603982451, key_603982452, hc_603982507, 0);
    if ((0 <= index_603982514)) {
    F.line = 59;
    t_603982451.data[chckIndx(index_603982514, 0, (t_603982451.data).length - 1)].Field2 = val_603982453;
    }
    else {
      if (((t_603982451.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym30_603982616 = slotsNeeded_637534250(32);
      F.line = 167;
      t_603982451.counter = 0;
      F.line = 168;
      t_603982451.data = new Array(chckRange(correctSizeHEX60gensym30_603982616, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym30_603982616, 0, 2147483647) ; ++i) { t_603982451.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_603982621(t_603982451)) {
      F.line = 49;
      enlarge_603982776(t_603982451);
      F.line = 50;
      index_603982514 = rawGetKnownHC_603983239(t_603982451, key_603982452, hc_603982507[0]);
      }
      
      F.line = 51;
      index_603982514 = subInt(-1, index_603982514);
      F.line = 52;
      rawInsert_603983070(t_603982451, t_603982451, "data", key_603982452, val_603982453, hc_603982507[0], index_603982514);
      F.line = 60;
      t_603982451.counter = addInt(t_603982451.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function set_603982404(ci_603982405, name_603982406, value_603982407) {
  var F = {procname: "interpreter.set", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 110;
    HEX5BHEX5DHEX3D_603982448(ci_603982405.fields, name_603982406.value, value_603982407);
  framePtr = F.prev;

  
}

function eval_603984386(self_603984387, self_603984387_Idx, expre_603984388) {
  var result_603984389 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 262;
    var instance_603984390 = eval_603981191(self_603984387, self_603984387_Idx, expre_603984388.instance);
    F.line = 263;
    var value_603984391 = eval_603981191(self_603984387, self_603984387_Idx, expre_603984388.value);
    if (isObj(instance_603984390.m_type, NTI1090519087)) {
    F.line = 265;
    set_603982404(instance_603984390, expre_603984388.name, value_603984391);
    }
    else {
      F.line = 267;
    error_1006633457(expre_603984388.name, makeNimstrLit("RuntimeError"), makeNimstrLit("Only instances have fields"));
    }
    
    F.line = 268;
    result_603984389 = value_603984391;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984389;

}

function eval_603984398(self_603984387, self_603984387_Idx, expre_603984388) {
  var result_603984399 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 261;
    result_603984399 = eval_603984386(self_603984387, self_603984387_Idx, expre_603984388);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984399;

}

function eval_603984400(self_603984401, self_603984401_Idx, expre_603984402) {
  var result_603984403 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 271;
    result_603984403 = lookUpVariable_603983490(self_603984401, self_603984401_Idx, expre_603984402.keyword, expre_603984402);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984403;

}

function eval_603984404(self_603984401, self_603984401_Idx, expre_603984402) {
  var result_603984405 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 271;
    result_603984405 = eval_603984400(self_603984401, self_603984401_Idx, expre_603984402);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984405;

}

function eval_603984406(self_603984407, self_603984407_Idx, expre_603984408) {
    var Temporary1;

  var result_603984409 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 275;
    var distance_603984468 = (Temporary1 = HEX5BHEX5D_603984099(self_603984407[self_603984407_Idx].locals, expre_603984408), Temporary1)[0][Temporary1[1]];
    F.line = 276;
    var superclass_603984469 = getAt_1056964638(self_603984407[self_603984407_Idx], "env", distance_603984468, makeNimstrLit("super"));
    F.line = 277;
    var obj_603984470 = getAt_1056964638(self_603984407[self_603984407_Idx], "env", subInt(distance_603984468, 1), makeNimstrLit("self"));
    F.line = 278;
    var m_603984471 = findMethod_603981339(superclass_603984469, expre_603984408.classMethod.value);
    if ((m_603984471 == null)) {
    F.line = 281;
    error_1006633457(expre_603984408.classMethod, makeNimstrLit("RuntimeError"), (makeNimstrLit("\'") || []).concat(expre_603984408.classMethod.value || [],makeNimstrLit("\' is not defined") || []));
    }
    
    F.line = 282;
    result_603984409 = bind_603981764(m_603984471, obj_603984470);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984409;

}

function eval_603984475(self_603984407, self_603984407_Idx, expre_603984408) {
  var result_603984476 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 274;
    result_603984476 = eval_603984406(self_603984407, self_603984407_Idx, expre_603984408);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984476;

}

function eval_603984477(self_603984478, self_603984478_Idx, expre_603984479) {
  var result_603984480 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 286;
    var values_603984481 = [];
    Label1: do {
      F.line = 287;
      var value_603984485 = null;
      var value_603984485_Idx = 0;
      F.line = 235;
      var i_436207929 = 0;
      F.line = 236;
      var L_436207930 = (expre_603984479.values).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207929 < L_436207930)) break Label3;
            F.line = 287;
            value_603984485 = expre_603984479.values; value_603984485_Idx = chckIndx(i_436207929, 0, (expre_603984479.values).length - 1);
            F.line = 287;
            values_603984481.push(eval_603981191(self_603984478, self_603984478_Idx, value_603984485[value_603984485_Idx]));;
            F.line = 239;
            i_436207929 = addInt(i_436207929, 1);
            if (!(((expre_603984479.values).length == L_436207930))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 289;
    result_603984480 = newList_1040187507(values_603984481);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984480;

}

function eval_603984490(self_603984478, self_603984478_Idx, expre_603984479) {
  var result_603984491 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 285;
    result_603984491 = eval_603984477(self_603984478, self_603984478_Idx, expre_603984479);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984491;

}

function newMap_1040187537(map_1040187540) {
  var result_1040187541 = null;

  var F = {procname: "slaptype.newMap", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/slaptype.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 44;
    result_1040187541 = {map: nimCopy(null, map_1040187540, NTI1040187418), m_type: NTI1040187410};
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1040187541;

}

function eval_603984492(self_603984493, self_603984493_Idx, expre_603984494) {
  var result_603984495 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 293;
    var map_603984498 = [({data: [], counter: 0})];
    Label1: do {
      F.line = 294;
      var i_603984506 = 0;
      F.line = 117;
      var colontmp__436207933 = 0;
      F.line = 294;
      colontmp__436207933 = (expre_603984494.keys).length;
      F.line = 119;
      var i_436207934 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436207934 < colontmp__436207933)) break Label3;
            F.line = 294;
            i_603984506 = i_436207934;
            F.line = 294;
            HEX5BHEX5DHEX3D_1056966659(map_603984498[0], eval_603981191(self_603984493, self_603984493_Idx, expre_603984494.keys[chckIndx(i_603984506, 0, (expre_603984494.keys).length - 1)]), eval_603981191(self_603984493, self_603984493_Idx, expre_603984494.values[chckIndx(i_603984506, 0, (expre_603984494.values).length - 1)]));
            F.line = 122;
            i_436207934 = addInt(i_436207934, 1);
          }
      } while (false);
    } while (false);
    F.line = 296;
    result_603984495 = newMap_1040187537(map_603984498[0]);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984495;

}

function eval_603984553(self_603984493, self_603984493_Idx, expre_603984494) {
  var result_603984554 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 292;
    result_603984554 = eval_603984492(self_603984493, self_603984493_Idx, expre_603984494);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984554;

}

function plus_603983497(self_603983498, self_603983498_Idx, left_603983499, right_603983500, expre_603983501) {
  var result_603987243 = null;

  var F = {procname: "interpreter.plus", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((isObj(left_603983499.m_type, NTI1040187406) && isObj(right_603983500.m_type, NTI1040187406))) {
    F.line = 553;
    result_603987243 = newFloat_1040187465((left_603983499.value + right_603983500.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983499.m_type, NTI1040187406) && isObj(right_603983500.m_type, NTI1040187405))) {
    F.line = 555;
    result_603987243 = newFloat_1040187465((left_603983499.value + right_603983500.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983499.m_type, NTI1040187406) && isObj(right_603983500.m_type, NTI1040187404))) {
    F.line = 557;
    result_603987243 = newString_1040187423((HEX24_33557369(left_603983499.value) || []).concat(right_603983500.value || []));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983499.m_type, NTI1040187405) && isObj(right_603983500.m_type, NTI1040187406))) {
    F.line = 559;
    result_603987243 = newFloat_1040187465((left_603983499.value + right_603983500.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983499.m_type, NTI1040187405) && isObj(right_603983500.m_type, NTI1040187405))) {
    F.line = 561;
    result_603987243 = newInt_1040187444(addInt(left_603983499.value, right_603983500.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983499.m_type, NTI1040187405) && isObj(right_603983500.m_type, NTI1040187404))) {
    F.line = 563;
    result_603987243 = newString_1040187423((HEX24_318767107(left_603983499.value) || []).concat(right_603983500.value || []));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983499.m_type, NTI1040187404) && isObj(right_603983500.m_type, NTI1040187404))) {
    F.line = 565;
    result_603987243 = newString_1040187423((left_603983499.value || []).concat(right_603983500.value || []));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983499.m_type, NTI1040187404) && isObj(right_603983500.m_type, NTI1040187405))) {
    F.line = 567;
    result_603987243 = newString_1040187423((left_603983499.value || []).concat(HEX24_318767107(right_603983500.value) || []));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983499.m_type, NTI1040187404) && isObj(right_603983500.m_type, NTI1040187406))) {
    F.line = 569;
    result_603987243 = newString_1040187423((left_603983499.value || []).concat(HEX24_33557369(right_603983500.value) || []));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983499.m_type, NTI1040187405) && isObj(right_603983500.m_type, NTI1040187404))) {
    F.line = 571;
    result_603987243 = newString_1040187423((HEX24_318767107(left_603983499.value) || []).concat(right_603983500.value || []));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983499.m_type, NTI1040187406) && isObj(right_603983500.m_type, NTI1040187404))) {
    F.line = 573;
    result_603987243 = newString_1040187423((HEX24_33557369(left_603983499.value) || []).concat(right_603983500.value || []));
    break BeforeRet;
    }
    else {
      F.line = 575;
    error_1006633457(expre_603983501.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("All operands must be either string or int and float"));
    }
    }}}}}}}}}}
  } while (false);
  framePtr = F.prev;

  return result_603987243;

}

function minus_603983502(self_603983503, self_603983503_Idx, left_603983504, right_603983505, expre_603983506) {
  var result_603987390 = null;

  var F = {procname: "interpreter.minus", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((isObj(left_603983504.m_type, NTI1040187406) && isObj(right_603983505.m_type, NTI1040187406))) {
    F.line = 579;
    result_603987390 = newFloat_1040187465((left_603983504.value - right_603983505.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983504.m_type, NTI1040187406) && isObj(right_603983505.m_type, NTI1040187405))) {
    F.line = 581;
    result_603987390 = newFloat_1040187465((left_603983504.value - right_603983505.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983504.m_type, NTI1040187405) && isObj(right_603983505.m_type, NTI1040187406))) {
    F.line = 583;
    result_603987390 = newFloat_1040187465((left_603983504.value - right_603983505.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983504.m_type, NTI1040187405) && isObj(right_603983505.m_type, NTI1040187405))) {
    F.line = 585;
    result_603987390 = newInt_1040187444(subInt(left_603983504.value, right_603983505.value));
    break BeforeRet;
    }
    else {
      F.line = 587;
    error_1006633457(expre_603983506.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("All operands must be either string or int and float"));
    }
    }}}
  } while (false);
  framePtr = F.prev;

  return result_603987390;

}

function slash_603983507(self_603983508, self_603983508_Idx, left_603983509, right_603983510, expre_603983511) {
  var result_603987444 = null;

  var F = {procname: "interpreter.slash", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((isObj(left_603983509.m_type, NTI1040187406) && isObj(right_603983510.m_type, NTI1040187406))) {
    if ((right_603983510.value == 0.0)) {
    F.line = 592;
    error_1006633457(expre_603983511.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("Cannot divide by 0"));
    }
    else {
      F.line = 594;
      result_603987444 = newFloat_1040187465((left_603983509.value / right_603983510.value));
      break BeforeRet;
    }
    
    }
    else {
    if ((isObj(left_603983509.m_type, NTI1040187406) && isObj(right_603983510.m_type, NTI1040187405))) {
    if ((right_603983510.value == 0)) {
    F.line = 597;
    error_1006633457(expre_603983511.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("Cannot divide by 0"));
    }
    else {
      F.line = 599;
      result_603987444 = newFloat_1040187465((left_603983509.value / right_603983510.value));
      break BeforeRet;
    }
    
    }
    else {
    if ((isObj(left_603983509.m_type, NTI1040187405) && isObj(right_603983510.m_type, NTI1040187406))) {
    if ((right_603983510.value == 0.0)) {
    F.line = 602;
    error_1006633457(expre_603983511.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("Cannot divide by 0"));
    }
    else {
      F.line = 604;
      result_603987444 = newFloat_1040187465((left_603983509.value / right_603983510.value));
      break BeforeRet;
    }
    
    }
    else {
    if ((isObj(left_603983509.m_type, NTI1040187405) && isObj(right_603983510.m_type, NTI1040187405))) {
    if ((right_603983510.value == 0)) {
    F.line = 607;
    error_1006633457(expre_603983511.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("Cannot divide by 0"));
    }
    else {
      F.line = 609;
      result_603987444 = newFloat_1040187465((left_603983509.value / right_603983510.value));
      break BeforeRet;
    }
    
    }
    else {
      F.line = 611;
    error_1006633457(expre_603983511.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("All operands must be either int or float"));
    }
    }}}
  } while (false);
  framePtr = F.prev;

  return result_603987444;

}

function star_603983512(self_603983513, self_603983513_Idx, left_603983514, right_603983515, expre_603983516) {
  var result_603987498 = null;

  var F = {procname: "interpreter.star", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((isObj(left_603983514.m_type, NTI1040187406) && isObj(right_603983515.m_type, NTI1040187406))) {
    F.line = 615;
    result_603987498 = newFloat_1040187465((left_603983514.value * right_603983515.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983514.m_type, NTI1040187406) && isObj(right_603983515.m_type, NTI1040187405))) {
    F.line = 617;
    result_603987498 = newFloat_1040187465((left_603983514.value * right_603983515.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983514.m_type, NTI1040187405) && isObj(right_603983515.m_type, NTI1040187406))) {
    F.line = 619;
    result_603987498 = newFloat_1040187465((left_603983514.value * right_603983515.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983514.m_type, NTI1040187405) && isObj(right_603983515.m_type, NTI1040187405))) {
    F.line = 621;
    result_603987498 = newInt_1040187444(mulInt(left_603983514.value, right_603983515.value));
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983514.m_type, NTI1040187404) && isObj(right_603983515.m_type, NTI1040187405))) {
    F.line = 623;
    var str_603987559 = [];
    Label1: do {
      F.line = 624;
      var i_603987564 = 0;
      F.line = 117;
      var colontmp__436207937 = 0;
      F.line = 624;
      colontmp__436207937 = right_603983515.value;
      F.line = 119;
      var i_436207938 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436207938 < colontmp__436207937)) break Label3;
            F.line = 624;
            i_603987564 = i_436207938;
            F.line = 624;
            str_603987559.push.apply(str_603987559, left_603983514.value);;
            F.line = 122;
            i_436207938 = addInt(i_436207938, 1);
          }
      } while (false);
    } while (false);
    F.line = 625;
    result_603987498 = newString_1040187423(str_603987559);
    break BeforeRet;
    }
    else {
      F.line = 627;
    error_1006633457(expre_603983516.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("All operands must be either int or float"));
    }
    }}}}
  } while (false);
  framePtr = F.prev;

  return result_603987498;

}

function doesEqual_603983486(self_603983487, self_603983487_Idx, left_603983488, right_603983489) {
  var result_603987147 = false;

  var F = {procname: "interpreter.doesEqual", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((isObj(left_603983488.m_type, NTI1040187426) && isObj(right_603983489.m_type, NTI1040187426))) {
    F.line = 541;
    result_603987147 = true;
    break BeforeRet;
    }
    else {
    if (isObj(left_603983488.m_type, NTI1040187426)) {
    F.line = 542;
    result_603987147 = false;
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983488.m_type, NTI1040187405) && isObj(right_603983489.m_type, NTI1040187405))) {
    F.line = 543;
    result_603987147 = (left_603983488.value == right_603983489.value);
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983488.m_type, NTI1040187405) && isObj(right_603983489.m_type, NTI1040187406))) {
    F.line = 544;
    result_603987147 = (left_603983488.value == right_603983489.value);
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983488.m_type, NTI1040187406) && isObj(right_603983489.m_type, NTI1040187406))) {
    F.line = 545;
    result_603987147 = (left_603983488.value == right_603983489.value);
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983488.m_type, NTI1040187406) && isObj(right_603983489.m_type, NTI1040187405))) {
    F.line = 546;
    result_603987147 = (left_603983488.value == right_603983489.value);
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983488.m_type, NTI1040187404) && isObj(right_603983489.m_type, NTI1040187404))) {
    F.line = 547;
    result_603987147 = eqStrings(left_603983488.value, right_603983489.value);
    break BeforeRet;
    }
    else {
    if ((isObj(left_603983488.m_type, NTI1040187407) && isObj(right_603983489.m_type, NTI1040187407))) {
    F.line = 548;
    result_603987147 = (left_603983488.value == right_603983489.value);
    break BeforeRet;
    }
    else {
      F.line = 549;
      result_603987147 = false;
      break BeforeRet;
    }
    }}}}}}}
  } while (false);
  framePtr = F.prev;

  return result_603987147;

}

function eval_603984555(self_603984556, self_603984556_Idx, expre_603984557) {
    var Temporary1;

  var result_603984558 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 300;
    var left_603984559 = eval_603981191(self_603984556, self_603984556_Idx, expre_603984557.left);
    F.line = 301;
    var right_603984560 = eval_603981191(self_603984556, self_603984556_Idx, expre_603984557.right);
    F.line = 302;
    var fun_603984566 = null;
    F.line = 304;
    switch (expre_603984557.operator.kind) {
    case 12:
      F.line = 306;
      result_603984558 = plus_603983497(self_603984556, self_603984556_Idx, left_603984559, right_603984560, expre_603984557);
      break BeforeRet;
      break;
    case 15:
      F.line = 308;
      result_603984558 = minus_603983502(self_603984556, self_603984556_Idx, left_603984559, right_603984560, expre_603984557);
      break BeforeRet;
      break;
    case 22:
      F.line = 310;
      result_603984558 = slash_603983507(self_603984556, self_603984556_Idx, left_603984559, right_603984560, expre_603984557);
      break BeforeRet;
      break;
    case 19:
      F.line = 312;
      result_603984558 = star_603983512(self_603984556, self_603984556_Idx, left_603984559, right_603984560, expre_603984557);
      break BeforeRet;
      break;
    case 21:
      if ((isObj(left_603984559.m_type, NTI1040187405) && isObj(right_603984560.m_type, NTI1040187405))) {
      F.line = 315;
      result_603984558 = newInt_1040187444(modInt(left_603984559.value, right_603984560.value));
      break BeforeRet;
      }
      else {
        F.line = 317;
      error_1006633457(expre_603984557.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("All operands must be int"));
      }
      
      break;
    case 35:
      if ((isObj(left_603984559.m_type, NTI1040187406) && isObj(right_603984560.m_type, NTI1040187406))) {
      F.line = 321;
      result_603984558 = newBool_1040187486((right_603984560.value < left_603984559.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187406) && isObj(right_603984560.m_type, NTI1040187405))) {
      F.line = 323;
      result_603984558 = newBool_1040187486((right_603984560.value < left_603984559.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187405) && isObj(right_603984560.m_type, NTI1040187406))) {
      F.line = 325;
      result_603984558 = newBool_1040187486((right_603984560.value < left_603984559.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187405) && isObj(right_603984560.m_type, NTI1040187405))) {
      F.line = 327;
      result_603984558 = newBool_1040187486((right_603984560.value < left_603984559.value));
      break BeforeRet;
      }
      else {
        F.line = 329;
      error_1006633457(expre_603984557.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("All operands must be either int or float"));
      }
      }}}
      break;
    case 34:
      if ((isObj(left_603984559.m_type, NTI1040187406) && isObj(right_603984560.m_type, NTI1040187406))) {
      F.line = 332;
      result_603984558 = newBool_1040187486((right_603984560.value <= left_603984559.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187406) && isObj(right_603984560.m_type, NTI1040187405))) {
      F.line = 334;
      result_603984558 = newBool_1040187486((right_603984560.value <= left_603984559.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187405) && isObj(right_603984560.m_type, NTI1040187406))) {
      F.line = 336;
      result_603984558 = newBool_1040187486((right_603984560.value <= left_603984559.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187405) && isObj(right_603984560.m_type, NTI1040187405))) {
      F.line = 338;
      result_603984558 = newBool_1040187486((right_603984560.value <= left_603984559.value));
      break BeforeRet;
      }
      else {
        F.line = 340;
      error_1006633457(expre_603984557.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("All operands must be either int or float"));
      }
      }}}
      break;
    case 37:
      if ((isObj(left_603984559.m_type, NTI1040187406) && isObj(right_603984560.m_type, NTI1040187406))) {
      F.line = 343;
      result_603984558 = newBool_1040187486((left_603984559.value < right_603984560.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187406) && isObj(right_603984560.m_type, NTI1040187405))) {
      F.line = 345;
      result_603984558 = newBool_1040187486((left_603984559.value < right_603984560.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187405) && isObj(right_603984560.m_type, NTI1040187406))) {
      F.line = 347;
      result_603984558 = newBool_1040187486((left_603984559.value < right_603984560.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187405) && isObj(right_603984560.m_type, NTI1040187405))) {
      F.line = 349;
      result_603984558 = newBool_1040187486((left_603984559.value < right_603984560.value));
      break BeforeRet;
      }
      else {
        F.line = 351;
      error_1006633457(expre_603984557.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("All operands must be either int or float"));
      }
      }}}
      break;
    case 36:
      if ((isObj(left_603984559.m_type, NTI1040187406) && isObj(right_603984560.m_type, NTI1040187406))) {
      F.line = 354;
      result_603984558 = newBool_1040187486((left_603984559.value <= right_603984560.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187406) && isObj(right_603984560.m_type, NTI1040187405))) {
      F.line = 356;
      result_603984558 = newBool_1040187486((left_603984559.value <= right_603984560.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187405) && isObj(right_603984560.m_type, NTI1040187406))) {
      F.line = 358;
      result_603984558 = newBool_1040187486((left_603984559.value <= right_603984560.value));
      break BeforeRet;
      }
      else {
      if ((isObj(left_603984559.m_type, NTI1040187405) && isObj(right_603984560.m_type, NTI1040187405))) {
      F.line = 360;
      result_603984558 = newBool_1040187486((left_603984559.value <= right_603984560.value));
      break BeforeRet;
      }
      else {
        F.line = 362;
      error_1006633457(expre_603984557.operator, makeNimstrLit("RuntimeError"), makeNimstrLit("All operands must be either int or float"));
      }
      }}}
      break;
    case 38:
      F.line = 363;
      result_603984558 = newBool_1040187486(!(doesEqual_603983486(self_603984556, self_603984556_Idx, left_603984559, right_603984560)));
      break BeforeRet;
      break;
    case 33:
      F.line = 364;
      result_603984558 = newBool_1040187486(doesEqual_603983486(self_603984556, self_603984556_Idx, left_603984559, right_603984560));
      break BeforeRet;
      break;
    case 14:
    case 13:
      F.line = 366;
      fun_603984566 = plus_603983497;
      break;
    case 17:
    case 16:
      F.line = 367;
      fun_603984566 = minus_603983502;
      break;
    case 20:
      F.line = 368;
      fun_603984566 = star_603983512;
      break;
    case 23:
      F.line = 369;
      fun_603984566 = slash_603983507;
      break;
    default: 
      break;
    }
    if (isObj(expre_603984557.left.m_type, NTI1023410225)) {
    F.line = 374;
    var name_603984777 = expre_603984557.left.name;
    if (hasKey_603984033(self_603984556[self_603984556_Idx].locals, expre_603984557.left)) {
    F.line = 376;
    var distance_603984881 = (Temporary1 = HEX5BHEX5D_603984099(self_603984556[self_603984556_Idx].locals, expre_603984557.left), Temporary1)[0][Temporary1[1]];
    F.line = 377;
    var valueBefore_603984882 = getAt_1056964638(self_603984556[self_603984556_Idx], "env", distance_603984881, name_603984777.value);
    F.line = 378;
    assignAt_1056964646(self_603984556[self_603984556_Idx], "env", distance_603984881, name_603984777, fun_603984566(self_603984556, self_603984556_Idx, valueBefore_603984882, right_603984560, expre_603984557));
    }
    else {
      F.line = 380;
      var valueBefore_603984883 = get_1056964632(self_603984556[self_603984556_Idx], "globals", name_603984777);
      F.line = 381;
      assign_1056964642(self_603984556[self_603984556_Idx], "globals", name_603984777, fun_603984566(self_603984556, self_603984556_Idx, valueBefore_603984883, right_603984560, expre_603984557));
    }
    
    }
    else {
      F.line = 383;
      result_603984558 = fun_603984566(self_603984556, self_603984556_Idx, left_603984559, right_603984560, expre_603984557);
      break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_603984558;

}

function eval_603984902(self_603984556, self_603984556_Idx, expre_603984557) {
  var result_603984903 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 299;
    result_603984903 = eval_603984555(self_603984556, self_603984556_Idx, expre_603984557);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984903;

}

function eval_603984908(self_603984909, self_603984909_Idx, statement_603984910) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 390;
    var _ = eval_603981191(self_603984909, self_603984909_Idx, statement_603984910.expression);
  framePtr = F.prev;

  
}

function eval_603984911(self_603984909, self_603984909_Idx, statement_603984910) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 389;
    eval_603984908(self_603984909, self_603984909_Idx, statement_603984910);
  framePtr = F.prev;

  
}

function eval_603984912(self_603984913, self_603984913_Idx, statement_603984914) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 393;
    var value_603984915 = newNull_1040187569();
    if (!((statement_603984914.init == null))) {
    F.line = 394;
    value_603984915 = eval_603981191(self_603984913, self_603984913_Idx, statement_603984914.init);
    }
    
    F.line = 395;
    define_1056964628(self_603984913[self_603984913_Idx], "env", statement_603984914.name.value, value_603984915);
  framePtr = F.prev;

  
}

function eval_603984919(self_603984913, self_603984913_Idx, statement_603984914) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 392;
    eval_603984912(self_603984913, self_603984913_Idx, statement_603984914);
  framePtr = F.prev;

  
}

function eval_603984920(self_603984921, self_603984921_Idx, statement_603984922) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 398;
    var funcName_603984923 = nimCopy(null, statement_603984922.name.value, NTI33554439);
    F.line = 399;
    var function_603984924 = newFunction_603981224(funcName_603984923, statement_603984922.function, self_603984921[self_603984921_Idx].env, false);
    F.line = 400;
    define_1056964628(self_603984921[self_603984921_Idx], "env", funcName_603984923, function_603984924);
  framePtr = F.prev;

  
}

function eval_603984925(self_603984921, self_603984921_Idx, statement_603984922) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 397;
    eval_603984920(self_603984921, self_603984921_Idx, statement_603984922);
  framePtr = F.prev;

  
}

function eval_603984926(self_603984927, self_603984927_Idx, expre_603984928) {
  var result_603984929 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 403;
    result_603984929 = newFunction_603981224([], expre_603984928, self_603984927[self_603984927_Idx].env, false);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984929;

}

function eval_603984930(self_603984927, self_603984927_Idx, expre_603984928) {
  var result_603984931 = null;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 402;
    result_603984931 = eval_603984926(self_603984927, self_603984927_Idx, expre_603984928);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603984931;

}

function eval_603984941(self_603984942, self_603984942_Idx, statement_603984943) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 415;
    executeBlock_603981184(self_603984942, self_603984942_Idx, statement_603984943.statements, newEnv_1056964626(self_603984942[self_603984942_Idx].env));
  framePtr = F.prev;

  
}

function eval_603984944(self_603984942, self_603984942_Idx, statement_603984943) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 414;
    eval_603984941(self_603984942, self_603984942_Idx, statement_603984943);
  framePtr = F.prev;

  
}

function eval_603984945(self_603984946, self_603984946_Idx, statement_603984947) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 418;
    var value_603984948 = null;
    if (!((statement_603984947.value == null))) {
    F.line = 419;
    value_603984948 = eval_603981191(self_603984946, self_603984946_Idx, statement_603984947.value);
    }
    
    F.line = 420;
    raiseException({value: value_603984948, m_type: NTI1073741830, parent: null, name: null, message: [], trace: [], up: null}, "ReturnException:ObjectType");
  framePtr = F.prev;

  
}

function eval_603984961(self_603984946, self_603984946_Idx, statement_603984947) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 417;
    eval_603984945(self_603984946, self_603984946_Idx, statement_603984947);
  framePtr = F.prev;

  
}

function eval_603984962(self_603984963, self_603984963_Idx, statement_603984964) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 423;
++excHandler;
    try {
    Label2: do {
      F.line = 424;
        Label3: while (true) {
        if (!isTruthy_603983483(self_603984963, self_603984963_Idx, eval_603981191(self_603984963, self_603984963_Idx, statement_603984964.condition))) break Label3;
          F.line = 425;
++excHandler;
          try {
          F.line = 426;
          eval_603984907(self_603984963, self_603984963_Idx, statement_603984964.body);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          framePtr = F;
          if (lastJSError && (isObj(lastJSError.m_type, NTI1073741832))) {
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          framePtr = F;
          }
        }
    } while (false);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555122))) {
    F.line = 430;
    error_1006633457(statement_603984964.keyword, makeNimstrLit("RuntimeError"), makeNimstrLit("Over- or underflow"));
    }
    else     if (lastJSError && (isObj(lastJSError.m_type, NTI1073741831))) {
    F.line = 432;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
  } while (false);
  framePtr = F.prev;

  
}

function eval_603984965(self_603984963, self_603984963_Idx, statement_603984964) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 422;
    eval_603984962(self_603984963, self_603984963_Idx, statement_603984964);
  framePtr = F.prev;

  
}

function eval_603984966(self_603984967, self_603984967_Idx, statement_603984968) {
      var Temporary4;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 435;
    var done_603984969 = false;
    if (isTruthy_603983483(self_603984967, self_603984967_Idx, eval_603981191(self_603984967, self_603984967_Idx, statement_603984968.condition))) {
    F.line = 437;
    eval_603984907(self_603984967, self_603984967_Idx, statement_603984968.thenBranch);
    F.line = 438;
    done_603984969 = true;
    }
    else {
    if (!(((statement_603984968.elifBranches).length == 0))) {
    Label1: do {
      F.line = 440;
      var each_603984976 = null;
      var each_603984976_Idx = 0;
      F.line = 235;
      var i_436207942 = 0;
      F.line = 236;
      var L_436207943 = (statement_603984968.elifBranches).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207942 < L_436207943)) break Label3;
            F.line = 440;
            each_603984976 = statement_603984968.elifBranches; each_603984976_Idx = chckIndx(i_436207942, 0, (statement_603984968.elifBranches).length - 1);
            if (isTruthy_603983483(self_603984967, self_603984967_Idx, eval_603981191(self_603984967, self_603984967_Idx, each_603984976[each_603984976_Idx].condition))) {
            F.line = 442;
            eval_603984907(self_603984967, self_603984967_Idx, each_603984976[each_603984976_Idx].thenBranch);
            F.line = 443;
            done_603984969 = true;
            F.line = 444;
            break Label1;
            }
            
            F.line = 239;
            i_436207942 = addInt(i_436207942, 1);
            if (!(((statement_603984968.elifBranches).length == L_436207943))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    }
    }
      if (!!((statement_603984968.elseBranch == null))) Temporary4 = false; else {        Temporary4 = (done_603984969 == false);      }    if (Temporary4) {
    F.line = 446;
    eval_603984907(self_603984967, self_603984967_Idx, statement_603984968.elseBranch);
    }
    
  framePtr = F.prev;

  
}

function eval_603984980(self_603984967, self_603984967_Idx, statement_603984968) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 434;
    eval_603984966(self_603984967, self_603984967_Idx, statement_603984968);
  framePtr = F.prev;

  
}

function eval_603984981(self_603984982, self_603984982_Idx, statement_603984983) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 448;
    raiseException({m_type: NTI1073741831, parent: null, name: null, message: [], trace: [], up: null}, "BreakException:ObjectType");
  framePtr = F.prev;

  
}

function eval_603985002(self_603984982, self_603984982_Idx, statement_603984983) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 448;
    eval_603984981(self_603984982, self_603984982_Idx, statement_603984983);
  framePtr = F.prev;

  
}

function eval_603985003(self_603985004, self_603985004_Idx, statement_603985005) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 450;
    raiseException({m_type: NTI1073741832, parent: null, name: null, message: [], trace: [], up: null}, "ContinueException:ObjectType");
  framePtr = F.prev;

  
}

function eval_603985024(self_603985004, self_603985004_Idx, statement_603985005) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 450;
    eval_603985003(self_603985004, self_603985004_Idx, statement_603985005);
  framePtr = F.prev;

  
}

function initTable_603985038(initialSize_603985041) {
  var result_603985042 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym53_603985044 = slotsNeeded_637534250(chckRange(initialSize_603985041, 0, 2147483647));
    F.line = 167;
    result_603985042.counter = 0;
    F.line = 168;
    result_603985042.data = new Array(chckRange(correctSizeHEX60gensym53_603985044, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym53_603985044, 0, 2147483647) ; ++i) { result_603985042.data[i] = {Field0: 0, Field1: [], Field2: null}; }  framePtr = F.prev;

  return result_603985042;

}

function mustRehash_603985268(t_603985270) {
  var result_603985271 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_603985270.counter < (t_603985270.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_603985271 = ((mulInt((t_603985270.data).length, 2) < mulInt(t_603985270.counter, 3)) || (subInt((t_603985270.data).length, t_603985270.counter) < 4));
  framePtr = F.prev;

  return result_603985271;

}

function rawInsert_603985717(t_603985721, data_603985722, data_603985722_Idx, key_603985723, val_603985724, hc_603985725, h_603985726) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_603985722[data_603985722_Idx][chckIndx(h_603985726, 0, (data_603985722[data_603985722_Idx]).length - 1)].Field1 = nimCopy(null, key_603985723, NTI33554439);
    F.line = 23;
    data_603985722[data_603985722_Idx][chckIndx(h_603985726, 0, (data_603985722[data_603985722_Idx]).length - 1)].Field2 = val_603985724;
    F.line = 24;
    data_603985722[data_603985722_Idx][chckIndx(h_603985726, 0, (data_603985722[data_603985722_Idx]).length - 1)].Field0 = hc_603985725;
  framePtr = F.prev;

  
}

function enlarge_603985423(t_603985426) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 249;
    var n_603985429 = [];
    F.line = 250;
    n_603985429 = new Array(chckRange(mulInt((t_603985426.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_603985426.data).length, 2), 0, 2147483647) ; ++i) { n_603985429[i] = {Field0: 0, Field1: [], Field2: null}; }    F.line = 251;
    var Temporary1 = t_603985426.data; t_603985426.data = n_603985429; n_603985429 = Temporary1;    Label2: do {
      F.line = 252;
      var i_603985493 = 0;
      F.line = 43;
      var colontmp__436207955 = 0;
      F.line = 252;
      colontmp__436207955 = (n_603985429).length - 1;
      F.line = 65;
      var res_436207956 = 0;
      Label3: do {
        F.line = 66;
          Label4: while (true) {
          if (!(res_436207956 <= colontmp__436207955)) break Label4;
            F.line = 252;
            i_603985493 = res_436207956;
            F.line = 253;
            var eh_603985547 = n_603985429[chckIndx(i_603985493, 0, (n_603985429).length - 1)].Field0;
            if (isFilled_637534239(eh_603985547)) {
            F.line = 255;
            var j_603985551 = (eh_603985547 & (t_603985426.data).length - 1);
            Label5: do {
              F.line = 256;
                Label6: while (true) {
                if (!isFilled_637534239(t_603985426.data[chckIndx(j_603985551, 0, (t_603985426.data).length - 1)].Field0)) break Label6;
                  F.line = 257;
                  j_603985551 = nextTry_637534242(j_603985551, (t_603985426.data).length - 1);
                }
            } while (false);
            F.line = 259;
            rawInsert_603985717(t_603985426, t_603985426, "data", n_603985429[chckIndx(i_603985493, 0, (n_603985429).length - 1)].Field1, n_603985429[chckIndx(i_603985493, 0, (n_603985429).length - 1)].Field2, eh_603985547, j_603985551);
            }
            
            F.line = 68;
            res_436207956 = addInt(res_436207956, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_603985886(t_603985889, key_603985890, hc_603985891) {
  var result_603985892 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_603985889.data).length == 0)) {
    F.line = 48;
    result_603985892 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_603985943 = (hc_603985891 & (t_603985889.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_603985889.data[chckIndx(h_603985943, 0, (t_603985889.data).length - 1)].Field0)) break Label2;
          if (((t_603985889.data[chckIndx(h_603985943, 0, (t_603985889.data).length - 1)].Field0 == hc_603985891) && eqStrings(t_603985889.data[chckIndx(h_603985943, 0, (t_603985889.data).length - 1)].Field1, key_603985890))) {
          F.line = 56;
          result_603985892 = h_603985943;
          break BeforeRet;
          }
          
          F.line = 57;
          h_603985943 = nextTry_637534242(h_603985943, (t_603985889.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_603985892 = subInt(-1, h_603985943);
  } while (false);
  framePtr = F.prev;

  return result_603985892;

}

function HEX5BHEX5DHEX3D_603985095(t_603985098, key_603985099, val_603985100) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_603985098.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym56_603985149 = slotsNeeded_637534250(32);
    F.line = 167;
    t_603985098.counter = 0;
    F.line = 168;
    t_603985098.data = new Array(chckRange(correctSizeHEX60gensym56_603985149, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_603985149, 0, 2147483647) ; ++i) { t_603985098.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    F.line = 57;
    var hc_603985154 = [0];
    F.line = 58;
    var index_603985161 = rawGet_603981390(t_603985098, key_603985099, hc_603985154, 0);
    if ((0 <= index_603985161)) {
    F.line = 59;
    t_603985098.data[chckIndx(index_603985161, 0, (t_603985098.data).length - 1)].Field2 = val_603985100;
    }
    else {
      if (((t_603985098.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym59_603985263 = slotsNeeded_637534250(32);
      F.line = 167;
      t_603985098.counter = 0;
      F.line = 168;
      t_603985098.data = new Array(chckRange(correctSizeHEX60gensym59_603985263, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_603985263, 0, 2147483647) ; ++i) { t_603985098.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_603985268(t_603985098)) {
      F.line = 49;
      enlarge_603985423(t_603985098);
      F.line = 50;
      index_603985161 = rawGetKnownHC_603985886(t_603985098, key_603985099, hc_603985154[0]);
      }
      
      F.line = 51;
      index_603985161 = subInt(-1, index_603985161);
      F.line = 52;
      rawInsert_603985717(t_603985098, t_603985098, "data", key_603985099, val_603985100, hc_603985154[0], index_603985161);
      F.line = 60;
      t_603985098.counter = addInt(t_603985098.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function initTable_603981772(initialSize_603981775) {
  var result_603981776 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym20_603981778 = slotsNeeded_637534250(chckRange(initialSize_603981775, 0, 2147483647));
    F.line = 167;
    result_603981776.counter = 0;
    F.line = 168;
    result_603981776.data = new Array(chckRange(correctSizeHEX60gensym20_603981778, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_603981778, 0, 2147483647) ; ++i) { result_603981776.data[i] = {Field0: 0, Field1: [], Field2: null}; }  framePtr = F.prev;

  return result_603981776;

}

function newClassInstance_603981769(class_603981770) {
  var result_603981771 = null;

  var F = {procname: "interpreter.newClassInstance", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 85;
    var instance_603981792 = {class: class_603981770, fields: initTable_603981772(32), m_type: NTI1090519087};
    F.line = 86;
    result_603981771 = instance_603981792;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603981771;

}

function getOrDefault_603981901(t_603981904, key_603981905, default_603981906) {
    var Temporary1;

  var result_603981907 = null;

  var F = {procname: "getOrDefault.getOrDefault", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 187;
    var hcHEX60gensym22_603981910 = [0];
    F.line = 188;
    var indexHEX60gensym22_603981917 = rawGet_603981390(t_603981904, key_603981905, hcHEX60gensym22_603981910, 0);
    F.line = 189;
    if ((0 <= indexHEX60gensym22_603981917)) {
    Temporary1 = t_603981904.data[chckIndx(indexHEX60gensym22_603981917, 0, (t_603981904.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_603981906;
    }
    
    result_603981907 = Temporary1;
  framePtr = F.prev;

  return result_603981907;

}

function newClass_603981811(metaclass_603981812, superclass_603981813, name_603981814, methods_603981817, token_603981818) {
    
function HEX3Aanonymous_603981821() {
      var result_603981822 = {Field0: 0, Field1: 0};

      var F = {procname: "newClass.:anonymous", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
      framePtr = F;
      BeforeRet: do {
        F.line = 91;
        var init_603981823 = findMethod_603981339(class_603981820, makeNimstrLit("new"));
        if ((init_603981823 == null)) {
        F.line = 92;
        var colontmp__436207959 = 0;
        F.line = 92;
        var colontmp__436207960 = 0;
        F.line = 92;
        result_603981822 = nimCopy(result_603981822, {Field0: colontmp__436207959, Field1: colontmp__436207960}, NTI603980847);
        break BeforeRet;
        }
        else {
          F.line = 93;
          result_603981822 = nimCopy(result_603981822, init_603981823.arity(), NTI603980847);
          break BeforeRet;
        }
        
      } while (false);
      framePtr = F.prev;

      return result_603981822;

    }
    
function HEX3Aanonymous_603981829(self_603981830, self_603981830_Idx, args_603981831, token_603981832) {
      var result_603981833 = null;

      var F = {procname: "newClass.:anonymous", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
      framePtr = F;
      BeforeRet: do {
        F.line = 95;
        var instance_603981834 = newClassInstance_603981769(class_603981820);
        F.line = 96;
        var init_603981971 = getOrDefault_603981901(class_603981820.methods, makeNimstrLit("new"), null);
        if (!((init_603981971 == null))) {
        F.line = 97;
        var _ = bind_603981764(init_603981971, instance_603981834).call(self_603981830, self_603981830_Idx, args_603981831, token_603981832);
        }
        
        F.line = 98;
        result_603981833 = instance_603981834;
        break BeforeRet;
      } while (false);
      framePtr = F.prev;

      return result_603981833;

    }

  var result_603981819 = null;

  var F = {procname: "interpreter.newClass", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 89;
    var class_603981820 = {name: nimCopy(null, name_603981814, NTI33554439), m_type: NTI1090519071, methods: ({data: [], counter: 0}), cinstance: null, superclass: null, call: null, arity: null};
    F.line = 90;
    class_603981820.arity = HEX3Aanonymous_603981821;
    F.line = 94;
    class_603981820.call = HEX3Aanonymous_603981829;
    F.line = 99;
    class_603981820.methods = nimCopy(class_603981820.methods, methods_603981817, NTI1090519079);
    F.line = 100;
    class_603981820.cinstance = newClassInstance_603981769(metaclass_603981812);
    F.line = 101;
    class_603981820.superclass = superclass_603981813;
    F.line = 102;
    result_603981819 = class_603981820;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603981819;

}

function eval_603985025(self_603985026, self_603985026_Idx, statement_603985027) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 453;
    var superclass_603985028 = null;
    if (!((statement_603985027.superclass == null))) {
    F.line = 455;
    superclass_603985028 = eval_603983568(self_603985026, self_603985026_Idx, statement_603985027.superclass);
    if (!(isObj(superclass_603985028.m_type, NTI1090519071))) {
    F.line = 457;
    error_1006633457(statement_603985027.superclass.name, makeNimstrLit("RuntimeError"), makeNimstrLit("Superclass must be a class"));
    }
    
    }
    
    F.line = 459;
    define_1056964628(self_603985026[self_603985026_Idx], "env", statement_603985027.name.value, newNull_1040187569());
    F.line = 460;
    var classMethods_603985049 = [initTable_603985038(32)];
    Label1: do {
      F.line = 461;
      var m_603985053 = null;
      var m_603985053_Idx = 0;
      F.line = 235;
      var i_436207946 = 0;
      F.line = 236;
      var L_436207947 = (statement_603985027.classMethods).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436207946 < L_436207947)) break Label3;
            F.line = 461;
            m_603985053 = statement_603985027.classMethods; m_603985053_Idx = chckIndx(i_436207946, 0, (statement_603985027.classMethods).length - 1);
            F.line = 462;
            var fun_603985054 = newFunction_603981224(m_603985053[m_603985053_Idx].name.value, m_603985053[m_603985053_Idx].function, self_603985026[self_603985026_Idx].env, false);
            F.line = 461;
            HEX5BHEX5DHEX3D_603985095(classMethods_603985049[0], m_603985053[m_603985053_Idx].name.value, fun_603985054);
            F.line = 239;
            i_436207946 = addInt(i_436207946, 1);
            if (!(((statement_603985027.classMethods).length == L_436207947))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 464;
    var metaclass_603986123 = newClass_603981811(null, null, (statement_603985027.name.value || []).concat(makeNimstrLit(" metaclass") || []), classMethods_603985049[0], statement_603985027.name);
    if (!((statement_603985027.superclass == null))) {
    F.line = 467;
    self_603985026[self_603985026_Idx].env = newEnv_1056964626(self_603985026[self_603985026_Idx].env);
    F.line = 468;
    define_1056964628(self_603985026[self_603985026_Idx], "env", makeNimstrLit("super"), superclass_603985028);
    }
    
    F.line = 470;
    var methods_603986131 = [initTable_603985038(32)];
    Label4: do {
      F.line = 471;
      var m_603986135 = null;
      var m_603986135_Idx = 0;
      F.line = 235;
      var i_436207950 = 0;
      F.line = 236;
      var L_436207951 = (statement_603985027.methods).length;
      Label5: do {
        F.line = 237;
          Label6: while (true) {
          if (!(i_436207950 < L_436207951)) break Label6;
            F.line = 471;
            m_603986135 = statement_603985027.methods; m_603986135_Idx = chckIndx(i_436207950, 0, (statement_603985027.methods).length - 1);
            F.line = 472;
            var function_603986136 = newFunction_603981224(m_603986135[m_603986135_Idx].name.value, m_603986135[m_603986135_Idx].function, self_603985026[self_603985026_Idx].env, eqStrings(m_603986135[m_603986135_Idx].name.value, makeNimstrLit("new")));
            F.line = 471;
            HEX5BHEX5DHEX3D_603985095(methods_603986131[0], m_603986135[m_603986135_Idx].name.value, function_603986136);
            F.line = 239;
            i_436207950 = addInt(i_436207950, 1);
            if (!(((statement_603985027.methods).length == L_436207951))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/system/iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 474;
    var class_603986183 = newClass_603981811(metaclass_603986123, superclass_603985028, statement_603985027.name.value, methods_603986131[0], statement_603985027.name);
    if (!((superclass_603985028 == null))) {
    F.line = 476;
    self_603985026[self_603985026_Idx].env = self_603985026[self_603985026_Idx].env.enclosing;
    }
    
    F.line = 478;
    assign_1056964642(self_603985026[self_603985026_Idx], "env", statement_603985027.name, class_603986183);
  framePtr = F.prev;

  
}

function eval_603986187(self_603985026, self_603985026_Idx, statement_603985027) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 452;
    eval_603985025(self_603985026, self_603985026_Idx, statement_603985027);
  framePtr = F.prev;

  
}

function rawGet_603979960(t_603979963, key_603979964, hc_603979965, hc_603979965_Idx) {
            var Temporary3;

  var result_603979966 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_603979965[hc_603979965_Idx] = hash_654311873(key_603979964);
    if ((hc_603979965[hc_603979965_Idx] == 0)) {
    F.line = 66;
    hc_603979965[hc_603979965_Idx] = 314159265;
    }
    
    if (((t_603979963.data).length == 0)) {
    F.line = 48;
    result_603979966 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_603980017 = (hc_603979965[hc_603979965_Idx] & (t_603979963.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_637534239(t_603979963.data[chckIndx(h_603980017, 0, (t_603979963.data).length - 1)].Field0)) break Label2;
            if (!(t_603979963.data[chckIndx(h_603980017, 0, (t_603979963.data).length - 1)].Field0 == hc_603979965[hc_603979965_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_603979963.data[chckIndx(h_603980017, 0, (t_603979963.data).length - 1)].Field1, key_603979964);            }          if (Temporary3) {
          F.line = 56;
          result_603979966 = h_603980017;
          break BeforeRet;
          }
          
          F.line = 57;
          h_603980017 = nextTry_637534242(h_603980017, (t_603979963.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_603979966 = subInt(-1, h_603980017);
  } while (false);
  framePtr = F.prev;

  return result_603979966;

}

function hasKey_603986249(t_603986252, key_603986253) {
  var result_603986254 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 371;
    var hc_603986255 = [0];
    F.line = 372;
    result_603986254 = (0 <= rawGet_603979960(t_603986252, key_603986253, hc_603986255, 0));
  framePtr = F.prev;

  return result_603986254;

}

function contains_603986243(t_603986246, key_603986247) {
  var result_603986248 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 382;
    result_603986248 = hasKey_603986249(t_603986246, key_603986247);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603986248;

}

function HEX5BHEX5D_603986315(t_603986318, key_603986319) {
  var result_603986320 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym20_603986321 = [0];
    F.line = 243;
    var indexHEX60gensym20_603986328 = rawGet_603979960(t_603986318, key_603986319, hcHEX60gensym20_603986321, 0);
    if ((0 <= indexHEX60gensym20_603986328)) {
    F.line = 244;
    result_603986320 = nimCopy(null, t_603986318.data[chckIndx(indexHEX60gensym20_603986328, 0, (t_603986318.data).length - 1)].Field2, NTI603979787);
    }
    else {
      F.line = 246;
    raiseKeyError_570428124(key_603986319);
    }
    
  framePtr = F.prev;

  return result_603986320;

}

function len_603986512(t_603986515) {
  var result_603986516 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 485;
    result_603986516 = t_603986515.counter;
  framePtr = F.prev;

  return result_603986516;

}

function len_603986847(t_603986850) {
  var result_603986851 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 485;
    result_603986851 = t_603986850.counter;
  framePtr = F.prev;

  return result_603986851;

}

function define_1056966021(env_1056966022, env_1056966022_Idx, name_1056966023, value_1056966024) {
  var F = {procname: "env.define", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/env.nim", line: 0};
  framePtr = F;
    F.line = 46;
    HEX5BHEX5DHEX3D_1056964757(env_1056966022[env_1056966022_Idx].values, name_1056966023, value_1056966024);
  framePtr = F.prev;

  
}

function find_603987095(a_603987098, item_603987099) {
  var result_603987100 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1834;
    result_603987100 = 0;
    Label1: do {
      F.line = 1835;
      var i_603987113 = null;
      var i_603987113_Idx = 0;
      F.line = 8;
      var i_436207992 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436207992 < (a_603987098).length)) break Label3;
            F.line = 1835;
            i_603987113 = a_603987098; i_603987113_Idx = chckIndx(i_436207992, 0, (a_603987098).length - 1);
            if ((i_603987113[i_603987113_Idx] == item_603987099)) {
            F.line = 1836;
            break BeforeRet;
            }
            
            F.line = 1835;
            result_603987100 = addInt(result_603987100, 1);
            F.line = 11;
            i_436207992 = addInt(i_436207992, 1);
          }
      } while (false);
    } while (false);
    F.line = 1838;
    result_603987100 = -1;
  } while (false);
  framePtr = F.prev;

  return result_603987100;

}

function contains_603987090(a_603987092, item_603987093) {
  var result_603987094 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/usr/local/Cellar/nim/1.6.2/nim/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1852;
    result_603987094 = (0 <= find_603987095(a_603987092, item_603987093));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_603987094;

}

function addGlobals_603983476(self_603983477, self_603983477_Idx, locals_603983480, env_603983481, statement_603983482) {
      var Temporary5;

  var F = {procname: "interpreter.addGlobals", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 525;
      var key_603986747 = null;
      F.line = 525;
      var value_603986748 = 0;
      F.line = 694;
      var L_436207966 = len_603986512(locals_603983480);
      Label2: do {
        F.line = 695;
        var h_436207968 = 0;
        F.line = 75;
        var colontmp__436207969 = 0;
        F.line = 695;
        colontmp__436207969 = (locals_603983480.data).length - 1;
        F.line = 90;
        var res_436207970 = 0;
        Label3: do {
          F.line = 91;
            Label4: while (true) {
            if (!(res_436207970 <= colontmp__436207969)) break Label4;
              F.line = 695;
              h_436207968 = res_436207970;
              if (isFilled_637534239(locals_603983480.data[chckIndx(h_436207968, 0, (locals_603983480.data).length - 1)].Field0)) {
              F.line = 525;
              key_603986747 = locals_603983480.data[chckIndx(h_436207968, 0, (locals_603983480.data).length - 1)].Field1;
              F.line = 525;
              value_603986748 = locals_603983480.data[chckIndx(h_436207968, 0, (locals_603983480.data).length - 1)].Field2;
              F.line = 525;
              HEX5BHEX5DHEX3D_1090519144(self_603983477[self_603983477_Idx].locals, key_603986747, value_603986748);
              if (!((len_603986512(locals_603983480) == L_436207966))) {
              F.line = 698;
              failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim(698, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 93;
              res_436207970 = addInt(res_436207970, 1);
            }
        } while (false);
      } while (false);
    } while (false);
      if (((statement_603983482.imports).length == 0)) Temporary5 = true; else {        Temporary5 = (statement_603983482.imports[chckIndx(0, 0, (statement_603983482.imports).length - 1)] == hash_654311873(makeNimstrLit("*")));      }    if (Temporary5) {
    Label6: do {
      F.line = 528;
      var key_603987082 = 0;
      F.line = 528;
      var value_603987083 = null;
      F.line = 694;
      var L_436207977 = len_603986847(env_603983481.values);
      Label7: do {
        F.line = 695;
        var h_436207979 = 0;
        F.line = 75;
        var colontmp__436207980 = 0;
        F.line = 695;
        colontmp__436207980 = (env_603983481.values.data).length - 1;
        F.line = 90;
        var res_436207981 = 0;
        Label8: do {
          F.line = 91;
            Label9: while (true) {
            if (!(res_436207981 <= colontmp__436207980)) break Label9;
              F.line = 695;
              h_436207979 = res_436207981;
              if (isFilled_637534239(env_603983481.values.data[chckIndx(h_436207979, 0, (env_603983481.values.data).length - 1)].Field0)) {
              F.line = 528;
              key_603987082 = env_603983481.values.data[chckIndx(h_436207979, 0, (env_603983481.values.data).length - 1)].Field1;
              F.line = 528;
              value_603987083 = env_603983481.values.data[chckIndx(h_436207979, 0, (env_603983481.values.data).length - 1)].Field2;
              F.line = 528;
              define_1056966021(self_603983477[self_603983477_Idx], "env", key_603987082, value_603987083);
              if (!((len_603986847(env_603983481.values) == L_436207977))) {
              F.line = 698;
              failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim(698, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 93;
              res_436207981 = addInt(res_436207981, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    }
    else {
      Label10: do {
        F.line = 531;
        var key_603987088 = 0;
        F.line = 531;
        var value_603987089 = null;
        F.line = 694;
        var L_436207984 = len_603986847(env_603983481.values);
        Label11: do {
          F.line = 695;
          var h_436207986 = 0;
          F.line = 75;
          var colontmp__436207987 = 0;
          F.line = 695;
          colontmp__436207987 = (env_603983481.values.data).length - 1;
          F.line = 90;
          var res_436207988 = 0;
          Label12: do {
            F.line = 91;
              Label13: while (true) {
              if (!(res_436207988 <= colontmp__436207987)) break Label13;
                F.line = 695;
                h_436207986 = res_436207988;
                if (isFilled_637534239(env_603983481.values.data[chckIndx(h_436207986, 0, (env_603983481.values.data).length - 1)].Field0)) {
                F.line = 531;
                key_603987088 = env_603983481.values.data[chckIndx(h_436207986, 0, (env_603983481.values.data).length - 1)].Field1;
                F.line = 531;
                value_603987089 = env_603983481.values.data[chckIndx(h_436207986, 0, (env_603983481.values.data).length - 1)].Field2;
                if (contains_603987090(statement_603983482.imports, key_603987088)) {
                F.line = 533;
                define_1056966021(self_603983477[self_603983477_Idx], "env", key_603987088, value_603987089);
                }
                
                if (!((len_603986847(env_603983481.values) == L_436207984))) {
                F.line = 698;
                failedAssertImpl_218103864(makeNimstrLit("/usr/local/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim(698, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                F.line = 93;
                res_436207988 = addInt(res_436207988, 1);
              }
          } while (false);
        } while (false);
      } while (false);
    }
    
  framePtr = F.prev;

  
}

function eval_603986188(self_603986189, self_603986189_Idx, statement_603986190) {
    var Temporary1;
    var Temporary2;

  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 481;
    var source_603986191 = [];
    F.line = 482;
    var path_603986192 = [];
    F.line = 484;
    var possiblePath_603986193 = eval_603981191(self_603986189, self_603986189_Idx, statement_603986190.name);
    if (!(isObj(possiblePath_603986193.m_type, NTI1040187404))) {
    F.line = 485;
    error_1006633457(statement_603986190.keyword, makeNimstrLit("RuntimeError"), makeNimstrLit("Path must be string"));
    }
    
    F.line = 487;
    var strPossiblePath_603986200 = nimCopy(null, possiblePath_603986193.value, NTI33554439);
    if (contains_603986243(slapStdLibs_603981183, strPossiblePath_603986200)) {
    F.line = 489;
    source_603986191 = nimCopy(null, (Temporary1 = HEX5BHEX5D_603986315(slapStdLibs_603981183, strPossiblePath_603986200), Temporary1)[chckIndx(0, 0, (Temporary1).length - 1)], NTI33554439);
    F.line = 490;
    path_603986192 = nimCopy(null, (Temporary2 = HEX5BHEX5D_603986315(slapStdLibs_603981183, strPossiblePath_603986200), Temporary2)[chckIndx(1, 0, (Temporary2).length - 1)], NTI33554439);
    }
    else {
      F.line = 492;
    error_1006633457(statement_603986190.keyword, makeNimstrLit("RuntimeError"), makeNimstrLit("Cannot import a file in the playground."));
    }
    
    F.line = 495;
    var lexer_603986443 = [({tokens: [], current: 0, line: 0})];
    F.line = 496;
    var tokens_603986444 = [];
    F.line = 497;
    var parser_603986445 = [({tokens: [], current: 0, loopDepth: 0, statements: []})];
    F.line = 498;
    var nodes_603986446 = [];
    F.line = 499;
    var resolver_603986447 = [null];
    F.line = 501;
++excHandler;
    try {
    F.line = 502;
    lexer_603986443[0] = nimCopy(lexer_603986443[0], newLexer_570426731(source_603986191, path_603986192), NTI570426075);
    F.line = 503;
    tokens_603986444 = nimCopy(null, tokenize_570427864(lexer_603986443[0]), NTI570426650);
    F.line = 504;
    parser_603986445[0] = nimCopy(parser_603986445[0], newParser_587202570(tokens_603986444), NTI587202563);
    F.line = 505;
    nodes_603986446 = nimCopy(null, parse_587202615(parser_603986445[0]), NTI587202614);
    F.line = 506;
    resolver_603986447[0] = newResolver_620757026(newInterpreter_603981192());
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555122))) {
    F.line = 508;
    error_1006633457(statement_603986190.keyword, makeNimstrLit("RuntimeError"), makeNimstrLit("Circular import"));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
    F.line = 510;
    resolve_620757134(resolver_603986447, 0, nodes_603986446);
    F.line = 511;
    var interpreter_603986448 = [resolver_603986447[0].interpreter];
    F.line = 512;
    interpret_603983494(interpreter_603986448, 0, nodes_603986446);
    F.line = 514;
    addGlobals_603983476(self_603986189, self_603986189_Idx, interpreter_603986448[0].locals, interpreter_603986448[0].env, statement_603986190);
  framePtr = F.prev;

  
}

function eval_603986449(self_603986189, self_603986189_Idx, statement_603986190) {
  var F = {procname: "interpreter.eval", prev: framePtr, filename: "/Users/nobu/WorkSpace/Nim/SLAP/copy_src/interpreter.nim", line: 0};
  framePtr = F;
    F.line = 480;
    eval_603986188(self_603986189, self_603986189_Idx, statement_603986190);
  framePtr = F.prev;

  
}
