#
# std.slap
# SLAP
#
# Created by Nobuharu Shimazu on 2/22/2022
#

# std.slap contains the core standard library for SLAP.

# identity returns its first argument
define identitiy(x) { return x; }

# join concatenates two lists and returns the
# joined list (does not mutate the original lists).
# signature: join(x: @[any], y: @[any]): @[any]
define join(x, y) {
    let newList = [];
    for ($i = 0; i < len(x); i = i + 1) newList->append(x@[i]);
    for ($j = 0; j < len(y); j = j + 1) newList->append(y@[j]);
    return newList;
}

# slice takes a list, and returns a copied "slice" of the
# original list from the range [x, y)
# signature: slice(list: @[any], x: int, y: int): @[any]
define slice(list, x, y) {
    let newList = [];
    for ($i = x; i < y; i = i + 1) newList->append(list@[i]);
    return newList;
}